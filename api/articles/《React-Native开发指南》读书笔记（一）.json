{"title":"《React Native开发指南》读书笔记（一）","slug":"《React-Native开发指南》读书笔记（一）","date":"2017-11-18T04:23:39.000Z","updated":"2018-04-21T14:55:33.430Z","comments":true,"path":"api/articles/《React-Native开发指南》读书笔记（一）.json","excerpt":"前面学习前端技术一方面是为项目做准备，另一方面也是为现在跨平台开发打基础。<br>","covers":null,"content":"<p>前面学习前端技术一方面是为项目做准备，另一方面也是为现在跨平台开发打基础。<br><a id=\"more\"></a></p><p>我选择的是先看 《React Native开发指南》 入门。</p><h1 id=\"第1章-初识-React-Native\"><a href=\"#第1章-初识-React-Native\" class=\"headerlink\" title=\"第1章 初识 React Native\"></a>第1章 初识 React Native</h1><p><a href=\"https://facebook.github.io/react-native/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">React Native</a> 是一款用来开发真正原生、可渲染 iOS 和 Android 移动应用的 JavaScript 框架。<br>React Native 结合了 Web 应用和 Native 应用的优势，可以使用 JavaScript 来开发 iOS 和 Android 原生应用。<br>在 JavaScript 中用 React 抽象操作系统原生的 UI 组件，代替 DOM 元素来渲染等。</p><h1 id=\"第2章-React-Native-工作原理\"><a href=\"#第2章-React-Native-工作原理\" class=\"headerlink\" title=\"第2章 React Native 工作原理\"></a>第2章 React Native 工作原理</h1><p>React Native 使用 Virtual DOM 作为中间层，介于开发者描述的视图与实际页面渲染的视图之间。<br>Virtual DOM 不仅能提升性能，而且提供了强大的抽象能力，在开发者代码和实际渲染之间加入一个抽象层。</p><p>React Native 调用 Objective-C 的 API 渲染 iOS 组件，调用 Java 接口渲染 Android 组件，而不是渲染到浏览器 DOM 上。</p><p>React Native 的渲染周期和 React 完全相同；组件也很类似，只是名称有差别，但是和原生的组件名字差不多；使用 JSX 以及 React 的内联样式。</p><p>React Native 同样可以调用宿主平台的接口，比如数据存储，操控硬件设备等等。</p><h1 id=\"第3章-构建你的第一个应用\"><a href=\"#第3章-构建你的第一个应用\" class=\"headerlink\" title=\"第3章 构建你的第一个应用\"></a>第3章 构建你的第一个应用</h1><p>类似 React ，使用 React Native 构建 Android 应用，可使用 <code>create-react-native-app</code> 脚手架工具。</p><pre><code class=\"JSX\">npm install -g create-react-native-app\n</code></pre><p>安装完成后执行以下命令即可创建 React Native 项目：</p><pre><code class=\"JSX\">create-react-native-app first-react-native-app\n// 打开项目目录\ncd first-react-native-app\nnpm start\n</code></pre><p>基本上就构建完成。</p><p>运行在 Andoroid 系统:</p><pre><code class=\"JSX\">npm run android\n</code></pre><p>代码也比较容易理解：</p><pre><code class=\"JSX\">import React from &#39;react&#39;;\nimport { StyleSheet, Text, View } from &#39;react-native&#39;;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      &lt;View style={styles.container}&gt;\n        &lt;Text&gt;Open up App.js to start working on your app!&lt;/Text&gt;\n        &lt;Text&gt;Changes you make will automatically reload.&lt;/Text&gt;\n        &lt;Text&gt;Shake your phone to open the developer menu.&lt;/Text&gt;\n      &lt;/View&gt;\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: &#39;#fff&#39;,\n    alignItems: &#39;center&#39;,\n    justifyContent: &#39;center&#39;,\n  },\n});\n</code></pre><p>感觉和 React.js 差不多，比较容易理解。</p>","categories":[{"name":"跨平台技术","path":"api/categories/跨平台技术.json"}],"tags":[{"name":"读书笔记","path":"api/tags/读书笔记.json"},{"name":"React Native","path":"api/tags/React Native.json"},{"name":"《React Native开发指南》","path":"api/tags/《React Native开发指南》.json"}]}