{"title":"《ArcGIS Runtime SDK for Android学习笔记》-9、ArcGIS for Android 常用数据加载方法","slug":"《ArcGIS-Runtime-SDK-for-Android学习笔记》-9、ArcGIS-for-Android-常用数据加载方法","date":"2017-03-02T03:55:42.000Z","updated":"2018-03-26T14:41:01.055Z","comments":true,"path":"api/articles/《ArcGIS-Runtime-SDK-for-Android学习笔记》-9、ArcGIS-for-Android-常用数据加载方法.json","excerpt":null,"covers":null,"content":"<h1 id=\"ArcGIS-for-Android-支持的空间数据类型\"><a href=\"#ArcGIS-for-Android-支持的空间数据类型\" class=\"headerlink\" title=\"ArcGIS for Android 支持的空间数据类型\"></a>ArcGIS for Android 支持的空间数据类型</h1><p>ArcGIS Runtime SDK for Android支持的空间数据源有多种，主要分为3大类：ArcGIS在线数据源、ArcGIS离线数据源（自10.2版本起），以及第三方数据源，详细的类别支持请见下表：</p><table><thead><tr><th>数据源类型</th><th>数据源名称</th></tr></thead><tbody><tr><td>ArcGIS在线数据源</td><td>切片地图服务（ArcGISTiledMapServiceLayer）、动态地图服务（ArcGISDynamicMapServiceLayer）、影像服务（ArcGISImageServiceLayer）、要素服务（ArcGISFeatureLayer）</td></tr><tr><td>ArcGIS离线数据源</td><td>紧凑型切片（ArcGISLocalTiledLayer）、tpk切片包（ArcGISLocalTiledLayer）、.geodatabase数据文件（GeodatabaseFeature）、.shp文件（ShapefileFeatureTable）、地名地址库（Locator）、网络数据集（Network Dataset）</td></tr><tr><td>第三方数据源</td><td>Bing地图（BingMapsLayer）、Open Street map（OpenStreetMapLayer）、OGC图层（KMLLayer、WMSLayer）、第三方自定义扩展图层</td></tr></tbody></table><h1 id=\"ArcGIS-for-Android-常用数据加载方法\"><a href=\"#ArcGIS-for-Android-常用数据加载方法\" class=\"headerlink\" title=\"ArcGIS for Android 常用数据加载方法\"></a>ArcGIS for Android 常用数据加载方法</h1><h2 id=\"ArcGISTiledMapServiceLayer\"><a href=\"#ArcGISTiledMapServiceLayer\" class=\"headerlink\" title=\"ArcGISTiledMapServiceLayer\"></a>ArcGISTiledMapServiceLayer</h2><p>ArcGISTiledMapServiceLayer图层对应ArcGIS for Server服务中的切片服务，由于切片都是事先做好的，ArcGISTiledMapServiceLayer不能对图层中的数据进行更改，除非更新服务缓存，在ArcGIS Runtime SDK for Android中，也不允许对此类型的数据进行查询，通常用做底图使用。同时，因为加载的是缓存切片，这个类型的图层是ArcGIS Runtime SDK for Android中相应请求最快的图层之一，它采用多个线程，通常是使用单独线程来处理请求和绘制图片，并且异步处理。用法如下：</p><pre><code class=\"java\">map = (MapView)findViewById(R.id.map);\n// Add tiled layer to MapView\nArcGISTiledMapServiceLayer tileLayer = new ArcGISTiledMapServiceLayer(&quot;http://services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer&quot;);\nmap.addLayer(tileLayer);\n</code></pre><h2 id=\"ArcGISDynamicMapServiceLayer\"><a href=\"#ArcGISDynamicMapServiceLayer\" class=\"headerlink\" title=\"ArcGISDynamicMapServiceLayer\"></a>ArcGISDynamicMapServiceLayer</h2><p>ArcGISDynamicMapServiceLayer图层对应ArcGIS for Server服务中的动态服务，动态地图服务的地图数据是按照移动设备范围读取的。 ArcGISDynamicMapServiceLayer图层通常包含多个图层，这些图层由server根据请求来渲染并以raster image形式返回，并且返回的raster并不包含feature的额外信息。它的功能特点是更新非常方便，并能及时呈现给用户，同时，图层的可视性和空间参考可以改变，可以给图层添加单独的layer definition，ArcGIS for Server为每个image动态投影，而地图的空间参考是由第一个加载的图层决定。</p><p>它的性能特点是，它的渲染时间取决于请求数据的数量和复杂度，因此一般都比tiled map server要慢，因此，它适合数据经常发生改变、或者需要针对不同的用户呈现不同的数据，且要素信息（如attributes，geometry，symbol等）不需要的情况。</p><p>它的用法与ArcGISTiledMapServiceLayer图层相同，示例代码如下：</p><pre><code class=\"java\">map = (MapView)findViewById(R.id.map);\n// Add DynamicMapServiceLayer to MapView\nArcGISDynamicMapServiceLayer agsDynlyr = new ArcGISDynamicMapServiceLayer(&quot;http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Population_World/MapServer&quot;);\nmap.addLayer(agsDynlyr);\n</code></pre><p><strong>在国内的话可以使用</strong><br><a href=\"http://www.geoq.cn/v1/basemap_free.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">智图</a> 提供的全国基础地图服务<br>服务地址：<br><a href=\"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer</a></p><h2 id=\"ArcGISImageServiceLayer\"><a href=\"#ArcGISImageServiceLayer\" class=\"headerlink\" title=\"ArcGISImageServiceLayer\"></a>ArcGISImageServiceLayer</h2><p>ArcGISImageServiceLayer图层对应ArcGIS for Server服务中的影像服务，它为移动端使用影像数据提供了一种途径，通过这种方式调用的影像数据通常可以用来作为底图。调用影像服务也非常简单，同调用上述服务一样，示例代码如下：</p><pre><code class=\"java\">map = (MapView)findViewById(R.id.map);\nmap.addLayer(new ArcGISImageServiceLayer(&quot;http://myserver/arcgis/rest/services/MyImage/ImageServer&quot;,null));\n</code></pre><h2 id=\"ArcGISFeatureLayer\"><a href=\"#ArcGISFeatureLayer\" class=\"headerlink\" title=\"ArcGISFeatureLayer\"></a>ArcGISFeatureLayer</h2><p>ArcGISFeatureLayer图层对应ArcGIS for Server服务中的Feature Service，该图层可以是空间图层，也可以是非空间的表，该图层包含了要素最丰富的信息，其中的每个要素都能被空间查询和SQL查询。从Feature Service中请求要素时以JSON格式返回，每个要素都单独渲染，因此与其它图层类型相比，要素图层具有最丰富的功能。</p><p>只有Feature Service（要素服务）才可以具备在线数据编辑功能，因此，如果想要对某个数据进行在线编辑或同步，需要将其发布成Feature Service，并在移动端新建一个ArcGISFeatureLayer图层以加载该服务。该图层有一些设定，这些设定能影响图层的性能，包括请求时间，返回大小、处理和响应时间等（设置需要在图层initialized完成之后进行）。</p><p>ArcGISFeatureLayer图层继承自GraphicsLayer，因此也具有该图层的所有操作。调用该图层的示例代码如下：</p><pre><code class=\"java\">String url =\n&quot;https://servicesbeta.esri.com/ArcGIS/rest/services/SanJuan/TrailConditions/FeatureServer/0&quot;;\nmap = (MapView)findViewById(R.id.map);\n//按照快照方式加载该图层\nmap.addLayer(new ArcGISFeatureLayer(url,MODE.ONDEMAND));\nsetContentView (map);\n</code></pre><h2 id=\"加载tpk和紧凑型切片\"><a href=\"#加载tpk和紧凑型切片\" class=\"headerlink\" title=\"加载tpk和紧凑型切片\"></a>加载tpk和紧凑型切片</h2><p>ArcGISLocalTiledLayer是ArcGIS Runtime SDK for Android中专门用来添加离线数据包（底图）的图层，该图层目前支持两种格式的离线数据：一个是紧凑型切片，另一个就是tpk。使用起来也很简单，实例化该类的一个对象，并在构造函数中输入数据的路径即可，代码示例如下：</p><pre><code class=\"java\">map = (MapView)findViewById(R.id.map);\n// Add Local tiled layer to MapView\nArcGISLocalTiledLayer agsLocaltiledlyr = new ArcGISLocalTiledLayer(&quot;file:///mnt/sdcard/ArcGIS/sample/HelloWorld/Layers&quot;);\nmap.addLayer(agsLocaltiledlyr);\n</code></pre><h2 id=\"加载影像数\"><a href=\"#加载影像数\" class=\"headerlink\" title=\"加载影像数\"></a>加载影像数</h2><p>ArcGIS Runtime SDK for Android 从10.2.4开始支持直接读取本地影像数据，数据类型包含：ASRP/USRP、CIB1,5,10、DTED0, 1, 2、GeoPackage、GeoTIFF、HFA、HRE、IMG、JPEG、JPEG2000、NITF、PNG、RPF、SRTM1, FileRasterSource是加载本地影像数据文件类，地图视图中以RasterLayer作为图层对象展示出来。代码如下：</p><pre><code class=\"java\">String rasterPath = Environment.getExternalStorageDirectory().getPath() + &quot;/raster/test.tif&quot;;\nFileRasterSource rasterSource;\ntry {  \n rasterSource = new FileRasterSource(rasterPath);  \n} catch (IllegalArgumentException ie) {\n  Log.d(TAG, &quot;null or empty path&quot;);\n} catch (FileNotFoundException fe) {\n  Log.d(TAG, &quot;raster file doesn&#39;t exist&quot;);\n} catch (RuntimeException re) {\n  Log.d(TAG, &quot;raster file can&#39;t be opened&quot;);\n}\nRasterLayer rasterLayer = new RasterLayer(rasterSource);\nmMapView.addLayer(rasterLayer);\n</code></pre><h2 id=\"加载离线的-geodatabase-本地文件\"><a href=\"#加载离线的-geodatabase-本地文件\" class=\"headerlink\" title=\"加载离线的 .geodatabase 本地文件\"></a>加载离线的 .geodatabase 本地文件</h2><p>.geodatabase 文件是ArcGIS 10.2中专为业务数据的离线而推出的一种数据格式，本质上，它仍然是SQLite数据库的封装，在SQLite数据模型的基础上，Esri计划逐步实现桌面端Geodatabase数据模型的存储，不仅包括Feature Class，还包括镶嵌数据集、网络数据集等。目前，主要实现了Feature Class的存储。</p><p>即，在ArcGIS 10.2.2中，要使用完全的离线功能，可以使用ArcGIS for Desktop提供的GP工具来将需要编辑和离线的业务数据导出到.geodatabase中，也可以直接从ArcGIS for Server上的要素服务中下载数据，并在移动端存储为.geodatabase，从而实现完全离线的移动应用。</p><p>ArcGIS Runtime SDK for Android中也提供了具体的Geodatabase类和FeatureLayer图层来加载.geodatabase文件，常用的类包括Geodatabase、GeodatabaseFeatureTable、GeodatabaseFeature、GeodatabaseFeatureServiceTable等，分别用来打开geodatabase数据文件、获取要素图层、获取图层中的具体要素，以及获取在线的要素服务。具体来讲，加载.geodatabase文件的步骤有如下几步：</p><ol><li>实例化一个Geodatabase对象，这个类有两个构造函数，都需要指定本地数据库的存储路径；</li><li>创建一个GeodatabaseFeatureTable对象实例，用来获取需要的图层；</li><li>创建一个FeatureLayer来存储获取的图层，并将获取的图层加载到地图中；</li><li>调用dispose()方式释放资源。</li></ol><p>示例代码如下：</p><pre><code class=\"java\">//实例化geodatabase对象，并指定文件目录\ngdb = new Geodatabase(&quot;{/path/to/geodatabase}&quot;);\n//实例化gdbfeaturetable对象，并获取第一个图层\ngdbfeaturetable = gdb.getGeodatabaseFeatureTableByLayerId(0);\n//创建一个FeatureLayer来存储获取的图层，并将获取的图层加载到地图中\nfeaturelayer = new FeatureLayer(gdbfeaturetable);\nmMapView.removeAll();\nmMapView.addLayer(featurelayer);    \n//调用dispose()方式释放资源\ngdb.dispose();\n</code></pre><h2 id=\"加载ShapeFile文件\"><a href=\"#加载ShapeFile文件\" class=\"headerlink\" title=\"加载ShapeFile文件\"></a>加载ShapeFile文件</h2><p>ShapeFile文件：ArcGIS平台中最常见的数据格式，包含属性信息、投影信息等。新版本的SDK（10.2.4开始）可以直接加载.shp文件进行数据的展示、查询。代码加载如下：</p><pre><code class=\"java\">ShapefileFeatureTable shpTable = new ShapefileFeatureTable(shpUrl);\nFeatureLayer fl = new FeatureLayer(shpTable);\nfl.setRenderer(new SimpleRenderer(new SimpleMarkerSymbol(\n        Color.BLACK, 2, STYLE.CIRCLE)));\nmapView.addLayer(fl);\n</code></pre><blockquote><p>参考资料<br>1、《ArcGIS Runtime SDK for Android开发笔记》——（10）、ArcGIS Runtime SDK支持的空间数据类型 - gis-luq - 博客园 <a href=\"http://www.cnblogs.com/gis-luq/p/4941737.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://www.cnblogs.com/gis-luq/p/4941737.html</a><br>2、《ArcGIS Runtime SDK for Android开发笔记》——（11）、ArcGIS Runtime SDK常见空间数据加载 - gis-luq - 博客园 <a href=\"http://www.cnblogs.com/gis-luq/p/5062715.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://www.cnblogs.com/gis-luq/p/5062715.html</a></p></blockquote>","categories":[{"name":"移动GIS技术","path":"api/categories/移动GIS技术.json"}],"tags":[{"name":"Android","path":"api/tags/Android.json"},{"name":"ArcGIS","path":"api/tags/ArcGIS.json"},{"name":"ArcGIS Runtime SDK","path":"api/tags/ArcGIS Runtime SDK.json"},{"name":"ArcGIS for Android","path":"api/tags/ArcGIS for Android.json"}]}