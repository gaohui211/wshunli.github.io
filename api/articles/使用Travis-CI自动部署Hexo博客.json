{"title":"使用Travis CI自动部署Hexo博客","slug":"使用Travis-CI自动部署Hexo博客","date":"2017-11-09T11:14:08.000Z","updated":"2018-03-21T14:38:18.407Z","comments":true,"path":"api/articles/使用Travis-CI自动部署Hexo博客.json","excerpt":"随着 Hexo 文章的增多，加上压缩文件的时间，部署时间越来越长。","covers":["https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo1.png"],"content":"<p>随着 Hexo 文章的增多，加上压缩文件的时间，部署时间越来越长。</p><a id=\"more\"></a><p>我一般都是将博客的源文件保存到私有仓库中，虽然几个简单地命令就能部署，但是过程还是很繁琐。最近申请了 Github Student Developer Pack ，就想利用软件开发中的持续集成工具 Travis CI 来帮助完成 Hexo 博客的部署过程。这样就只需要把源代码 push 到仓库就能自动部署好了。</p><p>CI 是 Continuous Integration 的缩写，持续集成之意。持续集成是一种软件开发实践，每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。</p><h1 id=\"Hexo-搭建\"><a href=\"#Hexo-搭建\" class=\"headerlink\" title=\"Hexo 搭建\"></a>Hexo 搭建</h1><p>关于 Hexo 博客的搭建请参考文章：<a href=\"https://www.wshunli.com/posts/9642fffa.html\">https://www.wshunli.com/posts/9642fffa.html</a></p><h1 id=\"Travis-CI-配置\"><a href=\"#Travis-CI-配置\" class=\"headerlink\" title=\"Travis CI 配置\"></a>Travis CI 配置</h1><p>1.使用 GitHub 账户登录 <a href=\"https://travis-ci.org\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Travis CI</a> 官网，然后用 Github 账号登陆，就可以看到可以持续集成的仓库。</p><p>还有个地址 <a href=\"https://travis-ci.com\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://travis-ci.com</a> 可以部署 Github 私有仓库。</p><p>选择要启用的项目，打开<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo1.png\" alt=\"\"></p><p>然后选择一些通用的设置<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo2.png\" alt=\"\"></p><p>2.登陆 GitHub –Settings -Developer Settings 选项，找到 Personal access tokens 页面。<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo3.png\" alt=\"\"></p><p>点击右上角的 Generate new token 按钮会生成新的token，点击后提示输入密码后继续，然后来到如下界面。<br>取个名字，勾选相应权限，这里只需要 repo 下全部和 user 下的 user:email 即可。<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo4.png\" alt=\"\"></p><p>生成完成后，将该token拷贝下来。<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo5.png\" alt=\"\"></p><p><strong>如果需要将代码同时部署到 Coding 类似</strong>：<br>3.登陆 Coding ，账户 -访问令牌，新建访问令牌：<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo-Coding1.png\" alt=\"\"></p><p>勾选相应权限：<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo-Coding2.png\" alt=\"\"></p><p>4.将上面获取到的token添加到 Environment Variables 部分，值为该 token ，而名称为 GH_TOKEN、CD_TOKEN 。<br><img src=\"https://img.wshunli.com/使用TravisCI自动部署Hexo博客/TravisCI-Hexo6.png\" alt=\"\"></p><h1 id=\"创建-travis-yml\"><a href=\"#创建-travis-yml\" class=\"headerlink\" title=\"创建 .travis.yml\"></a>创建 .travis.yml</h1><p>要想自动部署还需在博客源码新增加 <code>.travis.yml</code> 配置文件。</p><pre><code class=\"TXT\"># 设置语言\nlanguage: node_js\n# 设置相应的版本\nnode_js:\n  - &#39;6&#39;\n# 设置只监听哪个分支\nbranches:\n  only:\n    - master\n# 缓存，可以节省集成的时间\ncache:\n  directories:\n    - node_modules\nbefore_install:\n  - npm install -g hexo-cli\ninstall:\n  - npm install\nscript:\n  - hexo clean\n  - hexo g\nafter_script:\n    - cd ./public\n    - git init\n    - git config user.name &quot;yourname&quot; # 修改name\n    - git config user.email &quot;youremail&quot; # 修改email\n    - git add .\n    - git commit -m &quot;Travis CI Auto Builder&quot;\n    - git push --force --quiet &quot;https://${GH_TOKEN}@${GH_REF}&quot; master:master \n    # GH_TOKEN 是在 Travis 中配置 token 的名称\nbranches:\n    only:\n        - master #只监测 master 分支，master是我的分支的名称，可根据自己情况设置\nenv:\n    global:\n        - GH_REF: github.com/yourname/yourname.github.io.git \n        # 设置 GH_REF，注意更改 yourname\n</code></pre><h1 id=\"实现自动部署\"><a href=\"#实现自动部署\" class=\"headerlink\" title=\"实现自动部署\"></a>实现自动部署</h1><p>将原代码 push 到 Github 即可，如果配置没问题就该自动构建了。</p><h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>虽然实现了基本的自动部署，还是有问题的。</p><h2 id=\"master-commit-树被清空\"><a href=\"#master-commit-树被清空\" class=\"headerlink\" title=\"master commit 树被清空\"></a>master commit 树被清空</h2><p>自动部署会把原来的 commit 清空，显然不是我们想要的结果。</p><p>为了解决这个问题，将配置文件改为了如下的内容：</p><pre><code class=\"TXT\">after_script:\n    - git clone https://${GH_REF} .deploy_git\n    - cd .deploy_git\n    - git checkout master\n    - cd ../\n    - mv .deploy_git/.git/ ./public/\n    - cd ./public\n    - git config user.name &quot;yourname&quot;\n    - git config user.email &quot;your email&quot;\n    - git add .\n    - git commit -m &quot;Travis CI Auto Builder&quot;\n    - git push --force --quiet &quot;https://${GH_TOKEN}@${GH_REF}&quot; master:master\n</code></pre><h2 id=\"添加-commit-时间戳\"><a href=\"#添加-commit-时间戳\" class=\"headerlink\" title=\"添加 commit 时间戳\"></a>添加 commit 时间戳</h2><p>commit 的描述一直是 <code>Travis CI Auto Builder</code> 。</p><pre><code class=\"TXT\">Travis CI Auto Builder\nTravis CI Auto Builder\nTravis CI Auto Builder\n// 之前\nSite updated: 2017-11-07 22:05:16\nSite updated: 2017-11-07 17:19:32\nSite updated: 2017-11-06 18:04:53\n</code></pre><p>最终 <code>.travis.yml</code> 配置文件：</p><pre><code class=\"TXT\"># 设置语言\nlanguage: node_js\n# 设置相应的版本\nnode_js:\n  - &#39;6&#39;\n# 设置只监听哪个分支\nbranches:\n  only:\n    - master\n# 缓存，可以节省集成的时间\ncache:\n  directories:\n    - node_modules\nbefore_install:\n  - export TZ=&#39;Asia/Shanghai&#39;\n  - npm install -g hexo-cli\n  - chmod +x ./publish-to-gh-pages.sh\ninstall:\n  - npm install\nscript:\n  - hexo clean\n  - hexo g\n\nafter_script:\n  - ./publish-to-gh-pages.sh\nenv:\n    global:\n        - GH_REF: github.com/yourname/yourname.github.io.git\n        # 设置GH_REF，注意更改成自己的仓库地址\n        - CD_REF: git.coding.net/yourname/repository.git\n        # 同时部署到 Coding，repository 为仓库名称\n</code></pre><p>其中 <code>publish-to-gh-pages.sh</code> 文件：</p><pre><code class=\"TXT\">#!/bin/bash\nset -ev\ngit clone https://${GH_REF} .deploy_git\ncd .deploy_git\ngit checkout master\ncd ../\nmv .deploy_git/.git/ ./public/\ncd ./public\ngit config user.name  &quot;yourname&quot;\ngit config user.email &quot;youremail&quot;\ngit add .\ngit commit -m &quot;Travis CI Auto Builder at `date +&quot;%Y-%m-%d %H:%M&quot;`&quot;\ngit push --force --quiet &quot;https://${TravisCIToken}@${GH_REF}&quot; master:master\ngit push --force --quiet &quot;https://yourname:${CD_TOKEN}@${CD_REF}&quot; master:master\n# 同时部署到 Coding，注意修改 yourname\n</code></pre><blockquote><p>参考资料<br>1、使用Travis CI自动部署Hexo博客<br><a href=\"http://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/</a><br>2、使用 Travis CI 自动部署 Hexo<br><a href=\"http://www.jianshu.com/p/5e74046e7a0f\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://www.jianshu.com/p/5e74046e7a0f</a><br>3、使用 Travis 自动部署 Hexo 到 Github 与 自己的服务器<br><a href=\"https://segmentfault.com/a/1190000009054888\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://segmentfault.com/a/1190000009054888</a></p></blockquote>","categories":[{"name":"博客维护","path":"api/categories/博客维护.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"TravisCI","path":"api/tags/TravisCI.json"}]}