{"title":"Spring Boot 从入门到放弃：简单参数配置及环境分离","slug":"Spring-Boot-从入门到放弃：简单参数配置及环境分离","date":"2018-01-26T12:54:53.000Z","updated":"2018-04-14T14:51:42.872Z","comments":true,"path":"api/articles/Spring-Boot-从入门到放弃：简单参数配置及环境分离.json","excerpt":"本文记录下 Spring Boot 参数配置以及生产环境与开发环境分离配置。","covers":null,"content":"<p>本文记录下 Spring Boot 参数配置以及生产环境与开发环境分离配置。</p><a id=\"more\"></a><p>推荐使用 yml 配置 Spring Boot ，可以省略重复内容，也有较好的提示。</p><p>直接修改 <code>application.properties</code> 为 <code>application.yml</code> 即可。</p><h1 id=\"简单参数配置\"><a href=\"#简单参数配置\" class=\"headerlink\" title=\"简单参数配置\"></a>简单参数配置</h1><p>我们在使用 Spring Boot 时难免会使用一些简单的配置配置，<br>也就是在配置文件 <code>application.yml</code> 配置相应变量的值，然后使用 <code>@Value</code> 注解取得。</p><pre><code class=\"Java\">// application.yml\nusename: wshunli\n// HelloController\n@Value(value = &quot;${usename}&quot;)\nString wshunli;\n</code></pre><p>这样还是有点麻烦，我们可以新建一个类：</p><pre><code class=\"Java\">package com.wshunli.spring.boot.demo;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.stereotype.Component;\n\n@Component\n@ConfigurationProperties(prefix = &quot;hello&quot;)\npublic class Hello {\n\n    String name;\n    String content;\n\n    // 省略 get set 方法\n}\n</code></pre><p>这里可能提示添加依赖，我们根绝建议添加即可：</p><pre><code class=\"xml\">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;\n</code></pre><p>在配置文件中这样写：</p><pre><code class=\"yml\">hello:\n  name: hello prod\n  content: Spring Boot !\n</code></pre><p>在使用的地方：</p><pre><code class=\"Java\">@Autowired\nHello hello;\n</code></pre><p>使用 get 方法即可得到所需的值。</p><h1 id=\"环境分离\"><a href=\"#环境分离\" class=\"headerlink\" title=\"环境分离\"></a>环境分离</h1><p>添加两个文件 <code>application-dev.yml</code> 和 <code>application-prod.yml</code> 分别代表开发环境和生产环境。</p><p>例如：</p><p><code>application-dev.yml</code></p><pre><code class=\"yml\">server:\n  port: 8081\n\nhello:\n  name: hello dev\n  content: Spring Boot !\n</code></pre><p><code>application-prod.yml</code></p><pre><code class=\"yml\">server:\n  port: 808\n\nhello:\n  name: hello prod\n  content: Spring Boot !\n</code></pre><p>在原来的配置文件中添加：</p><pre><code class=\"yml\">spring:\n  profiles:\n    active: dev\n</code></pre><p>我们只需修改 <code>active</code> 的值即可在在环境之间切换，<br><code>dev</code> 代表开发环境配置，<code>prod</code> 代表生产环境配置。</p><p>本文源码：<a href=\"https://github.com/wshunli/spring-boot-demo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://github.com/wshunli/spring-boot-demo</a></p>","categories":[{"name":"后端技术","path":"api/categories/后端技术.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"},{"name":"Spring","path":"api/tags/Spring.json"},{"name":"Spring Boot","path":"api/tags/Spring Boot.json"}]}