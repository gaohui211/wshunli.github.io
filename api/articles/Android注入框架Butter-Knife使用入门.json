{"title":"Android注入框架Butter Knife使用入门","slug":"Android注入框架Butter-Knife使用入门","date":"2018-01-18T04:54:15.000Z","updated":"2018-04-23T14:56:37.534Z","comments":true,"path":"api/articles/Android注入框架Butter-Knife使用入门.json","excerpt":"Butter Knife 是一个专注于 Android 系统的 View 注入框架","covers":["https://img.wshunli.com/Android/ButterKnife/Screenshot_1516251143.png-hexo.png"],"content":"<p>Butter Knife 是一个专注于 Android 系统的 View 注入框架<a id=\"more\"></a>，可以减少大量的 findViewById 以及 setOnClickListener 代码，可视化一键生成。</p><h1 id=\"Butter-Knife-概述\"><a href=\"#Butter-Knife-概述\" class=\"headerlink\" title=\"Butter Knife 概述\"></a>Butter Knife 概述</h1><p>1.强大的View绑定和Click事件处理功能，简化代码，提升开发效率<br>2.方便的处理Adapter里的ViewHolder绑定问题<br>3.运行时不会影响APP效率，使用配置方便<br>4.代码清晰，可读性强</p><h1 id=\"Butter-Knife-上手使用\"><a href=\"#Butter-Knife-上手使用\" class=\"headerlink\" title=\"Butter Knife 上手使用\"></a>Butter Knife 上手使用</h1><p>0、首先为项目添加 Butter Knife 依赖：</p><pre><code class=\"gradle\">dependencies {\n  compile &#39;com.jakewharton:butterknife:8.8.1&#39;\n  annotationProcessor &#39;com.jakewharton:butterknife-compiler:8.8.1&#39;\n}\n</code></pre><p>1、简单使用示例:</p><p>首先在 onCreate 绑定 Activity 实例。</p><pre><code class=\"Java\">package com.wshunli.butterknifedemo;\n\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport butterknife.BindString;\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport butterknife.OnClick;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @BindView(R.id.button)\n    Button button;\n\n    @BindString(R.string.app_name)\n    String appName;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        ButterKnife.bind(this);\n\n    }\n\n    @OnClick(R.id.button)\n    void clickButton() {\n        Toast.makeText(this, appName, Toast.LENGTH_LONG).show();\n    }\n\n}\n</code></pre><p>其中：<code>@BindView</code> 根据控件 id 绑定；<code>@BindString</code> 绑定资源中的字符串；<code>@OnClick</code> 绑定按钮的单击事件。</p><p>3、最终效果：</p><p>点击按钮，显示app名称。</p><p><img src=\"https://img.wshunli.com/Android/ButterKnife/Screenshot_1516251143.png-hexo.png\" alt=\"最终效果\"></p><h1 id=\"Butter-Knife-方法详解\"><a href=\"#Butter-Knife-方法详解\" class=\"headerlink\" title=\"Butter Knife 方法详解\"></a>Butter Knife 方法详解</h1><p>1、绑定 Activity 和 Fragment</p><p>在 onCreate 中绑定 Activity</p><pre><code class=\"Java\">@Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n</code></pre><p>在 onCreateView 中绑定 Fragment</p><pre><code class=\"Java\"> @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View view = inflater.inflate(R.layout.fancy_fragment, container, false);\n    ButterKnife.bind(this, view);\n    // TODO Use fields...\n    return view;\n  }\n</code></pre><p>2、绑定布局中的 View</p><pre><code class=\"Java\">  @BindView(R.id.title) TextView title;\n  @BindView(R.id.subtitle) TextView subtitle;\n  @BindView(R.id.footer) TextView footer;\n</code></pre><p>3、在 Adapter ViewHolder 中绑定 View</p><pre><code class=\"Java\">  static class ViewHolder {\n    @BindView(R.id.title) TextView name;\n    @BindView(R.id.job_title) TextView jobTitle;\n\n    public ViewHolder(View view) {\n      ButterKnife.bind(this, view);\n    }\n  }\n</code></pre><p>4、绑定资源</p><pre><code class=\"Java\">  @BindString(R.string.title) String title;\n  @BindDrawable(R.drawable.graphic) Drawable graphic;\n  @BindColor(R.color.red) int red; // int or ColorStateList field\n  @BindDimen(R.dimen.spacer) Float spacer; // int (for pixel size) or float (for exact value) field\n  // ...\n</code></pre><p>5、绑定方法</p><pre><code class=\"Java\">@OnClick(R.id.submit)\npublic void submit() {\n  // TODO submit data to server...\n}\n</code></pre><p>或者</p><pre><code class=\"Java\">@OnClick(R.id.submit)\npublic void submit(View view) {\n  // TODO submit data to server...\n}\n</code></pre><p>甚至自动类型转换：</p><pre><code class=\"Java\">@OnClick(R.id.submit)\npublic void sayHi(Button button) {\n  button.setText(&quot;Hello!&quot;);\n}\n</code></pre><p>多个 View 绑定同一个事件：</p><pre><code class=\"Java\">@OnClick({ R.id.door1, R.id.door2, R.id.door3 })\npublic void pickDoor(DoorView door) {\n  if (door.hasPrizeBehind()) {\n    Toast.makeText(this, &quot;You win!&quot;, LENGTH_SHORT).show();\n  } else {\n    Toast.makeText(this, &quot;Try again&quot;, LENGTH_SHORT).show();\n  }\n}\n</code></pre><p>本文内容基于 Butter Knife 8.8.1 ，时间原因部分方法可能过时，最新版可参考 <a href=\"http://jakewharton.github.io/butterknife/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://jakewharton.github.io/butterknife/</a></p><blockquote><p>参考资料<br>1、JakeWharton/butterknife: Bind Android views and callbacks to fields and methods.<br><a href=\"https://github.com/JakeWharton/butterknife\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://github.com/JakeWharton/butterknife</a><br>2、ButterKnife使用详解 - ITjianghuxiaoxiong的专栏 - CSDN博客<br><a href=\"http://blog.csdn.net/itjianghuxiaoxiong/article/details/50177549\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">http://blog.csdn.net/itjianghuxiaoxiong/article/details/50177549</a></p></blockquote>","categories":[{"name":"移动端技术","path":"api/categories/移动端技术.json"}],"tags":[{"name":"Android","path":"api/tags/Android.json"},{"name":"ButterKnife","path":"api/tags/ButterKnife.json"}]}