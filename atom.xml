<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CirGIS</title>
  
  <subtitle>wshunli`s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wshunli.com/"/>
  <updated>2018-08-29T02:59:08.005Z</updated>
  <id>https://www.wshunli.com/</id>
  
  <author>
    <name>wshunli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jenkins及C++自动检测流水线搭建流程方法</title>
    <link href="https://www.wshunli.com/posts/22a0081c.html"/>
    <id>https://www.wshunli.com/posts/22a0081c.html</id>
    <published>2018-08-17T02:18:16.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要整理 UK 代码自动检测流水线搭建流程方法。</p><h1 id="UK-代码自动检测流水线搭建概述"><a href="#UK-代码自动检测流水线搭建概述" class="headerlink" title="UK 代码自动检测流水线搭建概述"></a>UK 代码自动检测流水线搭建概述</h1><p>依托 Atlas 实现 Pclint、Compile、CodeDEX、Cmetrics 流水线，自动 check 代码和 UK 要求的符合度。</p><h1 id="流水线-Cmetrics-代码量检测任务创建配置"><a href="#流水线-Cmetrics-代码量检测任务创建配置" class="headerlink" title="流水线 Cmetrics 代码量检测任务创建配置"></a>流水线 Cmetrics 代码量检测任务创建配置</h1><p>2.0、Cmetrics 环境</p><p>主要涉及 Python 环境搭建、Cmetrics 插件安装及其脚本部署。前面介绍已经比较详细，不再赘述。</p><p>2.1、Jenkins 中创建配置 Cmetrics 任务</p><p>创建 Cmetrics 任务前面也有介绍，但是配置任务时，我们可以将 Cmetrics 脚本路径写入环境参数，比如 cmetrics_dir ： /usr1/cmetrics 。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image001.png" alt="image"></p><p>执行以下 shell 脚本：</p><pre><code class="shell">cd $cmetrics_dirpython cmetrics.py -p 8 -fp /usr1/HEAD_OSP_Version/Version/USP_ONE_TRUNK/CI_USP_CONFIG -ft xml -d all -o /usr1/HEAD_OSP_Version/Version/cmetrics_CI_USP_CONFIG.xml</code></pre><p>最后收集报告即可。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image002.png" alt="image"></p><p>2.2、代码量较大相关问题解决方法</p><p>代码量过大，因而生成报告过大，脚本进程被杀死。</p><p>1、代码量较大导致构建失败</p><p>可以在一个任务里写七条脚本，这样会顺序队列执行，但是这样 Cmetrics 插件无法解析结果，并且无法与 Atalas 对接，不过可以正确生成报告。本文推荐拆分为七个 Jenkins 任务执行，每个个任务检查一个仓库。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image003.png" alt="image"></p><p>2、代码量较大导致同步时间较长</p><p>可以配置 RsyncFiles 和 RsyncExcludeFiles 参数减少代码的同步量，以提高效率。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image004.png" alt="image"></p><h1 id="流水线-Compile-代码编译任务创建配置"><a href="#流水线-Compile-代码编译任务创建配置" class="headerlink" title="流水线 Compile 代码编译任务创建配置"></a>流水线 Compile 代码编译任务创建配置</h1><p>3.1、编译任务创建配置</p><p>编译任务主要由 HWCompile 插件处理。</p><p>工作空间：USP_ONE_TRUNK/domain/trunk/ci_onetrunk/entrance/v1r17/OSP<br>编译脚本：osp_head_packet.sh</p><p>具体详细配置可参考：<br><a href="http://100.112.230.148:9999/job/UTS_V1R7_OSP_T_TEST_compile_version/" rel="external nofollow noopener noreferrer" target="_blank">http://100.112.230.148:9999/job/UTS_V1R7_OSP_T_TEST_compile_version/</a></p><p>3.2、编译告警日志收集</p><p>1、编译前删除所有日志，执行以下 shell 脚本：</p><pre><code class="shell">find $workspace_pom -name &quot;*.log&quot; -type f -print -exec rm -rf {} \;</code></pre><p>2、编译后收集日志，执行以下 shell 脚本：</p><pre><code class="shell">cd $workspace_pommkdir ./VersionLogfind . -name &quot;*.log&quot; -type f -print -exec cp {} ./VersionLog \;cd VersionLogfind . -name &quot;*.log&quot; -type f -print -exec cat {} \; &gt; build.txtcp /usr1/tools/ccgs/cwarning/cwarning.sh $workspace_pom/VersionLogchmod -R 755 ./cwarning.shsh ./cwarning.sh ./build.txt ./cwarning_result.txtexit 0</code></pre><p>思路流程如下：</p><p>（1）首先在工作空间创建日志目录，然后找到所有 .log 日志拷贝至日志目录；<br>（2）将所有日志合并为一个文件；<br>（3）执行 cwarning.sh 脚本并退出。</p><p>此脚本成功执行并正确生成结果，还是会导致 Jenkins 任务失败。</p><h1 id="流水线-Pclint-代码检测任务创建配置"><a href="#流水线-Pclint-代码检测任务创建配置" class="headerlink" title="流水线 Pclint 代码检测任务创建配置"></a>流水线 Pclint 代码检测任务创建配置</h1><p>Pclint 任务可由 Atalas 模板创建，使用 Windows 机器。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image005.png" alt="image"></p><p>其中：<br>ToolPath：Pclint 工具路径；SrcRootPath：代码根目录。<br>DefaultLntFile：默认的 lnt 文件路径；DefaultEnv： lnt 文件中的默认的环境变量。</p><p>模块配置中：<br>Include：需要检查的文件路径；Exclude：需要排除的文件路径。Env：环境变量。</p><p>本任务没有运行成功，问题已定位、正在解决。</p><h1 id="流水线-CodeDEX-代码检测任务创建配置"><a href="#流水线-CodeDEX-代码检测任务创建配置" class="headerlink" title="流水线 CodeDEX 代码检测任务创建配置"></a>流水线 CodeDEX 代码检测任务创建配置</h1><p>CodeDEX 任务同样可由 Atlas 创建，配置如下，其他为空。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image006.png" alt="image"></p><p>其中：<br>Tool Home 和 Tool Version 分别表示 CodeDEX 工具包安装路径及系统版本；<br>Executable：对代码进行编译的脚本；Working Dir：可执行编译脚本的执行路径。<br>具体到 Jenkins 任务中的配置如下，其实 Atlas 创建的任务是不能直接用的。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image007.png" alt="image"></p><p>需要注意一下几点：<br>1、 CodeDEX 插件不支持参数化，需要把具体内容填死，没有内容为空。<br>2、 注意 upload the middle file 参数，点开隐藏参数删除。<br>3、 注意 layerpath 参数，需要以 / 符号开头，表示文件夹。<br>4、 参数 mailto 为必填项，填工号即可。<br>5、 根据系统环境选择合适的检查脚本。<br>6、可选配置 RsyncFiles 和 RsyncExcludeFiles 参数，同步所需仓库，排除 .git 文件夹。</p><blockquote><p>参考资料：<br>1、【P&amp;S】 Cmetrics工具试用指南 - 云核心网系统工程能力中心 - 3MS知识管理社区<br><a href="http://3ms.[wshunli].com/km/groups/2033815/blogs/details/5582855" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/groups/2033815/blogs/details/5582855</a><br>2、CGPS/cmetrics/tree/master | iSource 5.0<br><a href="http://isource.[wshunli].com/CGPS/cmetrics/tree/master" rel="external nofollow noopener noreferrer" target="_blank">http://isource.[wshunli].com/CGPS/cmetrics/tree/master</a><br>3、linux中find与rm实现查找并删除目录或文件 - CSDN博客<br><a href="https://blog.csdn.net/wbaction/article/details/72794251" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/wbaction/article/details/72794251</a><br>4、Linux下用find查找并复制指定文件到指定目录下 - CSDN博客<br><a href="https://blog.csdn.net/mydriverc2/article/details/78805287" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/mydriverc2/article/details/78805287</a><br>5、bash - find: missing argument to -exec - Stack Overflow<br><a href="https://stackoverflow.com/questions/2961673/find-missing-argument-to-exec" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/2961673/find-missing-argument-to-exec</a><br>6、一起学shell（一）：合并文件夹下所有文件 - CSDN博客<br><a href="https://blog.csdn.net/navylq/article/details/9496573" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/navylq/article/details/9496573</a><br>7、l00370463/Atlas_Config_Com/tree/CodeGate | iSource 5.0<br><a href="http://rnd-isourceb.[wshunli].com/Atlas_Config_Com/CodeGate/ctrl_compile_warning/x86_warning_ctrl.sh" rel="external nofollow noopener noreferrer" target="_blank">http://rnd-isourceb.[wshunli].com/Atlas_Config_Com/CodeGate/ctrl_compile_warning/x86_warning_ctrl.sh</a><br>8、jenkins上windows的pclint插件使用指导 - 开发工具社区 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/6373/wiki_4440979.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/6373/wiki_4440979.html</a><br>9、Jenkins PCLint配置（CloudUGW18.10） - 李海燕的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5351877" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5351877</a><br>10、基于Jenkins的CodeDEX检查 - 云核心网系统工程能力中心 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/2033815/wiki_4383101.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2033815/wiki_4383101.html</a><br>11、CodeDEX搭建指导 - 处理器基础软件『芯随我动』 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/1503481/thread_5128047.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/1503481/thread_5128047.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要整理 UK 代码自动检测流水线搭建流程方法。&lt;/p&gt;&lt;h1 id=&quot;UK-代码自动检测流水线搭建概述&quot;&gt;&lt;a href=&quot;#UK-代码自动检测流水线搭建概述&quot; class=&quot;headerlink&quot; title=&quot;UK 代码自动检测流水线搭建概述&quot;&gt;&lt;/a&gt;UK 代码
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins与Atlas中间层系统对接流程方法</title>
    <link href="https://www.wshunli.com/posts/c74848c1.html"/>
    <id>https://www.wshunli.com/posts/c74848c1.html</id>
    <published>2018-08-11T01:59:05.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要整理 Jenkins 与 Atlas 对接流程方法。</p><h1 id="Jenkins-与-Atlas-对接概述"><a href="#Jenkins-与-Atlas-对接概述" class="headerlink" title="Jenkins 与 Atlas 对接概述"></a>Jenkins 与 Atlas 对接概述</h1><p>Atlas 是中间层的系统，负责工程和任务的执行流程、构建、结果展示，Jenkins 是最底层的应用系统，集成了任务和工程的基本配置，工程的任务执行、结果回收、机器调用和管理，都是 Jenkins 实现的。</p><p>新建流水线有两种方式：模板（Template Pipeline）和非模板流水线（Pipeline）。</p><p>前者可以使用 Atlas 创建 Jenkins 任务（并不是所有的 Jenkins 任务都可以模板创建），尤其是涉及到代码同步时，提高配置 Jenkins 任务准确度和效率，减少重复劳动。</p><p>后者主要用于 Atals 和 Jenkins 任务关联，需要先导入 Jenkins 视图，也可以在 Jenkins 中通过复制模板任务来创建，建议将下载和编译设置在同一任务。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image001.png" alt="image"></p><h1 id="Jenkins-与-Atlas-对接流程（Template-Pipeline）"><a href="#Jenkins-与-Atlas-对接流程（Template-Pipeline）" class="headerlink" title="Jenkins 与 Atlas 对接流程（Template Pipeline）"></a>Jenkins 与 Atlas 对接流程（Template Pipeline）</h1><p>首先在右上角选择合适的版本，没有权限时，注意添加权限。在基础信息设置流水线类型及名称；在流水线参数中设置工作空间及主源码仓库即可。</p><p>然后系统会自动添加 Stage 阶段，我们在相应的 Stage 添加合适的 Task 任务即可，如下图示。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image002.png" alt="image"></p><p>详细的模板创建可参考：<a href="http://3ms.[wshunli].com/hi/group/3211543/file_12423313.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/3211543/file_12423313.html</a></p><h1 id="Jenkins-与-Atlas-对接流程（Pipeline）"><a href="#Jenkins-与-Atlas-对接流程（Pipeline）" class="headerlink" title="Jenkins 与 Atlas 对接流程（Pipeline）"></a>Jenkins 与 Atlas 对接流程（Pipeline）</h1><p>非模板和模板非常类似，首先在基础信息选择流水线构建类型、名称，代码仓库地址、分支等信息。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image003.png" alt="image"></p><p>然后会进入和模板类似的界面，在这里关联 Jenkins 任务即可。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image004.png" alt="image"></p><p>关联 Jenkins 任务的流程方法如下：<br>1、 首先导入所需 Jenkins 视图；<br>2、 然后新建 Task 选择合适的 Jenkins 任务即可。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image005.png" alt="image"></p><p>最后流水线执行报告和非模板相同。</p><h1 id="相关问题及解决方法"><a href="#相关问题及解决方法" class="headerlink" title="相关问题及解决方法"></a>相关问题及解决方法</h1><p>1、 权限问题，联系添加权限解决。<br>2、 流水线重复执行问题，删除多余流水线，重新提交 MR 解决。<br>3、 Windows 从机无法下载源码，更新 tbs-git 插件至 2.7.7 ，安装 rsync 软件。<br>4、 Jenkins 任务不执行，更新 notification 插件版本至 1.9.7 。<br>5、 工程构建失败，注意 Maven 环境及镜像设置。</p><p>首先应该准备好 Jenkins 环境及插件，尤其注意其版本，其次注意 Slaver 机器的环境安装配置，比如任务所需操作系统，工具软件环境配置，针对 Java 流水线包括，Java 环境、Maven 构建工具等等。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image006.png" alt="image"></p><blockquote><p>参考资料：<br>1、精益流水线Atlas快速上手 - 李永峰的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5488779" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5488779</a><br>2、atlas、jenkins、cloudbuild、isource、smartide关联关系介绍 - 精益流水线 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/3211543/thread_7146097.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/3211543/thread_7146097.html</a><br>3、用rsync在linux编译机和windows桌面之间同步代码 - 黄岩的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/2652181" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/2652181</a><br>4、导入jenkins任务到atlas - 精益流水线 - 3MS知识管理社区<br><a href="http://3ms.[wshunli].com/km/groups/3211543/blogs/details/5535979" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/groups/3211543/blogs/details/5535979</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要整理 Jenkins 与 Atlas 对接流程方法。&lt;/p&gt;&lt;h1 id=&quot;Jenkins-与-Atlas-对接概述&quot;&gt;&lt;a href=&quot;#Jenkins-与-Atlas-对接概述&quot; class=&quot;headerlink&quot; title=&quot;Jenkins 与 Atlas
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘中国银联面试</title>
    <link href="https://www.wshunli.com/posts/b372432c.html"/>
    <id>https://www.wshunli.com/posts/b372432c.html</id>
    <published>2018-08-08T05:22:35.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码（unionpay）查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码（unionpay）查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【密码公开】【Offer】记录2018年秋季校园招聘中国银联面试（客户端开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘</title>
    <link href="https://www.wshunli.com/posts/8dfab246.html"/>
    <id>https://www.wshunli.com/posts/8dfab246.html</id>
    <published>2018-07-30T01:24:39.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>好多公司的秋招内推已经开始了，本文记录下今年的应聘情况。</p><p>参考工信部互联网企业百强名单，搜集资料。</p><p>1、阿里巴巴</p><p><a href="https://campus.alibaba.com/index.htm" rel="external nofollow noopener noreferrer" target="_blank">https://campus.alibaba.com/index.htm</a></p><p>内推简历投递时间：7月16日至8月17日<br>网申简历投递时间：7月16日至8月17日</p><blockquote><p>客户端开发工程师、IoT开发工程师（安卓方向）<br>熟悉 iOS/Android 平台原理机制,具备客户端性能优化的经验有一定软件架构设计能力，熟悉常见的异步、同步、多线程、跨进程、组件、容器的设计方法<br>具备扎实的数据结构和计算机系统基础，编码功底扎实<br>具备 C++ 跨平台开发经验，熟悉NDK开发优先<br>具备创新业务技术攻关和落地能力者优先（不限于算法、生物识别、图形图像、3D建模、AR、多媒体等领域）</p></blockquote><p>工作地点：无锡市,上海市,深圳市,北京市,广州市,杭州市</p><p>地图工艺工程师、工作地点：北京</p><p>2、腾讯</p><p><a href="https://join.qq.com/index.php" rel="external nofollow noopener noreferrer" target="_blank">https://join.qq.com/index.php</a></p><p>网申：7月25日至9月12日<br>内推：7月25日至9月14日<br>笔试：9月16日至9月17日<br>面试：9月26日起</p><blockquote><p>软件开发-移动客户端开发方向<br>计算机软件相关专业本科及以上学历。<br>对于创新及解决具有挑战性的问题充满激情。<br>热爱编程，基础扎实，理解算法和数据结构相关知识。<br>至少掌握一种编程语言，C/C++/Java编程经验优先。<br>有IOS、Android、Windows、Phone开发经验优先。</p></blockquote><p>工作地点：深圳总部 北京 上海 广州 成都</p><p>3、百度</p><p><a href="https://talent.baidu.com/external/baidu/campus.html" rel="external nofollow noopener noreferrer" target="_blank">https://talent.baidu.com/external/baidu/campus.html</a></p><p>网申：7月23日-9月8日<br>笔试：9月11日<br>面试：9月14日-9月21日（待定）</p><blockquote><p>移动软件研发工程师<br>计算机软件、通讯相关专业<br>热爱移动互联网，对移动软件开发有浓厚的兴趣<br>优秀的分析问题和解决问题的能力，对解决具有挑战性问题充满激情<br>熟悉一门常用编程语言(C/C++/Java/Objective C)<br>对数据结构和算法设计有较为深刻的理解<br>学习能力强，具有良好的沟通能力和良好的团队合作精神<br>具有以下条件者优先：<br>熟悉手机研发平台(Android/iPhone/Windows Phone 7等)者优先<br>熟悉HTML/WML/CSS等相关规范<br>熟悉Javascript与DOM规范<br>熟悉webkit或其他任意一种浏览器内核<br>熟悉HTML5编程技术<br>熟悉Linux操作系统<br>熟悉数据库原理和技术，熟练使用SQL<br>熟悉TCP/IP，HTTP，HTTPS等网络协议优先</p></blockquote><p>工作地点：北京 上海 深圳</p><p>4、京东</p><p><a href="http://campus.jd.com/" rel="external nofollow noopener noreferrer" target="_blank">http://campus.jd.com/</a></p><p>网申：2018年7月13日-2018年9月6日<br>面试：2018年9月25日-29日<br>Offer：2018年10月15日前</p><blockquote><p>Android开发工程师<br>2019年毕业，计算机软件相关专业本科及以上学历<br>负责Android移动终端设备应用程序的开发和技术实现，在资源受限的移动终端设备上做精简和高性能的设计，开发面向用户的产品<br>对于创新及解决具有挑战性的问题充满激情<br>热爱编程，基础扎实，理解算法和数据结构相关知识<br>对Android开发有经验者优先</p></blockquote><p>工作地：北京,上海,武汉</p><p>5、网易【内推投递】</p><p><a href="https://campus.163.com/app/index" rel="external nofollow noopener noreferrer" target="_blank">https://campus.163.com/app/index</a></p><p>内推投递：2018年7月16日-8月8日（仅开放技术类岗位，拿到内推码即可参加内推哟~）<br>网申投递：2018年8月9日-9月5日（网易杭州），2018年8月9日-9月25日（网易北京&amp;网易有道）</p><blockquote><p>Android开发工程师（网易杭州）<br>你将把所学付诸实践，用牛逼的代码去推动一个app的产生和优化；<br>你将充分展示逻辑的魅力，用你严谨的思维来保证一个项目高效高质量的完成；<br>你将负责Android平台移动应用的开发，平台的搭建是你，重要模块的设计是你，产品性能的优化是你，是你是你都是你。</p></blockquote><p>工作地点：杭州</p><p><strong>投递记录</strong>：</p><p>2018.08.06 内推投递 Android开发工程师（网易杭州）<br>投递邮箱 <a href="mailto:shunlimail@163.com" rel="external nofollow noopener noreferrer" target="_blank">shunlimail@163.com</a><br>内推码:87431XQ ：<a href="https://www.nowcoder.com/discuss/86551" rel="external nofollow noopener noreferrer" target="_blank">https://www.nowcoder.com/discuss/86551</a></p><p>2018.08.11 笔试</p><p>6、新浪</p><p><a href="http://career.sina.com.cn/welcome.html" rel="external nofollow noopener noreferrer" target="_blank">http://career.sina.com.cn/welcome.html</a></p><p>网申投递：8月6日-9月14日<br>内推投递：8月6日-9月14日<br>笔试时间：9月15日-9月16日<br>面试时间：9月底-10月中旬<br>面试地点：哈尔滨、沈阳、成都、西安、武汉、北京。</p><blockquote><p>研发工程师_客户端方向（北京）<br>熟悉Android/iOS开发，热爱编程（包含在校项目）<br>熟悉常用网络协议包括tcp、http等<br>具备一定的产品意识，对社交网络产品有一定的理解<br>具备扎实的理论基础，熟悉常用的数据结构，算法以及数据库技术<br>具备一定的沟通能力，能够清晰地表达自己的想法</p></blockquote><p>7、搜狐</p><p>内推截止到8月22日，网申简历截止时间9月10日。</p><p><a href="http://campus.sohu.com/" rel="external nofollow noopener noreferrer" target="_blank">http://campus.sohu.com/</a></p><p><a href="http://campus.sogou.com/" rel="external nofollow noopener noreferrer" target="_blank">http://campus.sogou.com/</a></p><p>8、美团点评</p><p><a href="https://campus.meituan.com" rel="external nofollow noopener noreferrer" target="_blank">https://campus.meituan.com</a></p><p>内推投递：8月6日-9月14日<br>面试时间：9月6日-9月14日</p><blockquote><p>Android开发工程师<br>1.具备扎实的计算机编程基础，包括算法、数据结构、计算机网络等领域基础知识；<br>2.对Android系统各种功能有着执着的热爱和追求，对互联网产品有自己的体验使用经验和认知，对用户交互设计和视觉设计有一定感觉更佳；<br>3.熟悉Android平台工作机制、体系架构，掌握Java开发语言，并熟悉相关的开发工具平台，有已经发布上架的成品App更佳；<br>4.掌握至少一门非前端开发语言（如C/C++/PHP/Java/Python/Ruby等），并有一定的实践经验；<br>5.持续关注并实践HTML5、CSS3、ES6等各种新兴Web前端技术更佳；<br>如果，你对创建优雅、直观、高可用、高性能的用户界面和前端体验富有激情，我们将高举双手欢迎你！</p></blockquote><p>工作地点：北京、上海</p><p>9、360</p><p><a href="http://campus.chinahr.com/2018/qihu360/index.html" rel="external nofollow noopener noreferrer" target="_blank">http://campus.chinahr.com/2018/qihu360/index.html</a></p><p>10、小米</p><p><a href="https://hr.xiaomi.com/campus/index" rel="external nofollow noopener noreferrer" target="_blank">https://hr.xiaomi.com/campus/index</a></p><p>11、字节跳动【内推投递】</p><p><a href="https://job.bytedance.com/campus/position" rel="external nofollow noopener noreferrer" target="_blank">https://job.bytedance.com/campus/position</a></p><blockquote><p>Android开发工程师<br>1、本科及以上学历，计算机相关专业；<br>2、热爱计算机科学和互联网技术，对移动产品有浓厚兴趣；<br>3、扎实的数据结构和算法基础；精通至少一门编程语言，包括但不限于：Java、Objective-C、Swift、C、C++；<br>4、熟悉Android平台原理，具备将产品逻辑抽象为技术方案的能力；<br>5、关注用户体验，能够积极把技术转化到用户体验改进上；<br>6、对新技术保持热情，具备良好的分析、解决问题的能力。</p></blockquote><p>工作地点：北京、上海、深圳、武汉</p><p><strong>投递记录</strong>：</p><p>2018.08.07 内推投递 Android开发工程师（武汉）</p><p><a href="https://www.nowcoder.com/discuss/90316" rel="external nofollow noopener noreferrer" target="_blank">https://www.nowcoder.com/discuss/90316</a></p><p>2018.08.12 笔试</p><p>12、网宿科技</p><p><a href="http://www.wangsu.com/about/school.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.wangsu.com/about/school.html</a></p><p>13、58集团</p><p><a href="http://campus.58.com/" rel="external nofollow noopener noreferrer" target="_blank">http://campus.58.com/</a></p><p>14、金山软件</p><p>猎豹移动：<a href="http://hr.cmcm.com/campus" rel="external nofollow noopener noreferrer" target="_blank">http://hr.cmcm.com/campus</a><br>西山居：<a href="http://hr.xishanju.com/" rel="external nofollow noopener noreferrer" target="_blank">http://hr.xishanju.com/</a><br>金山云：<a href="http://ksyun.hirede.com/CareerSite/CampusRecruit" rel="external nofollow noopener noreferrer" target="_blank">http://ksyun.hirede.com/CareerSite/CampusRecruit</a><br>金山办公：<a href="http://www.wps.cn/college/flow" rel="external nofollow noopener noreferrer" target="_blank">http://www.wps.cn/college/flow</a></p><p>15、携程</p><p><a href="http://campus.ctrip.com/" rel="external nofollow noopener noreferrer" target="_blank">http://campus.ctrip.com/</a></p><p>先整理那么多，大部分还没开始招聘。</p><p>中国银联【内推投递】</p><p><a href="http://companyads.51job.com/companyads/campus/zhongGuoYinLian/index.html" rel="external nofollow noopener noreferrer" target="_blank">http://companyads.51job.com/companyads/campus/zhongGuoYinLian/index.html</a></p><p>内推：7月23日至7月30日<br>笔试：8月2日<br>面试：8月8日至8月10日</p><blockquote><p>客户端开发工程师<br>全日制本科及以上学历，计算机、软件、通讯相关专业；<br>了解java+Android或者Object C／swift开发技术、Linux／Unix系统架构知识及计算机基础知识、客户端架构设计、安全技术、Volley、AFNetworking、gson等常用第三方软件库的知识；具有快速学习能力，能够迅速掌握移动支付、二维码、转接清算等银行卡产业知识；<br>严谨细致，具有较高的责任心、主动性、执行力、抗压能力、学习能力及创新精神。</p></blockquote><p>工作地点：上海</p><p>顺风科技</p><p><a href="http://campus.sf-tech.com.cn/campusRecruitment/Default.html?p=30217592346" rel="external nofollow noopener noreferrer" target="_blank">http://campus.sf-tech.com.cn/campusRecruitment/Default.html?p=30217592346</a></p><blockquote><p>Android开发工程师<br>1、国家统招本科及以上学历，计算机相关专业应届生；<br>2、熟悉Android开发平台及框架原理，熟悉Android NDK及相关驱动开发者优先；<br>3、熟悉网络原理及其编程技术；<br>4、熟悉Linux操作系统（了解Linux原理者优先，有Linux编程经验者优先）；<br>5、良好的英文文档阅读、理解、分析能力；<br>6、有较强的工作责任心、良好的学习能力。</p></blockquote><p>工作地点：深圳</p><blockquote><p>参考资料<br>1、工信部公布互联网企业100强榜单：阿里、腾讯、百度位列前三位<br><a href="https://www.yicai.com/news/100003059.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.yicai.com/news/100003059.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好多公司的秋招内推已经开始了，本文记录下今年的应聘情况。&lt;/p&gt;&lt;p&gt;参考工信部互联网企业百强名单，搜集资料。&lt;/p&gt;&lt;p&gt;1、阿里巴巴&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://campus.alibaba.com/index.htm&quot; rel=&quot;external n
      
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>沉迷学术，不可自拔（十一）</title>
    <link href="https://www.wshunli.com/posts/a7e2fd51.html"/>
    <id>https://www.wshunli.com/posts/a7e2fd51.html</id>
    <published>2018-07-27T06:41:47.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】算是人生的第一份工作吧
    
    </summary>
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/categories/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/tags/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
      <category term="胡思乱想" scheme="https://www.wshunli.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins安装Java代码质量分析工具</title>
    <link href="https://www.wshunli.com/posts/57f40b04.html"/>
    <id>https://www.wshunli.com/posts/57f40b04.html</id>
    <published>2018-07-25T01:15:32.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍 Checkstyle、PMD、FindBugs 三款主流的 Java 静态分析工具，以及 SourceMonitor 代码度量工具，Simian 代码重复检查工具等。</p><h1 id="Jenkins-安装-Java-代码质量分析工具"><a href="#Jenkins-安装-Java-代码质量分析工具" class="headerlink" title="Jenkins 安装 Java 代码质量分析工具"></a>Jenkins 安装 Java 代码质量分析工具</h1><p>在 Java 世界中，Checkstyle、PMD、FindBugs 插件是三款主流的静态分析工具。</p><p>1、Checkstyle 擅长检查编码标准和约定，编码行为以及其他的一些质量指标（如代码复杂度）。</p><p>Checkstyle（<a href="http://checkstyle.sourceforge.net/" rel="external nofollow noopener noreferrer" target="_blank">http://checkstyle.sourceforge.net/</a> ） 是 SourceForge 下的一个项目，提供了一个帮助 JAVA 开发人员遵守某些编码规范的工具。</p><p>CheckStyle 检验的主要内容包括：Javadoc 注释、命名约定、标题、Import 语句、体积大小、空白、修饰符、块、代码问题、类设计和混合检查（包括一些有用的比如非必须的 System.out 和 printstackTrace）。</p><p>在 Jenkins 中安装 CheckStyle 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;        &lt;artifactId&gt;maven-checkstyle-plugin&lt;/artifactId&gt;        &lt;version&gt;2.16&lt;/version&gt;        &lt;configuration&gt;            &lt;configLocation&gt;checkstyle.xml&lt;/configLocation&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>checkstyle:checkstyle</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin</a></p><p>2、PMD 类似于 Checkstyle ，它更加专注于编码和设计实践。</p><p>PMD（<a href="https://pmd.github.io/" rel="external nofollow noopener noreferrer" target="_blank">https://pmd.github.io/</a> ） An extensible cross-language static code analyzer.</p><p>专注于潜在的编码问题，比如未使用或者次优化的代码，代码大小和复杂性，以及良好的编码行为。</p><p>PMD 也附带了 CPD ，以支持探测重复或者近似重复代码。</p><p>在 Jenkins 中安装 PMD 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;        &lt;artifactId&gt;maven-pmd-plugin&lt;/artifactId&gt;        &lt;version&gt;3.5&lt;/version&gt;    &lt;/plugin&gt;            ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>pmd:pmd</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/PMD+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/PMD+Plugin</a></p><p>3、FindBugs 专注于识别潜在的危险和错误的代码。</p><p>FindBugs（<a href="http://findbugs.sourceforge.net/" rel="external nofollow noopener noreferrer" target="_blank">http://findbugs.sourceforge.net/</a> ） 检查应用程序的字节码来找出潜在的 bug 、性能问题或者差的编码行为。</p><p>在 Jenkins 中安装 FindBugs 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;        &lt;artifactId&gt;findbugs-maven-plugin&lt;/artifactId&gt;        &lt;version&gt;2.5.2&lt;/version&gt;        &lt;configuration&gt;            &lt;findbugsXmlOutput&gt;true&lt;/findbugsXmlOutput&gt;            &lt;findbugsXmlWithMessages&gt;true&lt;/findbugsXmlWithMessages&gt;            &lt;xmlOutput&gt;true&lt;/xmlOutput&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>findbugs:findbugs</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/FindBugs+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/FindBugs+Plugin</a></p><p>4、Static Analysis Collector 插件汇总静态分析结果</p><p>插件地址：<a href="https://wiki.jenkins.io/display/JENKINS/Analysis+Collector+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Analysis+Collector+Plugin</a></p><h1 id="Jenkins-安装-SourceMonitor-代码度量工具"><a href="#Jenkins-安装-SourceMonitor-代码度量工具" class="headerlink" title="Jenkins 安装 SourceMonitor 代码度量工具"></a>Jenkins 安装 SourceMonitor 代码度量工具</h1><p>SourceMonitor（<a href="http://www.campwoodsw.com/sourcemonitor.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.campwoodsw.com/sourcemonitor.html</a> ） 允许查看软件源代码内部，以了解项目拥有的代码量，并确定模块的相对复杂度。</p><p>在 Jenkins 中也有 SourceMonitor（<a href="https://github.com/jenkinsci/sourcemonitor-plugin" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jenkinsci/sourcemonitor-plugin</a> ）插件，但是好久没更新了，也存在一些问题（<a href="https://issues.jenkins-ci.org/browse/JENKINS-5741" rel="external nofollow noopener noreferrer" target="_blank">https://issues.jenkins-ci.org/browse/JENKINS-5741</a> ）。</p><p>报错如下：</p><pre><code class="TXT">Parsing sourcemonitor resultshudson.AbortException: Parsing file error    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorParser.invoke(SourceMonitorParser.java:70)    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorParser.invoke(SourceMonitorParser.java:45)    at hudson.FilePath.act(FilePath.java:1047)    at hudson.FilePath.act(FilePath.java:1025)    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorPublisher.perform(SourceMonitorPublisher.java:80)    at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)    at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:744)    at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:690)    at hudson.model.Build$BuildExecution.post2(Build.java:186)    at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:635)    at hudson.model.Run.execute(Run.java:1819)    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)    at hudson.model.ResourceController.execute(ResourceController.java:97)    at hudson.model.Executor.run(Executor.java:429)Build step &#39;Publish SourceMonitor results&#39; changed build result to FAILUREBuild step &#39;Publish SourceMonitor results&#39; marked build as failureFinished: FAILURE</code></pre><p>原因是在构建的时候需要添加 <code>sourcemonitor:sourcemonitor</code> 参数。</p><p>SourceMonitor 插件地址：<a href="https://plugins.jenkins.io/sourcemonitor" rel="external nofollow noopener noreferrer" target="_blank">https://plugins.jenkins.io/sourcemonitor</a></p><p>这里可以安装公司内部的 <code>hwSourceMonitor.hpi</code> 插件</p><p>参考资料：<br>1、<a href="http://3ms.[wshunli].com/km/blogs/details/2503631" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/2503631</a><br>2、<a href="http://3ms.[wshunli].com/hi/group/2033815/wiki_4496373.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2033815/wiki_4496373.html</a></p><p><del>也可以使用 HTML Publisher 插件解析 SourceMonitor 输出的 xml 结果。</del></p><p>0、准备 SourceMonitor 并安装 Jenkins Server 上。</p><p>本文安装在 <code>C:\Program Files (x86)\SourceMonitor\SourceMonitor.exe</code> 目录。</p><p>1、安装 HTML Publisher 插件。</p><p>HTML Publisher Plugin 用来把 SourceMonitor 检测的结果可视化。</p><p>2、在构建后添加 Windows 批处理命令。</p><pre><code class="Shell">&quot;C:\Program Files (x86)\SourceMonitor\SourceMonitor.exe&quot; /C &quot;C:\CI_Tools\SourceMonitorCommand.xml&quot;&quot;C:\CI_Tools\msxsl.exe&quot; SourceMonitorReport.xml &quot;C:\CI_Tools\SourceMonitorSummaryGeneration.xsl&quot; -o SourceMonitorSummaryGeneration.xml&quot;C:\CI_Tools\msxsl.exe&quot; SourceMonitorSummaryGeneration.xml &quot;C:\CI_Tools\SourceMonitor.xsl&quot; -o SourceMonitorResult.html</code></pre><p>其中 <code>SourceMonitorCommand.xml</code> 来自</p><p><code>C:\Program Files (x86)\SourceMonitor\Samples\sample_commands.xml</code></p><pre><code class="XML">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;sourcemonitor_commands&gt;    &lt;write_log&gt;true&lt;/write_log&gt;    &lt;command&gt;        &lt;project_file&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\target/sourcemonitor\project.smp&lt;/project_file&gt;        &lt;project_language&gt;Java&lt;/project_language&gt;        &lt;source_directory&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\src\main\java&lt;/source_directory&gt;        &lt;parse_utf8_files&gt;true&lt;/parse_utf8_files&gt;        &lt;file_extensions&gt;*.java&lt;/file_extensions&gt;        &lt;include_subdirectories&gt;true&lt;/include_subdirectories&gt;        &lt;export&gt;            &lt;export_file&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\target/sourcemonitor\sourcemonitor.xml&lt;/export_file&gt;            &lt;export_type&gt;2 (project details as XML)&lt;/export_type&gt;            &lt;export_option&gt;Include method metrics: option 3&lt;/export_option&gt;        &lt;/export&gt;    &lt;/command&gt;&lt;/sourcemonitor_commands&gt;</code></pre><p>需要下载 <code>msxsl</code> 工具（<a href="http://www.microsoft.com/en-us/download/details.aspx?id=21714" rel="external nofollow noopener noreferrer" target="_blank">http://www.microsoft.com/en-us/download/details.aspx?id=21714</a> ）并放置到 <code>C:\CI_Tools</code> 目录下。</p><p>3、最后添加 Publish HTML reports 即可。</p><p>不过我没有配置成功，总是提示找不到 <code>SourceMonitorReport.xml</code> 文件。</p><p>如果使用 SourceMonitor 插件遇到如下 OutOfMemoryError 错误。</p><pre><code class="TXT">FATAL: Java heap spacejava.lang.OutOfMemoryError: Java heap space</code></pre><p>解决办法：<a href="https://wiki.jenkins.io/display/JENKINS/Builds+failing+with+OutOfMemoryErrors" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Builds+failing+with+OutOfMemoryErrors</a></p><h1 id="Jenkins-安装-Simian-代码重复检查工具"><a href="#Jenkins-安装-Simian-代码重复检查工具" class="headerlink" title="Jenkins 安装 Simian 代码重复检查工具"></a>Jenkins 安装 Simian 代码重复检查工具</h1><p>Simian（<a href="http://www.harukizaemon.com/simian/" rel="external nofollow noopener noreferrer" target="_blank">http://www.harukizaemon.com/simian/</a> ） 是一个检查重复代码的工具。</p><p>这里可以使用公司内部的插件</p><p><a href="http://3ms.[wshunli].com/hi/group/2964/wiki_4145693.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2964/wiki_4145693.html</a></p><h1 id="Jenkins-安装-Cobertura-代码测试覆盖率工具"><a href="#Jenkins-安装-Cobertura-代码测试覆盖率工具" class="headerlink" title="Jenkins 安装 Cobertura 代码测试覆盖率工具"></a>Jenkins 安装 Cobertura 代码测试覆盖率工具</h1><p>Cobertura（<a href="https://sourceforge.net/projects/cobertura/" rel="external nofollow noopener noreferrer" target="_blank">https://sourceforge.net/projects/cobertura/</a> ） 一项衡量是否所有代码都被测到的工具。</p><p>在 Jenkins 中安装 Cobertura 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;        &lt;artifactId&gt;cobertura-maven-plugin&lt;/artifactId&gt;        &lt;version&gt;2.6&lt;/version&gt;        &lt;configuration&gt;            &lt;instrumentation&gt;                &lt;ignoreTrivial&gt;false&lt;/ignoreTrivial&gt;            &lt;/instrumentation&gt;            &lt;formats&gt;                &lt;format&gt;html&lt;/format&gt;                &lt;format&gt;xml&lt;/format&gt;            &lt;/formats&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>cobertura:cobertura</code> 参数。</p><p><code>compile -D cobertura.report.format=xml clean compile cobertura:cobertura</code></p><p>这里注意添加 <code>-D cobertura.report.format=xml</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/Cobertura+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Cobertura+Plugin</a></p><blockquote><p>参考资料<br>1、jenkins+maven配置Checkstyle+FindBugs+PMD - 简书<br><a href="https://www.jianshu.com/p/03b9e38d03b2" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/03b9e38d03b2</a><br>2、CheckStyle提高代码质量 - CSDN博客<br><a href="https://blog.csdn.net/lx_yoyo/article/details/73332590" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lx_yoyo/article/details/73332590</a><br>3、Jenkins+maven+checkstyle对java代码进行静态代码分析 - CSDN博客<br><a href="https://blog.csdn.net/hwhua1986/article/details/48339545" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/hwhua1986/article/details/48339545</a><br>4、Jenkins+maven+pmd对java代码进行静态代码分析 - CSDN博客<br><a href="https://blog.csdn.net/hwhua1986/article/details/48342745" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/hwhua1986/article/details/48342745</a><br>5、[Jenkins]持续集成环境下fingbug插件的安装使用与配置 - Amberly - 博客园<br><a href="https://www.cnblogs.com/amberly/p/7201041.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/amberly/p/7201041.html</a><br>6、静态检查——SourceMonitor的学习和使用 - CSDN博客<br><a href="https://blog.csdn.net/yf210yf/article/details/17535713" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yf210yf/article/details/17535713</a><br>7、[料理佳餚] Jenkins 增加 SourceMonitor Plugin | 軟體主廚的程式料理廚房 - 點部落<br><a href="https://dotblogs.com.tw/supershowwei/2015/10/14/153562" rel="external nofollow noopener noreferrer" target="_blank">https://dotblogs.com.tw/supershowwei/2015/10/14/153562</a><br>8、CI Server 16 - 整合程式碼複雜度及深度報表 (Source Monitor) - iT 邦幫忙<br><a href="https://ithelp.ithome.com.tw/articles/10107051" rel="external nofollow noopener noreferrer" target="_blank">https://ithelp.ithome.com.tw/articles/10107051</a><br>8、重复代码检查工具simian的基本用法 | 知行一<br><a href="http://purecpp.org/?p=92" rel="external nofollow noopener noreferrer" target="_blank">http://purecpp.org/?p=92</a><br>9、Jenkins集成Simian插件_百度经验<br><a href="https://jingyan.baidu.com/article/c45ad29ccbfd3a051653e272.html" rel="external nofollow noopener noreferrer" target="_blank">https://jingyan.baidu.com/article/c45ad29ccbfd3a051653e272.html</a><br>10、[料理佳餚] Jenkins 增加 Simian Plugin | 軟體主廚的程式料理廚房 - 點部落<br><a href="https://dotblogs.com.tw/supershowwei/2015/10/14/153561" rel="external nofollow noopener noreferrer" target="_blank">https://dotblogs.com.tw/supershowwei/2015/10/14/153561</a><br>11、代码测试覆盖率Cobertura使用 - CSDN博客<br><a href="https://blog.csdn.net/cathy_sunshine/article/details/75258298" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/cathy_sunshine/article/details/75258298</a><br>12、jenkins集成cobertura，调用显示cobertura的report - CSDN博客<br><a href="https://blog.csdn.net/yaominhua/article/details/40684647" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yaominhua/article/details/40684647</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍 Checkstyle、PMD、FindBugs 三款主流的 Java 静态分析工具，以及 SourceMonitor 代码度量工具，Simian 代码重复检查工具等。&lt;/p&gt;&lt;h1 id=&quot;Jenkins-安装-Java-代码质量分析工具&quot;&gt;&lt;a href=&quot;#J
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins服务搭建及环境配置</title>
    <link href="https://www.wshunli.com/posts/5d09cdc2.html"/>
    <id>https://www.wshunli.com/posts/5d09cdc2.html</id>
    <published>2018-07-24T11:16:40.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>Jenkins 是一款优秀的开源自动化服务器，允许持续集成和持续交付。Jenkins 支持数百个插件，以支持项目的构建、部署和自动化。</p><p>Jenkins 官网：<a href="https://jenkins.io/" rel="external nofollow noopener noreferrer" target="_blank">https://jenkins.io/</a></p><p>「持续集成（Continuous Integration）」、「持续交付（Continuous Delivery）」和「持续部署（Continuous Deployment）」这三个概念的解释。</p><p><strong>持续集成</strong> 强调开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。</p><p><strong>持续交付</strong> 在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境的「类生产环境」（production-like environments）中。</p><p><strong>持续部署</strong> 则是在持续交付的基础上，把部署到生产环境的过程自动化。</p><h2 id="Jenkins-基础环境"><a href="#Jenkins-基础环境" class="headerlink" title="Jenkins 基础环境"></a>Jenkins 基础环境</h2><p>Jenkins 使用 Java 编写，支持所有主流操作系统。</p><p>本文仅介绍在 Windows 操作系统下 Jenkins 单机本地部署。</p><p>首先应配置 Java 环境，然后部署 Tomcat 服务。</p><p>然后即可安装 Jenkins 应用。</p><p>安装步骤可参考：<a href="https://www.cnblogs.com/hdwang/p/6081994.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/hdwang/p/6081994.html</a></p><p>最后推荐安装一些工具包括：</p><p>1、Apache Maven 软件（特别是Java软件）项目管理及自动构建工具。</p><p>推荐 Maven 配置镜像。</p><pre><code class="XML">&lt;mirror&gt;    &lt;!--This sends everything else to /public --&gt;    &lt;id&gt;nexus-aliyun&lt;/id&gt;    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;    &lt;name&gt;Nexus aliyun&lt;/name&gt;    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;&lt;/mirror&gt;</code></pre><p>Maven 仓库阿里云镜像配置 - CSDN博客<br><a href="https://blog.csdn.net/cwenyifan/article/details/54864504" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/cwenyifan/article/details/54864504</a></p><p>在公司内部推荐使用</p><pre><code class="XML">&lt;mirror&gt;&lt;id&gt;rnd-[wshunli]&lt;/id&gt;    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;    &lt;name&gt;Maven China Mirror&lt;/name&gt;      &lt;url&gt;http://rnd-mirrors.[wshunli].com/maven/&lt;/url&gt;&lt;/mirror&gt;</code></pre><p>参考链接：MAVEN公司内部镜像配置&amp;Intellij IDEA MAVEN配置 - CE中间件与系统集成 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/2027489/wiki_4781465.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2027489/wiki_4781465.html</a></p><p>2、Git SVN 源代码版本控制工具。</p><p>具体安装配置操作可参考资料。</p><h2 id="Jenkins-全局工具配置"><a href="#Jenkins-全局工具配置" class="headerlink" title="Jenkins 全局工具配置"></a>Jenkins 全局工具配置</h2><p>JDK 配置 JAVA_HOME 目录即可</p><p>比如 <code>C:\Program Files\Java\jdk1.8.0_171</code></p><p>Git 配置 git.exe 文件即可</p><p>比如 <code>C:\Program Files\Git\bin\git.exe</code></p><p>Maven 配置 MAVEN_HOME 目录即可</p><p>比如 <code>D:\apache-maven\</code></p><h2 id="Jenkins-插件管理高级配置"><a href="#Jenkins-插件管理高级配置" class="headerlink" title="Jenkins 插件管理高级配置"></a>Jenkins 插件管理高级配置</h2><p>推荐配置 <strong>升级站点</strong></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.89/update-center.json" rel="external nofollow noopener noreferrer" target="_blank">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.89/update-center.json</a></p><p>公司内部推荐使用</p><p><a href="http://cmc-cd-mirror.rnd.[wshunli].com/jenkins-updates/update-center.json" rel="external nofollow noopener noreferrer" target="_blank">http://cmc-cd-mirror.rnd.[wshunli].com/jenkins-updates/update-center.json</a></p><p>参考链接：公司Jenkins插件中心上线啦，只需两步，免代理配置和漫长等待，轻松实现Jenkins插件在线自动安装和升级 - 刘珍珍的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5544279" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5544279</a></p><blockquote><p>参考资料<br>1、jenkins详解 - CSDN博客<br><a href="https://blog.csdn.net/qq_26848099/article/details/78901240" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/qq_26848099/article/details/78901240</a><br>2、如何理解持续集成、持续交付、持续部署？ - 知乎<br><a href="https://www.zhihu.com/question/23444990" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/23444990</a><br>3、使用jekins自动构建部署java maven项目（jdk1.7+tomcat7.0+jenkins2.19.3） - 追极 - 博客园<br><a href="https://www.cnblogs.com/hdwang/p/6081994.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/hdwang/p/6081994.html</a><br>4、Jenkins：插件安装失败问题 - 简书<br><a href="https://www.jianshu.com/p/2b7288e77ff8" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/2b7288e77ff8</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Jenkins 是一款优秀的开源自动化服务器，允许持续集成和持续交付。Jenkins 支持数百个插件，以支持项目的构建、部署和自动化。&lt;/p&gt;&lt;p&gt;Jenkins 官网：&lt;a href=&quot;https://jenkins.io/&quot; rel=&quot;external nofollow
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>在线直播技术解决方案及其实现方法（移动端）</title>
    <link href="https://www.wshunli.com/posts/8aeeab4a.html"/>
    <id>https://www.wshunli.com/posts/8aeeab4a.html</id>
    <published>2018-07-04T13:40:33.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>简单地记录下 Android 移动端直播技术实现方法。</p><p>目前对移动端直播技术实现方法了解还不够全面，本文仅介绍一种基于 RTMP 协议的在线直播实现方法。</p><p>直播系统可以简单地分为三部分：服务端、推流端、拉流端。</p><h1 id="简单的直播系统"><a href="#简单的直播系统" class="headerlink" title="简单的直播系统"></a>简单的直播系统</h1><p>1、服务端：SRS</p><p>SRS定位是运营级的互联网直播服务器集群，追求更好的概念完整性和最简单实现的代码。</p><p>源代码：<a href="https://github.com/ossrs/srs" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ossrs/srs</a></p><p>部署方法：<a href="https://github.com/ossrs/srs/wiki/v1_CN_SampleRTMP" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ossrs/srs/wiki/v1_CN_SampleRTMP</a></p><p>2、推流端：OBS Studio</p><p>OBS Studio 是一款优秀的开源直播推流软件，支持 Windows, Mac or Linux 操作系统。</p><p>官网：<a href="https://obsproject.com/" rel="external nofollow noopener noreferrer" target="_blank">https://obsproject.com/</a></p><p>3、拉流端：VLC media player</p><p>VLC 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。</p><p>官网：<a href="http://www.videolan.org/vlc/" rel="external nofollow noopener noreferrer" target="_blank">http://www.videolan.org/vlc/</a></p><p>其实这里好多视频播放器都支持的。</p><h1 id="移动端实现方法"><a href="#移动端实现方法" class="headerlink" title="移动端实现方法"></a>移动端实现方法</h1><p>1、服务端 SRS</p><p>服务端同样使用 SRS</p><p>2、推流端 yasea</p><p>yasea 是一个优秀的 RTMP 直播流推流库。</p><p>代码仓库：<a href="https://github.com/begeekmyfriend/yasea" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/begeekmyfriend/yasea</a></p><p>3、拉流端 ijkplayer</p><p>使用方法：<a href="https://www.wshunli.com/posts/2f3bf23c.html">https://www.wshunli.com/posts/2f3bf23c.html</a></p><p>源码编译：<a href="https://www.wshunli.com/posts/45f072c2.html">https://www.wshunli.com/posts/45f072c2.html</a></p><p>本文内容比较简单，后面有机会再深入了解。</p><blockquote><p>参考资料<br>1、Android手机直播（一）总览 - 简书<br><a href="https://www.jianshu.com/p/7ebbcc0c5df7" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/7ebbcc0c5df7</a><br>2、轻松入门Android直播相关技术 从0搭建直播系统 - CSDN博客<br><a href="https://blog.csdn.net/lmj623565791/article/details/77937483" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lmj623565791/article/details/77937483</a><br>3、Android直播实现（一）Android端推流、播放 - CSDN博客<br><a href="https://blog.csdn.net/mr_sk/article/details/71083366" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/mr_sk/article/details/71083366</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单地记录下 Android 移动端直播技术实现方法。&lt;/p&gt;&lt;p&gt;目前对移动端直播技术实现方法了解还不够全面，本文仅介绍一种基于 RTMP 协议的在线直播实现方法。&lt;/p&gt;&lt;p&gt;直播系统可以简单地分为三部分：服务端、推流端、拉流端。&lt;/p&gt;&lt;h1 id=&quot;简单的直播系统&quot;
      
    
    </summary>
    
      <category term="前端技术" scheme="https://www.wshunli.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="视频" scheme="https://www.wshunli.com/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="直播" scheme="https://www.wshunli.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
      <category term="前端" scheme="https://www.wshunli.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>沉迷学术，不可自拔（十）</title>
    <link href="https://www.wshunli.com/posts/4691b5a2.html"/>
    <id>https://www.wshunli.com/posts/4691b5a2.html</id>
    <published>2018-07-03T11:43:13.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】希望我的坚持，让我走得更高、看得更远
    
    </summary>
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/categories/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/tags/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
      <category term="胡思乱想" scheme="https://www.wshunli.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Android视频播放器ijkplayer源码编译</title>
    <link href="https://www.wshunli.com/posts/45f072c2.html"/>
    <id>https://www.wshunli.com/posts/45f072c2.html</id>
    <published>2018-06-26T06:55:55.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04 LTS 系统下编译 ijkplayer Android 源码。</p><p>前面介绍过 ijkplayer 的使用，要想支持更多的特性，还是需要编译下源码的。</p><p>本文编译源码的主要目的是支持更多的格式，以及支持 HTTPS 链接。</p><p>NDK 版本：android-ndk-r10e</p><p>ijkplayer 仓库地址 <a href="https://github.com/Bilibili/ijkplayer" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/Bilibili/ijkplayer</a></p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>0、最好还是在 Ubuntu 环境下编译，在 Windows 下编译可以参考</p><p><a href="https://blog.csdn.net/u010072711/article/details/51354834" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u010072711/article/details/51354834</a></p><p>并不推荐此方法。</p><p>1、然后需要有 Java 及 Android 环境，可参考</p><p><a href="https://www.wshunli.com/posts/80d94eb7.html">https://www.wshunli.com/posts/80d94eb7.html</a></p><p>2、编译之前，还要准备一些工具</p><pre><code class="Shell">sudo apt-get updatesudo apt-get install gitsudo apt-get install yasm</code></pre><h1 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h1><p>1、从 GitHub 拉取源码，并打开源码目录</p><pre><code class="Shell">git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-androidcd ijkplayer-android</code></pre><p>2、切换到指定版本，可在源码仓库查看</p><pre><code class="Shell">git checkout -B latest k0.8.8</code></pre><p>3、配置参数（可选操作，为了支持更多格式）</p><p>参数配置一共有三种方式，选择一种即可。</p><p>(1) 为支持更多的格式，我们选这种</p><pre><code class="Shell">cd configrm module.shln -s module-default.sh module.shcd ..</code></pre><p>(2) 支持 hevc 功能，而且精简后的库</p><pre><code class="Shell">cd configrm module.shln -s module-lite-hevc.sh module.shcd ..</code></pre><p>(3) 精简后的库，默认是这种配置</p><pre><code class="Shell">cd configrm module.shln -s module-lite.sh module.shcd ..</code></pre><p>4、初始化，主要是拉取 ijkplayer 的依赖等，输入命令</p><pre><code class="Shell">./init-android.sh</code></pre><p>初始化 openssl （可选操作，为了支持 HTTPS ）</p><pre><code class="Shell">./init-android-openssl.sh</code></pre><p>5、打开 <code>ijkplayer-android/android/contrib/</code> 目录，Android 下编译脚本就放在该目录下</p><pre><code class="Shell">cd android/contrib</code></pre><p>6、清理并编译 openssl 依赖（可选操作，为了支持 HTTPS ）</p><pre><code class="Shell">./compile-openssl.sh clean./compile-openssl.sh all</code></pre><p>7、清理并编译 ffmpeg 软解码库依赖</p><pre><code class="Shell">./compile-ffmpeg.sh clean./compile-ffmpeg.sh all</code></pre><p>如果遇到问题 <code>fatal error: linux/perf_event.h: No such file or directory</code></p><p>可参考：<a href="https://github.com/Bilibili/ijkplayer/issues/4125" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/Bilibili/ijkplayer/issues/4125</a></p><p>在 module-default.sh、module-lite-hevc.sh 中添加如下一行配置即可。</p><pre><code class="Shell">export COMMON_FF_CFG_FLAGS=&quot;$COMMON_FF_CFG_FLAGS --disable-linux-perf&quot;</code></pre><p>8、然后返回上级到 <code>ijkplayer-android/android/</code> 目录，编译源码</p><pre><code class="Shell">cd .../compile-ijk.sh all</code></pre><p>等待编译完成即可。</p><h1 id="导入使用"><a href="#导入使用" class="headerlink" title="导入使用"></a>导入使用</h1><p>打开 Android Studio 并导入 <code>ijkplayer-android/android/ijkplayer/</code> 即可。</p><p><img src="https://img.wshunli.com/Android/ijkplayer/ijkplayer-build.png" alt="ijkplayer-build"></p><p>在这个项目中 module 比较多，大多数是针对不同 CPU 架构的包。</p><blockquote><p>参考资料<br>1、Android 超好用的播放器——ijkplayer - 简书<br><a href="https://www.jianshu.com/p/c5d972ab0309" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/c5d972ab0309</a><br>2、IJKPlayer初识-编译与使用 - 简书<br><a href="https://www.jianshu.com/p/a425ee1c2aec" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/a425ee1c2aec</a><br>3、在ubuntu下编译ijkplayer-android - CSDN博客<br><a href="https://blog.csdn.net/u010072711/article/details/51438871" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u010072711/article/details/51438871</a><br>4、Android集成IjkPlayer - 简书<br><a href="https://www.jianshu.com/p/79b434b2d5c8" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/79b434b2d5c8</a><br>5、Ubuntu编译ijkplayer支持https和更多视频格式 - CSDN博客<br><a href="https://blog.csdn.net/DyncKathline/article/details/78223972" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/DyncKathline/article/details/78223972</a><br>6、Android，ijkplayer增加https协议支持，编译运行ijkplayer - CSDN博客<br><a href="https://blog.csdn.net/linchaolong/article/details/52805666" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/linchaolong/article/details/52805666</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu 16.04 LTS 系统下编译 ijkplayer Android 源码。&lt;/p&gt;&lt;p&gt;前面介绍过 ijkplayer 的使用，要想支持更多的特性，还是需要编译下源码的。&lt;/p&gt;&lt;p&gt;本文编译源码的主要目的是支持更多的格式，以及支持 HTTPS 链接。&lt;/p&gt;
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="ijkplayer" scheme="https://www.wshunli.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>Android视频播放器ExoPlayer使用入门</title>
    <link href="https://www.wshunli.com/posts/11deb252.html"/>
    <id>https://www.wshunli.com/posts/11deb252.html</id>
    <published>2018-06-23T11:02:59.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>EXOPlayer 是Google 官方开源的一款 Android 播放器，支持本地或者网络的音频和视频播放，支持 DASH、HLS 等流媒体协议，但是不支持 rtsp、rtmp 协议。</p><p>EXOPlayer 仓库地址：<a href="https://github.com/google/ExoPlayer" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/google/ExoPlayer</a></p><p>Google 的亲儿子，还是要学习下啊。</p><h1 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h1><p>引入依赖可以一次性全部引入所有依赖：</p><pre><code class="gradle">dependencies {    implementation &#39;com.google.android.exoplayer:exoplayer:2.X.X&#39;}</code></pre><p>也可以根据需要引入不同模块。</p><pre><code class="gradle">dependencies {    implementation &#39;com.google.android.exoplayer:exoplayer-core:2.X.X&#39;    implementation &#39;com.google.android.exoplayer:exoplayer-dash:2.X.X&#39;    implementation &#39;com.google.android.exoplayer:exoplayer-hls:2.X.X&#39;    implementation &#39;com.google.android.exoplayer:exoplayer-smoothstreaming:2.X.X&#39;    implementation &#39;com.google.android.exoplayer:exoplayer-ui:2.X.X&#39;}</code></pre><h1 id="入门使用"><a href="#入门使用" class="headerlink" title="入门使用"></a>入门使用</h1><p>EXOPlayer 使用是非常简单的，首先添加播放器控件。</p><pre><code class="XML">&lt;com.google.android.exoplayer2.ui.SimpleExoPlayerView    android:id=&quot;@+id/exoView&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot; /&gt;</code></pre><p>然后初始化播放器。</p><pre><code class="Java">private void initPlayer() {    //1. 创建一个默认的 TrackSelector    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();    TrackSelection.Factory videoTackSelectionFactory =            new AdaptiveTrackSelection.Factory(bandwidthMeter);    TrackSelector trackSelector =            new DefaultTrackSelector(videoTackSelectionFactory);    //2.创建ExoPlayer    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(this, trackSelector);    //3.创建SimpleExoPlayerView    simpleExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.exoView);    //4.为SimpleExoPlayer设置播放器    simpleExoPlayerView.setPlayer(simpleExoPlayer);    simpleExoPlayer.setPlayWhenReady(true);}</code></pre><p>最后添加视频资源就可以播放了。</p><pre><code class="Java">DataSource.Factory mediaDataSourceFactory = new DefaultDataSourceFactory(this,        Util.getUserAgent(this, &quot;ExoPlayerDemo&quot;));MediaSource mediaSource = new ExtractorMediaSource.Factory(mediaDataSourceFactory).createMediaSource(Uri.parse(&quot;http://streams.wshunli.com/videos/dyys_x264.mp4&quot;));simpleExoPlayer.prepare(mediaSource);</code></pre><p>注意添加网络权限，最终效果：</p><p><img src="https://img.wshunli.com/Android/ExoPlayer/exoplayer-result.min.jpg" alt="exoplayer-result"></p><blockquote><p>参考资料<br>1、EXOPlayer简要学习及应用 - CSDN博客<br><a href="https://blog.csdn.net/s1991721/article/details/77587308" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/s1991721/article/details/77587308</a><br>2、ExoPlayer开发指南（官方文档翻译） - CSDN博客<br><a href="https://blog.csdn.net/u014606081/article/details/76181049" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u014606081/article/details/76181049</a><br>3、Google Exoplayer 之全面认识 - Android - 掘金<br><a href="https://juejin.im/entry/5884061f128fe1006c34ea43" rel="external nofollow noopener noreferrer" target="_blank">https://juejin.im/entry/5884061f128fe1006c34ea43</a><br>4、ExoPlayer2.5 的简单使用 - 简书<br><a href="https://www.jianshu.com/p/c9b136fc16c7" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/c9b136fc16c7</a><br>6、ExoPlayer的使用介绍 - 简书<br><a href="https://www.jianshu.com/p/628481250b59" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/628481250b59</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;EXOPlayer 是Google 官方开源的一款 Android 播放器，支持本地或者网络的音频和视频播放，支持 DASH、HLS 等流媒体协议，但是不支持 rtsp、rtmp 协议。&lt;/p&gt;&lt;p&gt;EXOPlayer 仓库地址：&lt;a href=&quot;https://githu
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="ExoPlayer" scheme="https://www.wshunli.com/tags/ExoPlayer/"/>
    
  </entry>
  
  <entry>
    <title>Android视频播放器ijkplayer使用入门</title>
    <link href="https://www.wshunli.com/posts/2f3bf23c.html"/>
    <id>https://www.wshunli.com/posts/2f3bf23c.html</id>
    <published>2018-06-23T08:26:20.000Z</published>
    <updated>2018-08-29T02:59:08.005Z</updated>
    
    <content type="html"><![CDATA[<p>ijkplayer 是 Bilibili 基于 ffmpeg 开发并开源的轻量级视频播放器，支持播放本地网络视频，也支持流媒体播放。</p><p>支持 Android 和 iOS 操作系统，所以文章起名还是有点瑕疵的，哈哈哈 。</p><p>ijkplayer 仓库地址：<a href="https://github.com/Bilibili/ijkplayer" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/Bilibili/ijkplayer</a></p><p>目前 Android 主流的视频播放器是 ijkplayer、ExoPlayer、MediaPlayer。</p><p>其中 MediaPlayer 在前面介绍过了：《第一行代码》读书笔记（七） | CirGIS<br><a href="https://www.wshunli.com/posts/941f84ed.html">https://www.wshunli.com/posts/941f84ed.html</a></p><p>接下来两篇文章会分别介绍 ijkplayer 和 ExoPlayer 的使用，也为移动端直播技术打下基础。</p><h1 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h1><p>根据需要引入依赖，根据建议引入 java 、 armv7a 两种兼容性基本满足要求。</p><pre><code class="gradle">dependencies {    # required, enough for most devices.    compile &#39;tv.danmaku.ijk.media:ijkplayer-java:0.8.8&#39;    compile &#39;tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8&#39;    # Other ABIs: optional    compile &#39;tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8&#39;    compile &#39;tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8&#39;    compile &#39;tv.danmaku.ijk.media:ijkplayer-x86:0.8.8&#39;    compile &#39;tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8&#39;    # ExoPlayer as IMediaPlayer: optional, experimental    compile &#39;tv.danmaku.ijk.media:ijkplayer-exo:0.8.8&#39;}</code></pre><h1 id="添加播放控件"><a href="#添加播放控件" class="headerlink" title="添加播放控件"></a>添加播放控件</h1><p>本身 ijkplayer 是没有播放控件的，这里我们采用示例代码的播放控件。</p><p>\ijkplayer\android\ijkplayer\ijkplayer-example\src\main\java\tv\danmaku\ijk\media\example\widget\media</p><p>将其代码复制到合适位置，还有 string 键值对，以及 Manifest 配置。</p><p><img src="https://img.wshunli.com/Android/ijkplayer/ijkplayer-widget.png" alt="ijkplayer-widget"></p><p>其中 Manifest 需要配置权限及声明服务。</p><pre><code class="XML">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;···&lt;service    android:name=&quot;com.wshunli.ijkplayer.demo.services.MediaPlayerService&quot;    android:enabled=&quot;false&quot;    android:exported=&quot;false&quot;    android:icon=&quot;@mipmap/ic_launcher&quot;    android:label=&quot;@string/app_name&quot; /&gt;</code></pre><p>可能会出现 NullPointerException 错误，删除不必要的代码即可。</p><p><a href="https://github.com/Bilibili/ijkplayer/issues/3969" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/Bilibili/ijkplayer/issues/3969</a></p><h1 id="入门使用"><a href="#入门使用" class="headerlink" title="入门使用"></a>入门使用</h1><p>在布局中添加播放控件。</p><pre><code class="XML">&lt;com.wshunli.ijkplayer.demo.widget.IjkVideoView    android:id=&quot;@+id/ijkvideoview&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;&gt;&lt;/com.wshunli.ijkplayer.demo.widget.IjkVideoView&gt;</code></pre><p>然后在 Activity 中使用就可以了。</p><pre><code class="Java">IjkVideoView ijkVideoView;···ijkVideoView = findViewById(R.id.ijkvideoview);ijkVideoView.setVideoURI(Uri.parse(&quot;http://streams.wshunli.com/videos/dyys2_x264.mp4&quot;));//  ijkVideoView.setVideoURI(Uri.parse(&quot;http://streams.wshunli.com/x36xhzz/x36xhzz.m3u8&quot;));ijkVideoView.start();</code></pre><p>默认是支持 m3u8 直播视频流的，挺意外的。</p><p><img src="https://img.wshunli.com/Android/ijkplayer/ijkplayer-livevideo.min.jpg" alt="ijkplayer-livevideo"></p><p>其他还有很多基于或者封装的播放库，这里列举出来就不多介绍了。</p><p>1、支持浮动和全屏的视频播放器。<br><a href="https://github.com/lipangit/JiaoZiVideoPlayer" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/lipangit/JiaoZiVideoPlayer</a></p><p>2、基于IJKPlayer（兼容系统MediaPlayer与EXOPlayer2），实现了多功能的视频播放器。<br><a href="https://github.com/CarGuo/GSYVideoPlayer" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/CarGuo/GSYVideoPlayer</a></p><p>3、Android播放器基础库，专注于播放视图组件的高复用性和组件间的低耦合，轻松处理复杂业务。<br><a href="https://github.com/jiajunhui/PlayerBase" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jiajunhui/PlayerBase</a></p><blockquote><p>参考资料<br>1、Android ijkplayer的使用解析 - CSDN博客<br><a href="https://blog.csdn.net/huaxun66/article/details/53401231" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/huaxun66/article/details/53401231</a><br>2、Android ijkplayer的使用解析及播放器的制作 - CSDN博客<br><a href="https://blog.csdn.net/github_2011/article/details/77385498" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/github_2011/article/details/77385498</a><br>3、Android 超好用的播放器——ijkplayer - 简书<br><a href="https://www.jianshu.com/p/c5d972ab0309" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/c5d972ab0309</a><br>4、Android集成IjkPlayer - 简书<br><a href="https://www.jianshu.com/p/79b434b2d5c8" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/79b434b2d5c8</a><br>5、视频直播技术（四）：使用Ijkplayer播放直播视频 - 灰色飘零 - 博客园<br><a href="http://www.cnblogs.com/renhui/p/6420140.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.cnblogs.com/renhui/p/6420140.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ijkplayer 是 Bilibili 基于 ffmpeg 开发并开源的轻量级视频播放器，支持播放本地网络视频，也支持流媒体播放。&lt;/p&gt;&lt;p&gt;支持 Android 和 iOS 操作系统，所以文章起名还是有点瑕疵的，哈哈哈 。&lt;/p&gt;&lt;p&gt;ijkplayer 仓库地址：&lt;
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="ijkplayer" scheme="https://www.wshunli.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>在线直播技术及其实时视频流可视化方法（前端）</title>
    <link href="https://www.wshunli.com/posts/b4d6e25d.html"/>
    <id>https://www.wshunli.com/posts/b4d6e25d.html</id>
    <published>2018-06-23T04:23:34.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，本文为较新研究成果，暂不公开，非常抱歉。 " /> <label for="pass"> 欢迎您访问我的博客，本文为较新研究成果，暂不公开，非常抱歉。 </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【暂不公开】记录在线直播技术及其实时视频流可视化方法（前端）。
    
    </summary>
    
      <category term="前端技术" scheme="https://www.wshunli.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="视频" scheme="https://www.wshunli.com/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="直播" scheme="https://www.wshunli.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
      <category term="前端" scheme="https://www.wshunli.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>详解 Android View 体系（一）Android View 体系基础</title>
    <link href="https://www.wshunli.com/posts/f6f583a.html"/>
    <id>https://www.wshunli.com/posts/f6f583a.html</id>
    <published>2018-06-20T02:33:59.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>有很多人觉得自己比较菜，就会称自己为 Android UI 工程师，非常有意思。</p><p>其实 Android UI 体系内容也是比较多的，不仅仅是指 UI 控件的使用，那也太基础了。</p><p>本文主要介绍 Android View 基础，内容可能后面会逐步完善。</p><h1 id="View-介绍"><a href="#View-介绍" class="headerlink" title="View 介绍"></a>View 介绍</h1><p>View 是 Android 中所有控件的基类，同时 ViewGroup 也继承自 View 。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/ViewGroup介绍.jpg" alt="ViewGroup介绍"></p><p>所以 View 本身可以是一个控件也可以是多个控件，基本上我们平常用到控件都继承自 View ，是一种树状结构。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/View介绍.min.png" alt="View介绍"></p><h1 id="View-的位置参数"><a href="#View-的位置参数" class="headerlink" title="View 的位置参数"></a>View 的位置参数</h1><p>在 Android 中有两种类型的坐标系，分别是 Android 坐标系和视图坐标系。其实是相对而言的，</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/View坐标系.png" alt="View坐标系"></p><p>Android 坐标系是相对屏幕原点（左上角）而言，视图坐标系是相对父类容器（ViewGroup）而言的。</p><p>在 Android 中，View 的位置由 top、left、right、bottom 四个属性确定，注意都是相对父容器而言。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/View位置API.png" alt="View位置API"></p><p>View 提供的 API 分别获取对应的数值。</p><ul><li>getTop()：获取 View 顶边到其父布局顶边的距离</li><li>getLeft()：获取 View 左边到其父布局左边的距离</li><li>getRight()：获取 View 右边到其父布局左边的距离</li><li>getBottom()：获取 View 底边到其父布局顶边的距离</li></ul><p>MotionEvent 也提供了一些获取点击位置的方法。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/MotionEvent位置API.png" alt="MotionEvent位置API"></p><p>其中红点位置为点击位置。</p><ul><li>getX()：获取点击位置离View左边的距离</li><li>getY()：获取点击位置离View顶边的距离</li><li>getRawX()：获取点击位置离屏幕左边的距离</li><li>getRawY()：获取点击位置离屏幕顶边的距离</li></ul><p>其实感觉看懂了下面这张图，也就基本可以理解View的坐标系了。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-View体系/1/View位置.min.png" alt="View位置"></p><blockquote><p>参考资料<br>1、《Android开发艺术探索》 – 3.1 View 基础知识<br>2、《Android群英传》 – 第三章 Android 控件架构与自定义控件详解<br>3、Android View体系（一）视图坐标系 | 刘望舒的博客<br><a href="http://liuwangshu.cn/application/view/1-coordinate-system.html" rel="external nofollow noopener noreferrer" target="_blank">http://liuwangshu.cn/application/view/1-coordinate-system.html</a><br>4、View | Android Developers<br><a href="https://developer.android.com/reference/android/view/View" rel="external nofollow noopener noreferrer" target="_blank">https://developer.android.com/reference/android/view/View</a><br>5、View与ViewGroup的概念 | 菜鸟教程<br><a href="http://www.runoob.com/w3cnote/android-tutorial-view-viewgroup-intro.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.runoob.com/w3cnote/android-tutorial-view-viewgroup-intro.html</a><br>6、Android 坐标系与视图坐标系图解 - CSDN博客<br><a href="https://blog.csdn.net/zhuwentao2150/article/details/52434104" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/zhuwentao2150/article/details/52434104</a><br>7、Android应用坐标系统全面详解 - CSDN博客<br><a href="https://blog.csdn.net/yanbober/article/details/50419117" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yanbober/article/details/50419117</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有很多人觉得自己比较菜，就会称自己为 Android UI 工程师，非常有意思。&lt;/p&gt;&lt;p&gt;其实 Android UI 体系内容也是比较多的，不仅仅是指 UI 控件的使用，那也太基础了。&lt;/p&gt;&lt;p&gt;本文主要介绍 Android View 基础，内容可能后面会逐步完善。&lt;
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="《Android开发艺术探索》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E5%BC%80%E5%8F%91%E8%89%BA%E6%9C%AF%E6%8E%A2%E7%B4%A2%E3%80%8B/"/>
    
      <category term="View体系" scheme="https://www.wshunli.com/tags/View%E4%BD%93%E7%B3%BB/"/>
    
      <category term="《Android群英传》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E7%BE%A4%E8%8B%B1%E4%BC%A0%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>沉迷学术，不可自拔（九）</title>
    <link href="https://www.wshunli.com/posts/c3a39066.html"/>
    <id>https://www.wshunli.com/posts/c3a39066.html</id>
    <published>2018-06-09T08:48:00.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】都6月份了，一直拖到现在，也是6得不行
    
    </summary>
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/categories/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/tags/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
      <category term="胡思乱想" scheme="https://www.wshunli.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>那些年，我们用过的地图下载器</title>
    <link href="https://www.wshunli.com/posts/73256148.html"/>
    <id>https://www.wshunli.com/posts/73256148.html</id>
    <published>2018-06-09T01:46:27.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>作为地信、遥感等专业的同学，下载线划图、遥感影像应该都接触过，以前很多群发广告都看不惯，借这次下载高程数据的机会，总结下地图下载器，收费部分的搜索下就懂了。。</p><p><strong>本文仅介绍平常接触到的地图下载器，用作学习和研究目的，不提供收费软件破解文件下载</strong>。</p><p><strong>本文标题来源</strong>：那些年，我们用过的地图下载器 - 我也是个傻瓜 - 博客园<br><a href="https://www.cnblogs.com/liweis/p/4575656.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/liweis/p/4575656.html</a></p><p>1、晟兴地球 SXEarth 是一款永久免费的 3DGIS 平台软件。</p><p>支持在线 Google Earth 卫星影像（无水印无偏移）下载，支持拼接为tif，支持模拟飞行，支持场景编辑。</p><p><img src="https://img.wshunli.com/瞎推荐/地图下载器/SXEarth.png" alt="SXEarth"></p><p>下载地址：<a href="http://www.sxsim.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.sxsim.com/</a></p><p>支持的在线地图特别多，平常基本上用这个就够了。</p><p>2、LocaSpace Viewer 免费、开放的三维数字地球</p><p>多种互联网地图集成、影像、地形数据下载、倾斜数据极速浏览、二三维地理、模型数据、量测和空间分析、软件特色应用。</p><p><img src="https://img.wshunli.com/瞎推荐/地图下载器/LocaSpaceViewer.png" alt="LocaSpaceViewer"></p><p>下载地址：<a href="http://www.locaspace.cn/LSV.jsp" rel="external nofollow noopener noreferrer" target="_blank">http://www.locaspace.cn/LSV.jsp</a></p><p>支持的在线底图不是很多，但是在三维场景尤其是倾斜摄影方面很有优势。</p><p>其他收费的在参考资料，这里就先不介绍了。</p><blockquote><p>参考资料<br>1、那些年，我们用过的地图下载器 - 我也是个傻瓜 - 博客园<br><a href="https://www.cnblogs.com/liweis/p/4575656.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/liweis/p/4575656.html</a><br>2、奉上我收藏的地图下载器（低调使用，你懂的），还各个群一个良好的群环境（别再因为苦于找不到下载器而转发广告了） - ThinkGIS<br><a href="http://www.thinkgis.cn/topic/555ac3911cf2f372004ef9ac" rel="external nofollow noopener noreferrer" target="_blank">http://www.thinkgis.cn/topic/555ac3911cf2f372004ef9ac</a><br>3、SXEarth-超强的GIS数据下载利器 | 麻辣GIS<br><a href="https://malagis.com/sxearth-super-gis-data-downloader.html" rel="external nofollow noopener noreferrer" target="_blank">https://malagis.com/sxearth-super-gis-data-downloader.html</a><br>4、只要三步下载GIS数据（亲测可用/免费/无需转发5个群） | 麻辣GIS<br><a href="https://malagis.com/downlod-gis-data-by-3-steps.html" rel="external nofollow noopener noreferrer" target="_blank">https://malagis.com/downlod-gis-data-by-3-steps.html</a><br>5、北京晟兴科技有限公司 官网首页<br><a href="http://www.sxsim.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.sxsim.com/</a><br>6、LocaSpace Viewer 三维数字地球<br><a href="http://www.locaspace.cn/" rel="external nofollow noopener noreferrer" target="_blank">http://www.locaspace.cn/</a><br>7、太乐地图官网 - 让地理信息应用更简单<br><a href="http://www.arctiler.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.arctiler.com/</a><br>8、谷歌卫星地图下载器-谷歌地图高清卫星地图2018-北斗卫星地图-水经注万能地图下载器-水经注软件<br><a href="http://www.rivermap.cn/" rel="external nofollow noopener noreferrer" target="_blank">http://www.rivermap.cn/</a><br>9、91卫图助手，Google Earth影像高程历史影像下载专家<br><a href="http://www.91weitu.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.91weitu.com/</a><br>10、谷歌地图高清卫星地图2018_北斗卫星地图_3d地形图-BIGEMAP<br><a href="http://www.bigemap.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.bigemap.com/</a><br>11、谷歌卫星地图下载器<br><a href="http://www.wolfmap.cn/" rel="external nofollow noopener noreferrer" target="_blank">http://www.wolfmap.cn/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为地信、遥感等专业的同学，下载线划图、遥感影像应该都接触过，以前很多群发广告都看不惯，借这次下载高程数据的机会，总结下地图下载器，收费部分的搜索下就懂了。。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;本文仅介绍平常接触到的地图下载器，用作学习和研究目的，不提供收费软件破解文件下载&lt;/s
      
    
    </summary>
    
      <category term="瞎推荐" scheme="https://www.wshunli.com/categories/%E7%9E%8E%E6%8E%A8%E8%8D%90/"/>
    
    
      <category term="GIS" scheme="https://www.wshunli.com/tags/GIS/"/>
    
      <category term="地图下载器" scheme="https://www.wshunli.com/tags/%E5%9C%B0%E5%9B%BE%E4%B8%8B%E8%BD%BD%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>详解 Android IPC 机制（八）使用 Socket 实现进程间通信</title>
    <link href="https://www.wshunli.com/posts/c9a2416c.html"/>
    <id>https://www.wshunli.com/posts/c9a2416c.html</id>
    <published>2018-06-08T12:46:26.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>Socket 也称为 “嵌套字”，是计算机网络中的概念，分为流式嵌套字（TCP）和用户数据报嵌套字（UDP）。</p><p>不同用户进程通过 Socket 进行通信也是一种 IPC 方式。</p><p>在使用 Socket 通信前应在 AndroidManifest 中声明权限：</p><pre><code class="XML">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;</code></pre><p>1、服务端</p><p>我们需要一个 Service 作为服务端，声明如下：</p><pre><code class="XML">&lt;service    android:name=&quot;.socket.SocketService&quot;    android:enabled=&quot;true&quot;    android:exported=&quot;true&quot;    android:process=&quot;:remote&quot; /&gt;</code></pre><p>Socket 服务端在 Service 启动时，会建立 TCP 连接并监听 8688 端口。</p><pre><code class="Java">public class SocketService extends Service {    private static final String TAG = &quot;SocketService&quot;;    private boolean isDestroyed = false;    private String[] messages = new String[]{            &quot;你好啊，哈哈&quot;,            &quot;请问你叫什么名字呀？&quot;,            &quot;今天北京天气不错啊&quot;,            &quot;你知道吗？我可是可以和多个人同时聊天的哦&quot;,            &quot;给你讲个笑话吧：据说爱笑的人运气不会太差，不知道真假。&quot;    };    public SocketService() {    }    @Override    public void onCreate() {        super.onCreate();        new Thread(new TCPServer()).start();    }    @Override    public IBinder onBind(Intent intent) {        return null;    }    @Override    public void onDestroy() {        isDestroyed = true;        super.onDestroy();    }    private class TCPServer implements Runnable {        @Override        public void run() {            ServerSocket serverSocket = null;            try {                serverSocket = new ServerSocket(8688);            } catch (IOException e) {                e.printStackTrace();            }            while (!isDestroyed) {                try {                    final Socket client = serverSocket.accept();                    Log.d(TAG, &quot;accept&quot;);                    new Thread() {                        @Override                        public void run() {                            responseClient(client);                        }                    }.start();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        private void responseClient(Socket client) {            try {                // 接收客户端消息                BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));                // 响应客户端消息                PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(client.getOutputStream())), true);                Log.d(TAG, &quot;欢迎来到聊天室！&quot;);                out.println(&quot;欢迎来到聊天室！&quot;);                while (!isDestroyed) {                    String line = in.readLine();                    Log.d(TAG, &quot;message from Client: &quot; + line);                    if (line == null) break;                    int i = new Random().nextInt(messages.length);                    String message = messages[i];                    out.println(message);                    Log.d(TAG, &quot;response to Client: &quot; + message);                }                out.close();                in.close();                client.close();            } catch (IOException e) {                e.printStackTrace();            }        }    }}</code></pre><p>当与客户端建立连接后，新建 Socket 客户端，接收消息并作出响应。</p><p>2、客户端</p><p>客户端部分首先启动 Socket 服务，并且在连接失败后会不断重新尝试连接。</p><pre><code class="Java">public class SocketActivity extends AppCompatActivity {    private static final String TAG = &quot;SocketActivity&quot;;    private Button bt_send;    private EditText et_receive;    private TextView tv_message;    private PrintWriter mPrintWriter;    private Socket mClientSocket;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_socket);        initView();        Intent service = new Intent(this, SocketService.class);        startService(service);        new Thread() {            @Override            public void run() {                connectSocketServer();            }        }.start();    }    private void initView() {        et_receive = findViewById(R.id.et_receive);        bt_send = findViewById(R.id.bt_send);        tv_message = findViewById(R.id.tv_message);        bt_send.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                final String msg = et_receive.getText().toString();                //向服务器发送信息                if (!TextUtils.isEmpty(msg) &amp;&amp; mPrintWriter != null) {                    Log.d(TAG, &quot;onClick: &quot; + msg);                    new Thread(new Runnable() {                        @Override                        public void run() {                            mPrintWriter.println(msg);                        }                    }).start();                    tv_message.setText(tv_message.getText() + &quot;\n&quot; + &quot;客户端：&quot; + msg);                    et_receive.setText(&quot;&quot;);                }            }        });    }    private void connectSocketServer() {        Socket socket = null;        while (socket == null) {            try {                //选择和服务器相同的端口8688                socket = new Socket(&quot;localhost&quot;, 8688);                mClientSocket = socket;                mPrintWriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);            } catch (IOException e) {                SystemClock.sleep(1000);            }        }        try {            // 接收服务器端的消息            BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));            while (!isFinishing()) {                final String msg = br.readLine();                if (msg != null) {                    runOnUiThread(                            new Runnable() {                                @Override                                public void run() {                                    tv_message.setText(tv_message.getText() + &quot;\n&quot; + &quot;服务端：&quot; + msg);                                }                            }                    );                }            }            mPrintWriter.close();            br.close();            socket.close();        } catch (IOException e) {            e.printStackTrace();        }    }    @Override    protected void onDestroy() {        if (mClientSocket != null) {            try {                mClientSocket.shutdownInput();                mClientSocket.close();            } catch (IOException e) {                e.printStackTrace();            }        }        super.onDestroy();    }}</code></pre><p>主要使用 socket.getOutputStream() 和 socket.getInputStream() 方法分别发送、接收服务端消息。</p><p>打印日志如下：</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-IPC机制/8.Socket日志.png" alt="8.Socket日志"></p><p>最终效果如下：</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-IPC机制/8.Socket进程间通信.png" alt="8.Socket进程间通信"></p><p>到这里把 Android IPC 通信的几种实现方式基本看了一遍，但是在 Binder 机制原理方面还有欠缺，后面再深入学习。</p><blockquote><p>参考资料<br>1、《Android开发艺术探索》 – 2.4.6 使用 Socket<br>2、Android IPC机制（五）用Socket实现跨进程聊天程序 | 刘望舒的博客<br><a href="http://liuwangshu.cn/application/ipc/5-socket.html" rel="external nofollow noopener noreferrer" target="_blank">http://liuwangshu.cn/application/ipc/5-socket.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Socket 也称为 “嵌套字”，是计算机网络中的概念，分为流式嵌套字（TCP）和用户数据报嵌套字（UDP）。&lt;/p&gt;&lt;p&gt;不同用户进程通过 Socket 进行通信也是一种 IPC 方式。&lt;/p&gt;&lt;p&gt;在使用 Socket 通信前应在 AndroidManifest 中声明
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="IPC机制" scheme="https://www.wshunli.com/tags/IPC%E6%9C%BA%E5%88%B6/"/>
    
      <category term="《Android开发艺术探索》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E5%BC%80%E5%8F%91%E8%89%BA%E6%9C%AF%E6%8E%A2%E7%B4%A2%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>详解 Android IPC 机制（七）使用 ContentProvider 实现进程间通信</title>
    <link href="https://www.wshunli.com/posts/b68f7dd9.html"/>
    <id>https://www.wshunli.com/posts/b68f7dd9.html</id>
    <published>2018-06-08T11:32:34.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>ContentProvider 是 Andorid 中专门用于不同应用间进行数据共享的方式，底层实现也是 Binder 。</p><p>前面在 <a href="https://www.wshunli.com/posts/2311b8ab.html">《第一行代码》读书笔记（五）– 应用组件之 ContentProvider</a> 介绍过，这里就不再详细记录了。</p><p>首先继承 ContentProvider 类实现自己的 Provider ：</p><pre><code class="Java">public class BookProvider extends ContentProvider {    private static final String TAG = &quot;BookProvider&quot;;    public static final String AUTHORITY = &quot;com.wshunli.ipc.demo.book.provider&quot;;    public static final Uri BOOK_CONTENT_URI = Uri.parse(&quot;content://&quot;            + AUTHORITY + &quot;/book&quot;);    public static final Uri USER_CONTENT_URI = Uri.parse(&quot;content://&quot;            + AUTHORITY + &quot;/user&quot;);    public static final int BOOK_URI_CODE = 0;    public static final int USER_URI_CODE = 1;    private static final UriMatcher sUriMatcher = new UriMatcher(            UriMatcher.NO_MATCH);    static {        sUriMatcher.addURI(AUTHORITY, &quot;book&quot;, BOOK_URI_CODE);        sUriMatcher.addURI(AUTHORITY, &quot;user&quot;, USER_URI_CODE);    }    private Context context;    private SQLiteDatabase db;    public BookProvider() {    }    @Override    public boolean onCreate() {        context = getContext();        initProviderData();        return true;    }    private void initProviderData() {        db = new DBHelper(context).getWritableDatabase();        db.execSQL(&quot;delete from &quot; + DBHelper.BOOK_TABLE_NAME);        db.execSQL(&quot;delete from &quot; + DBHelper.USER_TALBE_NAME);        db.execSQL(&quot;insert into book values(3,&#39;Android&#39;);&quot;);        db.execSQL(&quot;insert into book values(4,&#39;Ios&#39;);&quot;);        db.execSQL(&quot;insert into book values(5,&#39;Html5&#39;);&quot;);        db.execSQL(&quot;insert into user values(1,&#39;jake&#39;,1);&quot;);        db.execSQL(&quot;insert into user values(2,&#39;jasmine&#39;,0);&quot;);    }    @Override    public String getType(Uri uri) {        Log.d(TAG, &quot;getType: &quot;);        return null;    }    @Override    public Uri insert(Uri uri, ContentValues values) {        String table = getTableName(uri);        if (table == null) {            throw new IllegalArgumentException(&quot;Unsupported URI: &quot; + uri);        }        db.insert(table, null, values);        context.getContentResolver().notifyChange(uri, null);        return uri;    }    @Override    public Cursor query(Uri uri, String[] projection, String selection,                        String[] selectionArgs, String sortOrder) {        String table = getTableName(uri);        if (table == null) {            throw new IllegalArgumentException(&quot;Unsupported URI: &quot; + uri);        }        return db.query(table, projection, selection, selectionArgs, null, null, sortOrder, null);    }    @Override    public int update(Uri uri, ContentValues values, String selection,                      String[] selectionArgs) {        String table = getTableName(uri);        if (table == null) {            throw new IllegalArgumentException(&quot;Unsupported URI: &quot; + uri);        }        int row = db.update(table, values, selection, selectionArgs);        if (row &gt; 0) {            context.getContentResolver().notifyChange(uri, null);        }        return row;    }    @Override    public int delete(Uri uri, String selection, String[] selectionArgs) {        String table = getTableName(uri);        if (table == null) {            throw new IllegalArgumentException(&quot;Unsupported URI: &quot; + uri);        }        int count = db.delete(table, selection, selectionArgs);        if (count &gt; 0) {            context.getContentResolver().notifyChange(uri, null);        }        return count;    }    private String getTableName(Uri uri) {        String tableName = null;        switch (sUriMatcher.match(uri)) {            case BOOK_URI_CODE:                tableName = DBHelper.BOOK_TABLE_NAME;                break;            case USER_URI_CODE:                tableName = DBHelper.USER_TALBE_NAME;                break;            default:                break;        }        return tableName;    }}</code></pre><p>记得在 AndroidManifest 中声明：</p><pre><code class="XML">&lt;provider    android:name=&quot;.content.BookProvider&quot;    android:authorities=&quot;com.wshunli.ipc.demo.book.provider&quot;    android:enabled=&quot;true&quot;    android:exported=&quot;true&quot;    android:permission=&quot;com.wshunli.ipc.demo.PROVIDER&quot;    android:process=&quot;:remote&quot; /&gt;</code></pre><p>其中 DBHelper 为数据库帮助类，代码如下：</p><pre><code class="Java">public class DBHelper extends SQLiteOpenHelper {    private static final String DB_NAME = &quot;book_provider.db&quot;;    public static final String BOOK_TABLE_NAME = &quot;book&quot;;    public static final String USER_TALBE_NAME = &quot;user&quot;;    private static final int DB_VERSION = 3;    private String CREATE_BOOK_TABLE = &quot;CREATE TABLE IF NOT EXISTS &quot;            + BOOK_TABLE_NAME + &quot;(_id INTEGER PRIMARY KEY,&quot; + &quot;name TEXT)&quot;;    private String CREATE_USER_TABLE = &quot;CREATE TABLE IF NOT EXISTS &quot;            + USER_TALBE_NAME + &quot;(_id INTEGER PRIMARY KEY,&quot; + &quot;name TEXT,&quot;            + &quot;sex INT)&quot;;    public DBHelper(Context context) {        super(context, DB_NAME, null, DB_VERSION);    }    @Override    public void onCreate(SQLiteDatabase db) {        db.execSQL(CREATE_BOOK_TABLE);        db.execSQL(CREATE_USER_TABLE);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {    }}</code></pre><p>然后就是使用了，新建 Activity ：</p><pre><code class="Java">public class ProviderActivity extends AppCompatActivity {    private static final String TAG = &quot;ProviderActivity&quot;;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_provider);//        Uri uri = Uri.parse(&quot;content://com.wshunli.ipc.demo.book.provider&quot;);//        getContentResolver().query(uri, null, null, null, null);        Uri bookUri = Uri.parse(&quot;content://com.wshunli.ipc.demo.book.provider/book&quot;);        ContentValues values = new ContentValues();        values.put(&quot;_id&quot;, 6);        values.put(&quot;name&quot;, &quot;程序设计的艺术&quot;);        getContentResolver().insert(bookUri, values);        Cursor bookCursor = getContentResolver().query(bookUri, new String[]{&quot;_id&quot;, &quot;name&quot;}, null, null, null);        while (bookCursor.moveToNext()) {            Book book = new Book();            book.bookId = bookCursor.getInt(0);            book.bookName = bookCursor.getString(1);            Log.d(TAG, &quot;query book:&quot; + book.toString());        }        bookCursor.close();        Uri userUri = Uri.parse(&quot;content://com.wshunli.ipc.demo.book.provider/user&quot;);        Cursor userCursor = getContentResolver().query(userUri, new String[]{&quot;_id&quot;, &quot;name&quot;, &quot;sex&quot;}, null, null, null);        while (userCursor.moveToNext()) {            User user = new User();            user.userId = userCursor.getInt(0);            user.userName = userCursor.getString(1);            user.isMale = userCursor.getInt(2) == 1;            Log.d(TAG, &quot;query user:&quot; + user.toString());        }        userCursor.close();    }}</code></pre><p>日志结果如下：</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-IPC机制/7.ContentProvider进程间通信.png" alt="7.ContentProvider进程间通信"></p><blockquote><p>参考资料<br>1、《Android开发艺术探索》 – 2.4.5 使用 ContentProvider</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ContentProvider 是 Andorid 中专门用于不同应用间进行数据共享的方式，底层实现也是 Binder 。&lt;/p&gt;&lt;p&gt;前面在 &lt;a href=&quot;https://www.wshunli.com/posts/2311b8ab.html&quot;&gt;《第一行代码》读书笔记
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="IPC机制" scheme="https://www.wshunli.com/tags/IPC%E6%9C%BA%E5%88%B6/"/>
    
      <category term="《Android开发艺术探索》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E5%BC%80%E5%8F%91%E8%89%BA%E6%9C%AF%E6%8E%A2%E7%B4%A2%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>详解 Android IPC 机制（六）使用 AIDL 实现进程间通信</title>
    <link href="https://www.wshunli.com/posts/75f6d3a2.html"/>
    <id>https://www.wshunli.com/posts/75f6d3a2.html</id>
    <published>2018-06-08T06:43:53.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>AIDL（Android Interface Definition Language ，Android 接口定义语言），定义客户端与服务使用进程间通信 (IPC) 进行相互通信时都认可的编程接口。</p><p>只有允许不同应用的客户端用 IPC 方式访问服务，并且想要在服务中处理多线程时，才有必要使用 AIDL。</p><p>如果不需要执行跨越不同应用的并发 IPC，就应该通过实现一个 Binder 创建接口；或者，如果想执行 IPC，但根本不需要处理多线程，则使用 Messenger 类来实现接口。</p><p>1、创建 AIDL 文件</p><p>首先在 java 同级目录 aidl 文件夹，然后创建 .aidl 文件。</p><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-IPC机制/6.AIDL文件.png" alt="6.AIDL文件"></p><pre><code class="Java">// IBookManager.aidlpackage com.wshunli.ipc.demo;// Declare any non-default types here with import statementsimport com.wshunli.ipc.demo.Book;interface IBookManager {    List&lt;Book&gt; getBookList();    void addBook(in Book book);    /**     * Demonstrates some basic types that you can use as parameters     * and return values in AIDL.     */    void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat,            double aDouble, String aString);}</code></pre><p>在 <code>.aidl</code> 文件中支持的数据类型包括：</p><ul><li>基本数据类型</li><li>String 和 CharSequence</li><li>List:只支持 ArrayList , 里面的元素都必须被 AIDL 支持</li><li>Map:只支持 HashMap , 里面的元素必须被 AIDL 支持</li><li>实现 Parcelable 接口的对象</li><li>所有 AIDL 接口</li></ul><p>然后创建实现了 Parcelable 的类：</p><pre><code class="Java">public class Book implements Parcelable {    public String name;    public Book(String name) {        this.name = name;    }    @Override    public int describeContents() {        return 0;    }    @Override    public void writeToParcel(Parcel dest, int flags) {        dest.writeString(name);    }    public static Creator&lt;Book&gt; CREATOR = new Creator&lt;Book&gt;() {        @Override        public Book createFromParcel(Parcel source) {            return new Book(source);        }        @Override        public Book[] newArray(int size) {            return new Book[size];        }    };    private Book(Parcel source) {        name = source.readString();    }    @Override    public String toString() {        return &quot;Book{&quot; +                &quot;name=&#39;&quot; + name + &#39;\&#39;&#39; +                &#39;}&#39;;    }}</code></pre><p>创建 Book.aidl 文件：</p><pre><code class="Java">// Book.aidlpackage com.wshunli.ipc.demo;// Declare any non-default types here with import statementsparcelable Book;</code></pre><p>这时候重新编译程序，工程就会自动生成 <code>BookManager.aidl</code> 接口对应的文件。</p><p>app\build\generated\source\aidl\debug\com\wshunli\ipc\demoIBookManager.java</p><p>2、创建服务端</p><p>服务端使用 IBookManager.Stub() 方法创建 Binder 实例并在 onBind() 方法中返回。</p><pre><code class="Java">public class BookManagerService extends Service {    private static final String TAG = &quot;BookManagerService&quot;;    private CopyOnWriteArrayList&lt;Book&gt; mBookList = new CopyOnWriteArrayList&lt;&gt;();    private Binder mBinder = new IBookManager.Stub(){        @Override        public List&lt;Book&gt; getBookList() throws RemoteException {            return mBookList;        }        @Override        public void addBook(Book book) throws RemoteException {            mBookList.add(book);        }        @Override        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {        }    };    public BookManagerService() {    }    @Override    public void onCreate() {        super.onCreate();        mBookList.add(new Book(&quot;android&quot;));        mBookList.add(new Book(&quot;ios&quot;));    }    @Override    public IBinder onBind(Intent intent) {        return mBinder;    }}</code></pre><p>其中 onCreate() 方法中填充了数据。</p><p>当然在 AndroidManife 文件中要配置 Service</p><pre><code class="XML">&lt;service    android:name=&quot;com.wshunli.ipc.demo.BookManagerService&quot;    android:enabled=&quot;true&quot;    android:exported=&quot;true&quot;    android:process=&quot;:remote&quot; /&gt;</code></pre><p>3、客户端</p><p>客户端还是使用 bindService() 方法绑定服务。</p><pre><code class="Java">public class BookManagerActivity extends AppCompatActivity {    private static final String TAG = &quot;BookManagerActivity&quot;;    private ServiceConnection connection = new ServiceConnection() {        @Override        public void onServiceConnected(ComponentName name, IBinder service) {            IBookManager bookManager = IBookManager.Stub.asInterface(service);            try {                List&lt;Book&gt; bookList = bookManager.getBookList();                Log.d(TAG, &quot;onServiceConnected: &quot; + bookList.toString());            } catch (RemoteException e) {                e.printStackTrace();            }        }        @Override        public void onServiceDisconnected(ComponentName name) {        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_book_manager);        Intent intent = new Intent(BookManagerActivity.this, BookManagerService.class);        bindService(intent, connection, BIND_AUTO_CREATE);    }    @Override    protected void onDestroy() {        unbindService(connection);        super.onDestroy();    }}</code></pre><p>其中 IBookManager 对象来调用具体服务器方法，获取数据。</p><p>AIDL 的功能远不止这些，后面再深入研究。</p><blockquote><p>参考资料<br>1、《Android开发艺术探索》 – 2.4.4 使用 AIDL<br>2、Android 接口定义语言 (AIDL) | Android Developers<br><a href="https://developer.android.com/guide/components/aidl" rel="external nofollow noopener noreferrer" target="_blank">https://developer.android.com/guide/components/aidl</a><br>3、Android IPC机制（三）在Android Studio中使用AIDL实现跨进程方法调用 | 刘望舒的博客<br><a href="http://liuwangshu.cn/application/ipc/3-aidl.html" rel="external nofollow noopener noreferrer" target="_blank">http://liuwangshu.cn/application/ipc/3-aidl.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;AIDL（Android Interface Definition Language ，Android 接口定义语言），定义客户端与服务使用进程间通信 (IPC) 进行相互通信时都认可的编程接口。&lt;/p&gt;&lt;p&gt;只有允许不同应用的客户端用 IPC 方式访问服务，并且想要在服务
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="IPC机制" scheme="https://www.wshunli.com/tags/IPC%E6%9C%BA%E5%88%B6/"/>
    
      <category term="《Android开发艺术探索》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E5%BC%80%E5%8F%91%E8%89%BA%E6%9C%AF%E6%8E%A2%E7%B4%A2%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>详解 Android IPC 机制（五）使用 Messenger 实现进程间通信</title>
    <link href="https://www.wshunli.com/posts/9da3d2db.html"/>
    <id>https://www.wshunli.com/posts/9da3d2db.html</id>
    <published>2018-06-07T11:05:00.000Z</published>
    <updated>2018-08-29T02:59:08.013Z</updated>
    
    <content type="html"><![CDATA[<p>通过 Messenger 可以在不同进程之间传递 Message 对象，是一种轻量级的 IPC 方案。</p><p>首先看 Messenger 的构造方法：</p><pre><code class="Java">public Messenger(Handler target) {    mTarget = target.getIMessenger();}public Messenger(IBinder target) {    mTarget = IMessenger.Stub.asInterface(target);}</code></pre><p>实质上还是底层还是基于 AIDL 的。</p><p>对于 Message 对象可以存储传递的数据：</p><pre><code class="Java">public int what; // 消息标识public int arg1; // 整型数据public int arg2; // 整型数据public Object obj;public Messenger replyTo;/*package*/ Bundle data;public void setData(Bundle data) {    this.data = data;}</code></pre><p>其中 obj 只能传输系统中实现了 Parcelable 接口的对象。</p><p>对于 <strong>客户端</strong> 发送消息主要使用 bindService 方法绑定另一个进程的 Service 。</p><pre><code class="Java">public class MessengerActivity extends AppCompatActivity {    private static final String TAG = &quot;MessengerActivity&quot;;    private Messenger messenger;    private ServiceConnection connection = new ServiceConnection() {        @Override        public void onServiceConnected(ComponentName name, IBinder service) {            // 请求服务端            messenger = new Messenger(service);            Message message = Message.obtain(null, MConstants.MSG_FROM_CLIENT);            Bundle bundle = new Bundle();            Log.d(TAG, &quot;这里是客户端，向服务端发送消息&quot;);            bundle.putString(&quot;msg&quot;, &quot;客户端发送内容&quot;);            message.setData(bundle);            // 注意设置 replyTo            message.replyTo = getReplyMessenger;            try {                messenger.send(message);            } catch (RemoteException e) {                e.printStackTrace();            }        }        @Override        public void onServiceDisconnected(ComponentName name) {        }    };    private static class MessageHandler extends Handler {        @Override        public void handleMessage(Message msg) {            Log.d(TAG, &quot;这里是客户端，接收服务端响应&quot;);            switch (msg.what) {                case MConstants.MSG_FROM_SERVICE:                    // 接收服务端响应                    Log.d(TAG, &quot;客户端接收到: &quot; + msg.getData().get(&quot;reply&quot;));                    break;                default:                    super.handleMessage(msg);            }        }    }    private Messenger getReplyMessenger = new Messenger(new MessageHandler());    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_messenger);        Intent intent = new Intent(this, MessengerService.class);        bindService(intent, connection, Context.BIND_AUTO_CREATE);    }    @Override    protected void onDestroy() {        unbindService(connection);        super.onDestroy();    }}</code></pre><p>如果需要接收服务端返回的消息，注意在发送 Message 字段 replyTo 关联处理消息的 Messenger 对象。</p><p>对于 <strong>服务端</strong> ，首先 Messenger 对象关联接收消息的 Handler ，然后在服务端 onBind 中调用 getBinder() 方法得到 Binder 对象。</p><p>其中 MessageHandler 继承 Handler 并重写 handleMessage 方法。</p><pre><code class="Java">public class MessengerService extends Service {    private static final String TAG = &quot;MessengerService&quot;;    private static class MessageHandler extends Handler {        @Override        public void handleMessage(Message msg) {            Log.d(TAG, &quot;这里是服务端，响应客户端消息&quot;);            switch (msg.what) {                case MConstants.MSG_FROM_CLIENT:                    Log.d(TAG, &quot;服务端接收到: &quot; + msg.getData().get(&quot;msg&quot;));                    // 响应客户端请求                    Messenger replyTo = msg.replyTo;                    Message replyMessage = Message.obtain(null, MConstants.MSG_FROM_SERVICE);                    Bundle bundle = new Bundle();                    bundle.putString(&quot;reply&quot;,&quot;服务端响应内容&quot;);                    replyMessage.setData(bundle);                    try {                        replyTo.send(replyMessage);                    } catch (RemoteException e) {                        e.printStackTrace();                    }                    break;                default:                    super.handleMessage(msg);            }        }    }    private final Messenger messenger = new Messenger(new MessageHandler());    @Nullable    @Override    public IBinder onBind(Intent intent) {        return messenger.getBinder();    }}</code></pre><p>如果需要响应客户端请求，使用 replyTo 字段获取 Messenger 实例再发送消息即可。</p><p>最后注意在 Manifest 中注册 Service 组件。</p><pre><code class="XML">&lt;service    android:name=&quot;com.wshunli.ipc.demo.message.MessengerService&quot;    android:process=&quot;:remote&quot; /&gt;</code></pre><p><img src="https://img.wshunli.com/Android/Android开发艺术探索/详解Android-IPC机制/5.Messenger进程间通信.png" alt="Messenger进程间通信"></p><p>Messenger 进程间通信在服务端是以串行的方式逐个处理的，所以有大量并发请求时使用 Messenger 不太合适。</p><blockquote><p>参考资料<br>1、《Android开发艺术探索》 – 2.4.3 使用 Messenger<br>2、Android IPC机制（二）用Messenger进行进程间通信 | 刘望舒的博客<br><a href="http://liuwangshu.cn/application/ipc/2-messenger.html" rel="external nofollow noopener noreferrer" target="_blank">http://liuwangshu.cn/application/ipc/2-messenger.html</a><br>3、Android 基于Message的进程间通信 Messenger完全解析 - CSDN博客<br><a href="https://blog.csdn.net/lmj623565791/article/details/47017485" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lmj623565791/article/details/47017485</a><br>4、Handler之Message详解 - 简书<br><a href="https://www.jianshu.com/p/a6c01dd2efdc" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/a6c01dd2efdc</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过 Messenger 可以在不同进程之间传递 Message 对象，是一种轻量级的 IPC 方案。&lt;/p&gt;&lt;p&gt;首先看 Messenger 的构造方法：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;Java&quot;&gt;public Messenger(Handler target
      
    
    </summary>
    
      <category term="移动端技术" scheme="https://www.wshunli.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android" scheme="https://www.wshunli.com/tags/Android/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="IPC机制" scheme="https://www.wshunli.com/tags/IPC%E6%9C%BA%E5%88%B6/"/>
    
      <category term="《Android开发艺术探索》" scheme="https://www.wshunli.com/tags/%E3%80%8AAndroid%E5%BC%80%E5%8F%91%E8%89%BA%E6%9C%AF%E6%8E%A2%E7%B4%A2%E3%80%8B/"/>
    
  </entry>
  
</feed>
