<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CirGIS</title>
  
  <subtitle>wshunli`s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wshunli.com/"/>
  <updated>2018-09-07T10:04:32.259Z</updated>
  <id>https://www.wshunli.com/</id>
  
  <author>
    <name>wshunli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java设计模式（四）抽象工厂模式</title>
    <link href="https://www.wshunli.com/posts/4e3be4ad.html"/>
    <id>https://www.wshunli.com/posts/4e3be4ad.html</id>
    <published>2018-09-07T07:45:07.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。</p><p>工厂模式可以分为三类：</p><p>1）简单工厂模式（Simple Factory）<br>2）工厂方法模式（Factory Method）<br>3）抽象工厂模式（Abstract Factory）</p><p>本文及主要介绍抽象工厂模式。</p><h1 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h1><p>抽象工厂模式 (Abstract Factory Pattern)：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为 Kit 模式，属于对象创建型模式。</p><p>抽象工厂模式中，一个工厂可以提供多个不同种类产品对象，而不是单一种类的产品对象。</p><p>为了更清晰地理解工厂方法模式，需要先引入两个概念：</p><p><strong>产品等级结构</strong>： 产品等级结构即产品的继承结构，如一个抽象类是电视机，其子类有海尔电视机、海信电视机，则抽象电视机与具体品牌的电视机之间构成了一个产品等级结构，抽象电视机是父类，而具体品牌的电视机是其子类。</p><p><strong>产品族</strong>： 在抽象工厂模式中，产品族是指由同一个工厂生产的，位于不同产品等级结构中的一组产品，如海尔电器工厂生产的海尔电视机、海尔电冰箱，海尔电视机位于电视机产品等级结构中，海尔电冰箱位于电冰箱产品等级结构中。</p><p>当系统所提供的工厂所需生产的具体产品并不是一个简单的对象，而是多个位于不同产品等级结构中属于不同类型的具体产品时需要使用抽象工厂模式。</p><p>抽象工厂模式与工厂方法模式最大的区别在于，<strong>工厂方法模式针对的是一个产品等级结构，而抽象工厂模式则需要面对多个产品等级结构</strong>，一个工厂等级结构可以负责多个不同产品等级结构中的产品对象的创建 。</p><p><img src="https://img.wshunli.com/DesignPatterns/设计模式之禅/4.AbstractFactory.png" alt="抽象工厂模式"></p><p>抽象工厂模式包含角色和工厂方法模式相同。</p><p>假设有一个移动终端工厂，可以制造苹果系列的移动产品和华为系列的移动产品。<br>这个工厂下有两个子厂，一个负责制造苹果系列的 Pad 和华为系列的 Pad ，另一个负责制造苹果系列的手机和华为系列的手机。这便是一个典型的抽象工厂的实例。</p><p>1、创建产品产品接口</p><pre><code class="lang-Java">// 苹果系列public interface Apple {    void AppleStyle();}// 华为系列public interface Huawei {    void HuaweiStyle();}</code></pre><p>2、实现具体产品角色</p><pre><code class="lang-Java">// 苹果系列产品public class iPhone implements Apple {    @Override    public void AppleStyle() {        System.out.println(&quot;Apple&#39;s style: iPhone!&quot;);    }}public class iPad implements Apple {    @Override    public void AppleStyle() {        System.out.println(&quot;Apple&#39;s style: iPad!&quot;);    }}// 华为系列产品public class Honor implements Huawei {    @Override    public void HuaweiStyle() {        System.out.println(&quot;Huawei&#39;s style: Honor!&quot;);    }}public class HuaweiPad implements Huawei {    @Override    public void HuaweiStyle() {        System.out.println(&quot;Huawei&#39;s style: HuaweiPad!&quot;);    }}</code></pre><p>3、创建抽象工厂接口</p><pre><code class="lang-Java">public interface Factory {    Apple createAppleProduct();    Huawei createHuaweiProduct();}</code></pre><p>4、实现具体工厂类，生成实例对象，和工厂方法模式的核心区别</p><pre><code class="lang-Java">// 手机工厂public class PhoneFactory implements Factory {    @Override    public Apple createAppleProduct() {        return new iPhone();    }    @Override    public Huawei createHuaweiProduct() {        return new Honor();    }}// 平板工厂public class PadFactory implements Factory {    @Override    public Apple createAppleProduct() {        return new iPad();    }    @Override    public Huawei createHuaweiProduct() {        return new HuaweiPad();    }}</code></pre><p>5、调用不同工厂的方法生成实例对象</p><pre><code class="lang-Java">public class AbstractFactoryMain {    public static void main(String[] args) {        Factory factory = new PhoneFactory();        Apple apple = factory.createAppleProduct();        apple.AppleStyle();        Huawei huawei = factory.createHuaweiProduct();        huawei.HuaweiStyle();        factory = new PadFactory();        apple = factory.createAppleProduct();        apple.AppleStyle();        huawei = factory.createHuaweiProduct();        huawei.HuaweiStyle();    }}</code></pre><p><strong>抽象工厂模式优缺点</strong>:</p><p>优点:<br>1、抽象工厂模式隔离了具体类的生成，使得客户并不需要知道什么被创建。由于这种隔离，更换一个具体工厂就变得相对容易。所有的具体工厂都实现了抽象工厂中定义的那些公共接口，因此只需改变具体工厂的实例，就可以在某种程度上改变整个软件系统的行为。另外，应用抽象工厂模式可以实现高内聚低耦合的设计目的，因此抽象工厂模式得到了广泛的应用。<br>2、增加新的具体工厂和产品族很方便，因为一个具体的工厂实现代表的是一个产品族，无须修改已有系统，符合“开闭原则”。</p><p>缺点：<br>1、在添加新的产品对象（不同于现有的产品等级结构）时，难以扩展抽象工厂来生产新种类的产品，这是因为在抽象工厂角色中规定了所有可能被创建的产品集合，要支持新种类的产品就意味着要对该接口进行扩展，而这将涉及到对抽象工厂角色及其所有子类的修改，显然会带来较大的不便。<br>2、开闭原则的倾斜性（增加新的工厂和产品族容易，增加新的产品等级结构麻烦）。</p><p><strong>适用环境</strong>：</p><p>1、一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节，这对于所有类型的工厂模式都是重要的。<br>2、系统中有多于一个的产品族，而每次只使用其中某一产品族。<strong>与工厂方法模式的区别</strong>。<br>3、属于同一个产品族的产品将在一起使用，这一约束必须在系统的设计中体现出来。<br>4、系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。</p><p><strong>实现源码</strong>：<a href="https://github.com/wshunli/design-patterns/tree/master/src/ch04" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/wshunli/design-patterns/tree/master/src/ch04</a></p><blockquote><p>参考资料<br>1、java中的工厂模式 - 简书<br><a href="https://www.jianshu.com/p/bf8341c75304" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/bf8341c75304</a><br>2、《JAVA与模式》之抽象工厂模式 - java_my_life - 博客园<br><a href="https://www.cnblogs.com/java-my-life/archive/2012/03/28/2418836.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/java-my-life/archive/2012/03/28/2418836.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。&lt;/p&gt;&lt;p&gt;工厂模式可以分为三类：&lt;/p&gt;&lt;p&gt;1）简单工厂模式（Simple Factory）&lt;br&gt;2）工厂方法模式（Factory Method）&lt;br&gt;3）抽象工厂模
      
    
    </summary>
    
      <category term="语言基础" scheme="https://www.wshunli.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="设计模式" scheme="https://www.wshunli.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="《设计模式之禅》" scheme="https://www.wshunli.com/tags/%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%A6%85%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java设计模式（三）工厂方法模式</title>
    <link href="https://www.wshunli.com/posts/4982f93c.html"/>
    <id>https://www.wshunli.com/posts/4982f93c.html</id>
    <published>2018-09-07T07:40:09.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。</p><p>工厂模式可以分为三类：</p><p>1）简单工厂模式（Simple Factory）<br>2）工厂方法模式（Factory Method）<br>3）抽象工厂模式（Abstract Factory）</p><p>本文及主要介绍工厂方法模式。</p><h1 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h1><p>工厂方法模式 (Factory Method Pattern) 又称为工厂模式，也叫虚拟构造器 (Virtual Constructor) 模式或者多态工厂( Polymorphic Factory) 模式，它属于类创建型模式。</p><p>在工厂方法模式中，工厂父类负责定义创建产品对象的公共接口，而工厂子类则负责生成具体的产品对象，这样做的目的是将产品类的实例化操作延迟到工厂子类中完成，即通过工厂子类来确定究竟应该实例化哪一个具体产品类。</p><p><img src="https://img.wshunli.com/DesignPatterns/设计模式之禅/3.FactoryMethod.png" alt="工厂方法模式"></p><p>工厂方法模式包含如下角色：</p><p>●Product：抽象产品，工厂方法模式所创建的对象的超类，也就是所有产品类的共同父类或共同拥有的接口。在实际的系统中，这个角色也常常使用抽象类实现。</p><p>●ConcreteProduct：具体产品，这个角色实现了抽象产品（Product）所声明的接口，工厂方法模式所创建的每一个对象都是某个具体产品的实例。</p><p>●Factory：抽象工厂，担任这个角色的是工厂方法模式的核心，任何在模式中创建对象的工厂类必须实现这个接口。在实际的系统中，这个角色也常常使用抽象类实现。</p><p>●ConcreteFactory：具体工厂，担任这个角色的是实现了抽象工厂接口的具体 Java 类。具体工厂角色含有与业务密切相关的逻辑，并且受到使用者的调用以创建具体产品对象。</p><p>1、创建抽象产品接口</p><pre><code class="lang-Java">public interface Shape {    void draw();}</code></pre><p>2、实现具体产品角色</p><pre><code class="lang-Java">public class Point implements Shape {    @Override    public void draw() {        System.out.println(&quot;Point.draw()&quot;);    }}public class Line implements Shape {    @Override    public void draw() {        System.out.println(&quot;Line.draw()&quot;);    }}public class Plane implements Shape {    @Override    public void draw() {        System.out.println(&quot;Plane.draw()&quot;);    }}</code></pre><p>以上内容和简单工厂模式相同。</p><p>3、创建抽象工厂接口</p><pre><code class="lang-Java">public interface ICreator {    Shape getShape();}</code></pre><p>4、实现具体工厂类，生成实例对象</p><pre><code class="lang-Java">public class PointCreator implements ICreator {    @Override    public Shape getShape() {        return new Point();    }}public class LineCreator implements ICreator {    @Override    public Shape getShape() {        return new Line();    }}public class PlaneCreator implements ICreator {    @Override    public Shape getShape() {        return new Plane();    }}</code></pre><p>5、调用不同工厂的方法生成实例对象</p><pre><code class="lang-Java">public class FactoryMethodMain {    public static void main(String[] args) {        ICreator creator = new PointCreator();        Shape shape = creator.getShape();        shape.draw();        creator = new LineCreator();        shape = creator.getShape();        shape.draw();        creator = new PlaneCreator();        shape = creator.getShape();        shape.draw();    }}</code></pre><p><strong>工厂方法模式的优缺点</strong>:</p><p>优点：<br>1、在工厂方法模式中，工厂方法用来创建客户所需要的产品，同时还向客户隐藏了哪种具体产品类将被实例化这一细节，用户只需要关心所需产品对应的工厂，无须关心创建细节，甚至无须知道具体产品类的类名。<br>2、基于工厂角色和产品角色的多态性设计是工厂方法模式的关键。它能够使工厂可以自主确定创建何种产品对象，而如何创建这个对象的细节则完全封装在具体工厂内部。<br>3、使用工厂方法模式的另一个优点是在系统中加入新产品时，只要添加一个具体工厂和具体产品就可以了。</p><p>缺点：<br>1、在添加新产品时，需要编写新的具体产品类，系统中类的个数将成对增加，在一定程度上增加了系统的复杂度。<br>2、由于考虑到系统的可扩展性，需要引入抽象层，在客户端代码中均使用抽象层进行定义，增加了系统的抽象性和理解难度，且在实现时可能需要用到DOM、反射等技术，增加了系统的实现难度。</p><p><strong>适用场景</strong>：</p><p>1、一个类不知道它所需要的对象的类：在工厂方法模式中，客户端不需要知道具体产品类的类名，只需要知道所对应的工厂即可，具体的产品对象由具体工厂类创建；客户端需要知道创建具体产品的工厂类。<br>2、一个类通过其子类来指定创建哪个对象：在工厂方法模式中，对于抽象工厂类只需要提供一个创建产品的接口，而由其子类来确定具体要创建的对象，利用面向对象的多态性和里氏代换原则，在程序运行时，子类对象将覆盖父类对象，从而使得系统更容易扩展。<br>3、将创建对象的任务委托给多个工厂子类中的某一个，客户端在使用时可以无须关心是哪一个工厂子类创建产品子类，需要时再动态指定，可将具体工厂类的类名存储在配置文件或数据库中。</p><p><strong>实现源码</strong>：<a href="https://github.com/wshunli/design-patterns/tree/master/src/ch03" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/wshunli/design-patterns/tree/master/src/ch03</a></p><blockquote><p>参考资料<br>1、java中的工厂模式 - 简书<br><a href="https://www.jianshu.com/p/bf8341c75304" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/bf8341c75304</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。&lt;/p&gt;&lt;p&gt;工厂模式可以分为三类：&lt;/p&gt;&lt;p&gt;1）简单工厂模式（Simple Factory）&lt;br&gt;2）工厂方法模式（Factory Method）&lt;br&gt;3）抽象工厂模
      
    
    </summary>
    
      <category term="语言基础" scheme="https://www.wshunli.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="设计模式" scheme="https://www.wshunli.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="《设计模式之禅》" scheme="https://www.wshunli.com/tags/%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%A6%85%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java设计模式（二）简单工厂模式</title>
    <link href="https://www.wshunli.com/posts/6ae09785.html"/>
    <id>https://www.wshunli.com/posts/6ae09785.html</id>
    <published>2018-09-07T07:39:09.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。</p><p>工厂模式可以分为三类：</p><p>1）简单工厂模式（Simple Factory）<br>2）工厂方法模式（Factory Method）<br>3）抽象工厂模式（Abstract Factory）</p><p>本文及主要介绍简单工厂模式。</p><h1 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h1><p>简单工厂模式(Simple Factory Pattern)：又称为静态工厂方法(Static Factory Method)模式，它属于类创建型模式。</p><p>在简单工厂模式中，可以根据参数的不同返回不同类的实例。</p><p>简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有共同的父类。</p><p><img src="https://img.wshunli.com/DesignPatterns/设计模式之禅/2.SimpleFactory.png" alt="简单工厂模式"></p><p>简单工厂模式包含如下角色：</p><p>●Factory：工厂角色<br>工厂角色负责实现创建所有实例的内部逻辑。</p><p>●Product：抽象产品角色<br>抽象产品角色是所创建的所有对象的父类，负责描述所有实例所共有的 <strong>公共接口</strong> 。</p><p>●ConcreteProduct：具体产品角色<br>具体产品角色是创建目标，所有创建的对象都充当这个角色的某个具体类的实例。</p><p>1、创建抽象产品接口</p><pre><code class="lang-Java">public interface Shape {    void draw();}</code></pre><p>2、实现具体产品角色</p><pre><code class="lang-Java">public class Point implements Shape {    @Override    public void draw() {        System.out.println(&quot;Point.draw()&quot;);    }}public class Line implements Shape {    @Override    public void draw() {        System.out.println(&quot;Line.draw()&quot;);    }}public class Plane implements Shape {    @Override    public void draw() {        System.out.println(&quot;Plane.draw()&quot;);    }}</code></pre><p>3、工厂角色，生成基于给定信息的实体类的对象</p><pre><code class="lang-Java">public class ShapeFactory {    // 使用 getShape 方法获取形状类型的对象    public Shape getShape(String shapeType) {        if (shapeType == null) {            return null;        }        if (shapeType.equalsIgnoreCase(&quot;POINT&quot;)) {            return new Point();        } else if (shapeType.equalsIgnoreCase(&quot;LINE&quot;)) {            return new Line();        } else if (shapeType.equalsIgnoreCase(&quot;PLANE&quot;)) {            return new Plane();        }        return null;    }}</code></pre><p>4、使用该工厂，通过传递类型信息来获取实体类的对象</p><pre><code class="lang-Java">public class SimpleFactoryMain {    public static void main(String[] args) {        ShapeFactory shapeFactory = new ShapeFactory();        //获取 Point 的对象，并调用它的 draw 方法        Shape shape1 = shapeFactory.getShape(&quot;POINT&quot;);        //调用 Point 的 draw 方法        shape1.draw();        //获取 Line 的对象，并调用它的 draw 方法        Shape shape2 = shapeFactory.getShape(&quot;LINE&quot;);        //调用 Line 的 draw 方法        shape2.draw();        //获取 Plane 的对象，并调用它的 draw 方法        Shape shape3 = shapeFactory.getShape(&quot;PLANE&quot;);        //调用 Plane 的 draw 方法        shape3.draw();    }}</code></pre><p><strong>简单工厂模式优缺点</strong>:</p><p>优点：<br>通过使用工厂类，外界不再需要关心如何创造各种具体的产品，只要提供一个产品的名称作为参数传给工厂，就可以直接得到一个想要的产品对象，并且可以按照接口规范来调用产品对象的所有功能（方法）。构造容易，逻辑简单。</p><p>缺点：<br>1、简单工厂模式中的 if else 判断非常多，当系统中的具体产品类不断增多时候，就要不断的修改工厂类，对系统的维护和扩展不利。<br>2、一个工厂类中集合了所有的类的实例创建逻辑，什么时候它不能工作了，整个系统都会受到影响。<br>3、简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构。</p><p><strong>适用场景</strong>：</p><p>1、工厂类负责创建的对象比较少：由于创建的对象较少，不会造成工厂方法中的业务逻辑太过复杂。<br>2、客户端只知道传入工厂类的参数，对于如何创建对象不关心：客户端既不需要关心创建细节，甚至连类名都不需要记住，只需要知道类型所对应的参数。</p><p><strong>实现源码</strong>：<a href="https://github.com/wshunli/design-patterns/tree/master/src/ch02" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/wshunli/design-patterns/tree/master/src/ch02</a></p><blockquote><p>参考资料<br>1、工厂模式 | 菜鸟教程<br><a href="http://www.runoob.com/design-pattern/factory-pattern.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.runoob.com/design-pattern/factory-pattern.html</a><br>2、JAVA设计模式之工厂模式(简单工厂模式+工厂方法模式) - CSDN博客<br><a href="https://blog.csdn.net/jason0539/article/details/23020989" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/jason0539/article/details/23020989</a><br>3、java中的工厂模式 - 简书<br><a href="https://www.jianshu.com/p/bf8341c75304" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/bf8341c75304</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。&lt;/p&gt;&lt;p&gt;工厂模式可以分为三类：&lt;/p&gt;&lt;p&gt;1）简单工厂模式（Simple Factory）&lt;br&gt;2）工厂方法模式（Factory Method）&lt;br&gt;3）抽象工厂模
      
    
    </summary>
    
      <category term="语言基础" scheme="https://www.wshunli.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="读书笔记" scheme="https://www.wshunli.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="设计模式" scheme="https://www.wshunli.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="《设计模式之禅》" scheme="https://www.wshunli.com/tags/%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%A6%85%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘数字政通面试</title>
    <link href="https://www.wshunli.com/posts/93b729e9.html"/>
    <id>https://www.wshunli.com/posts/93b729e9.html</id>
    <published>2018-09-06T13:48:00.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季校园招聘数字政通面试（Android开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘中海达面试</title>
    <link href="https://www.wshunli.com/posts/c783f06d.html"/>
    <id>https://www.wshunli.com/posts/c783f06d.html</id>
    <published>2018-09-06T02:43:04.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季校园招聘中海达面试（Android开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>图解数据结构-算法部分（Java语言实现）</title>
    <link href="https://www.wshunli.com/posts/444e2c0f.html"/>
    <id>https://www.wshunli.com/posts/444e2c0f.html</id>
    <published>2018-09-04T06:48:13.000Z</published>
    <updated>2018-09-07T10:04:32.263Z</updated>
    
    <content type="html"><![CDATA[<p>数据结构与算法一直是比较薄弱的地方，不仅在面试的时候会问相关问题、手写代码，而且在笔试的时候发挥重要作用。</p><p>前面一直学习的数据结构，下面排序、查找属于算法的范畴了。</p><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>所谓 “排序” (Sorting) 就是指将一组数据，按特定规则调换位置，使数据具有某种顺序关系（递增或递减）。</p><p><strong>排序分类</strong>，可分为内部（内存中）和外部（外部存储器）排序两大类。</p><p>常见的内部排序法有：冒泡排序法、选择排序法、插入排序法、合并排序法、快速排序 法、堆积排序法、希尔排序法、基数排序法等。 至于比较常见的外部排序法有：直接合并排序法、K 路合并法、多相合并法等。</p><p><strong>排序算法分析</strong>：算法是否稳定、时间复杂度、空间复杂度。</p><p>稳定的排序是指数据在经过排序后，两个相同键值的记录仍然保待原来的次序。</p><h2 id="内部排序法"><a href="#内部排序法" class="headerlink" title="内部排序法"></a>内部排序法</h2><p>内部排序法的时间复杂度及键值整理。</p><p><img src="https://img.wshunli.com/数据结构与算法/排序/内部排序法.png" alt="内部排序法"></p><p>1、<strong>冒泡排序法</strong></p><p>冒泡排序（Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。</p><p><img src="https://img.wshunli.com/数据结构与算法/排序/冒泡排序法.gif" alt="冒泡排序法"></p><p>实现算法：</p><pre><code class="lang-Java">int i, j, tmp;int data[] = {6, 5, 9, 7, 2, 8};    //原始数据for (i = 5; i &gt; 0; i--)             //扫描次数{    for (j = 0; j &lt; i; j++)         //比较、交换次数    {        // 比较相邻两数，如第一数较大则交换        if (data[j] &gt; data[j + 1]) {            tmp = data[j];            data[j] = data[j + 1];            data[j + 1] = tmp;        }    }}</code></pre><p>但是这样如论如何都会执行 $ n(n-1)/2 $ 次，我们可以加一个判断在没有可替换的数据时终止程序。</p><pre><code class="lang-Java">public void bubble() {    int i, j, tmp, flag;    for (i = 5; i &gt;= 0; i--) {        flag = 0;           //flag用来判断是否有执行交换的动作        for (j = 0; j &lt; i; j++) {            if (data[j + 1] &lt; data[j]) {                tmp = data[j];                data[j] = data[j + 1];                data[j + 1] = tmp;                flag++;    //如果有执行过交换，则flag不为0            }        }        //当执行完一次扫描就判断是否做过交换动作，如果没有交换过数据，        //表示此时数组已完成排序，故可直接跳出循环        if (flag == 0) {            break;        }    }</code></pre><p>冒泡排序是最容易实现的排序, 最坏的情况是每次都需要交换, 共需遍历并交换将近 n²/2 次, 时间复杂度为 O(n²) . 最佳的情况是内循环遍历一次后发现排序是对的, 因此退出循环, 时间复杂度为O(n).</p><p>平均来讲, 时间复杂度为O(n²). 由于冒泡排序中只有缓存的 temp 变量需要内存空间, 因此空间复杂度为常量O(1).</p><p>Tips: 由于冒泡排序只在相邻元素大小不符合要求时才调换他们的位置, 它并不改变相同元素之间的相对顺序, 因此它是稳定的排序算法.</p><p>2、<strong>选择排序法</strong></p><p>在未排序序列中找到最小（大）元素，存放到未排序序列的起始位置。</p><p>算法描述：</p><p>(1) 从待排序序列中，找到关键字最小的元素；<br>(2) 如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换；<br>(3) 从余下的 N - 1 个元素中，找出关键字最小的元素，重复 (1)、(2) 步，直到排序结束。</p><pre><code class="lang-Java">void select() {    int i, j, tmp;    for (i = 0; i &lt; 5; i++) {            //扫描 5 次        for (j = i + 1; j &lt; 6; j++) {    //由 i+1 比较起，比较 5 次            if (data[i] &gt; data[j]) {     //比较第 i 及第 j 个元素                tmp = data[i];                data[i] = data[j];                data[j] = tmp;            }        }    }}</code></pre><p>选择排序的简单和直观名副其实，这也造就了它 “出了名的慢性子” ，无论是哪种情况，哪怕原数组已排序完成，它也将花费将近 n²/2 次遍历来确认一遍。即便是这样，它的排序结果也还是不稳定的。 唯一值得高兴的是，它并不耗费额外的内存空间。</p><p>3、<strong>插入排序法</strong></p><p>将数组中的所有元素依次跟前面已经排好的元素相比较，再将数组元素插入合适的位置。</p><p><img src="https://img.wshunli.com/数据结构与算法/排序/插入排序法.gif" alt="插入排序法"></p><p>实现算法：</p><pre><code class="lang-Java">void insert() {    int i;     // i 为扫描次数    int j;     // j 来定位比较的元素    int tmp;   // tmp 用来暂存数据    for (i = 1; i &lt; size; i++) {  // 扫描循环次数为 SIZE-1        tmp = data[i];        j = i - 1;        while (j &gt;= 0 &amp;&amp; tmp &lt; data[j]) {  // 如果第二元素小于第一元素            data[j + 1] = data[j]; // 就把所有元素往后推一个位置            j--;        }        data[j + 1] = tmp;       // 最小的元素放到第一个元素    }}</code></pre><p>Tips: 由于直接插入排序每次只移动一个元素的位，并不会改变值相同的元素之间的排序，因此它是一种稳定排序。</p><p>4、<strong>希尔排序法</strong></p><p>希尔排序是先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录 “基本有序” 时，再对全体记录进行依次直接插入排序。</p><p>实现算法：</p><pre><code class="lang-Java">void shell() {    int i;        // i 为扫描次数    int j;        // j 来定位比较的元素    int k = 1;    // k 打印计数    int tmp;      // tmp 用来暂存数据    int jmp;      // 设定间隔位移量    jmp = size / 2;    while (jmp != 0) {        for (i = jmp; i &lt; size; i++) {            tmp = data[i];            j = i - jmp;            while (j &gt;= 0 &amp;&amp; tmp &lt; data[j])  //插入排序法            {                data[j + jmp] = data[j];                j = j - jmp;            }            data[jmp + j] = tmp;        }        jmp = jmp / 2;    //控制循环数    }}</code></pre><p>5、<strong>合并排序法</strong></p><p>合并排序算法是将两个（或两个以上）有序表合并成一个新的有序表；<br>即把待排序序列分为若干个子序列，每个子序列是有序的，然后再把有序子序列合并为整体有序序列。</p><p><img src="https://img.wshunli.com/数据结构与算法/排序/合并排序法.gif" alt="合并排序法"></p><p>6、<strong>快速排序法</strong></p><p>快速排序法又称分割交换排序法，是目前公认最佳的排序法。</p><p>它的原理和冒泡排序法一样都是用交换的方式，不过它会先在数据中找到一个虚拟的中间值，把小于中间值的数据放在左边，而大于中间值的数据放在右边，再以同样的方式分别处理左右两边的数据，直到完成为止。</p><p><img src="https://img.wshunli.com/数据结构与算法/排序/快速排序法.gif" alt="快速排序法"></p><p>7、<strong>堆积排序法</strong></p><p>堆排序的过程就是将待排序的序列构造成一个堆，选出堆中最大的移走，再把剩余的元素调整成堆，找出最大的再移走，重复直至有序。</p><p>8、<strong>基数排序法</strong></p><p>基数排序（Radix sort）是一种非比较型整数排序算法，其原理是将整数按位数切割成不同的数字，然后按每个位数分别比较。由于整数也可以表达字符串（比如名字或日期）和特定格式的浮点数，所以基数排序也不是只能使用于整数。</p><h2 id="外部排序法"><a href="#外部排序法" class="headerlink" title="外部排序法"></a>外部排序法</h2><p>直接合井排序法 (Direct Merge Sort) 是外部存储设备最常用的排序方法。</p><p>它可以分为两个步骤：<br>步骤1: 将要排序的文件分为几个大小可以加载到内存空间的小文件，再使用内部排序法将各文件内的数据排序。<br>步骤2: 将第一步所建立的小文件每两个合并成一个文件。两两合井后，把所有文件合并成一个文件后就可以完成排序了。</p><h1 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h1><p>所谓查找，就是从数据文件中，寻找符合某特定条件的记录。而用来查找的条件就称为 “键值” 。</p><p>一般来说，如果数据在查找前经过排序，将可大幅减少查找的时间。至于查找技巧中比 较常见的方法有顺序法、二分查找法、斐波那契法、插值法、哈希法、m 路查找树、B-tree 等。</p><p>数据结构：<a href="https://www.wshunli.com/posts/850e5c53.html">https://www.wshunli.com/posts/850e5c53.html</a><br>算法：<a href="https://www.wshunli.com/posts/444e2c0f.html">https://www.wshunli.com/posts/444e2c0f.html</a></p><blockquote><p>参考资料<br>1、八大排序算法总结与java实现 | iTimeTraveler<br><a href="https://itimetraveler.github.io/2017/07/18/八大排序算法总结与java实现/" rel="external nofollow noopener noreferrer" target="_blank">https://itimetraveler.github.io/2017/07/18/八大排序算法总结与java实现/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数据结构与算法一直是比较薄弱的地方，不仅在面试的时候会问相关问题、手写代码，而且在笔试的时候发挥重要作用。&lt;/p&gt;&lt;p&gt;前面一直学习的数据结构，下面排序、查找属于算法的范畴了。&lt;/p&gt;&lt;h1 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://www.wshunli.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="算法" scheme="https://www.wshunli.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构与算法" scheme="https://www.wshunli.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘数文科技面试</title>
    <link href="https://www.wshunli.com/posts/244dd89b.html"/>
    <id>https://www.wshunli.com/posts/244dd89b.html</id>
    <published>2018-08-31T12:46:52.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】【Offer】记录2018年秋季校园招聘数文科技面试（Android开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘（GIS行业）</title>
    <link href="https://www.wshunli.com/posts/9aef7ef9.html"/>
    <id>https://www.wshunli.com/posts/9aef7ef9.html</id>
    <published>2018-08-31T09:10:41.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季（2019届应届生）校园招聘（GIS行业）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>图解数据结构（Java语言实现）</title>
    <link href="https://www.wshunli.com/posts/850e5c53.html"/>
    <id>https://www.wshunli.com/posts/850e5c53.html</id>
    <published>2018-08-29T12:41:03.000Z</published>
    <updated>2018-09-07T10:04:32.263Z</updated>
    
    <content type="html"><![CDATA[<p>数据结构与算法一直是比较薄弱的地方，不仅在面试的时候会问相关问题、手写代码，而且在笔试的时候发挥重要作用。</p><p>这次选择看的书籍是 《图解数据结构-使用Java》 ，先入门，后面再深入学习。</p><p>算法的时间复杂度，用来度量算法的运行时间，记作: T(n) = O(f(n))。它表示随着 输入大小 n 的增大，算法执行需要的时间的增长速度可以用 f(n) 来描述。</p><p>线性表是 n 个元素的有限序列（n &gt;= 0），是计算机科学中一种相当基础的数据结构。</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p><strong>数组</strong> 其实是一排紧密相邻的可读内存，并提供一个能够 <strong>直接访问</strong> 单一数据内容的计算方法。</p><p>这样能够直接通过计算，并访问任一位置的数据，即所谓的数组的 <strong>随机读取</strong> 。</p><p>当 Java 数组声明时会在内存中分配一定的暂存空间，空间大小以数据类型和数组数量为依据。</p><p>一维数据、二维数组、三维数组、n 维数组。</p><p>数组可用于矩阵、多项式等的运算。</p><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><p><strong>链表</strong> 是由许多相同数据类型的元素按照特定顺序排列而成的线性表，其在内存中是不连续与随机存储的。</p><p>这样就不能像数组那样随机读取数据，而要 <strong>按照顺序</strong> 找到所需数据。</p><h2 id="单向链表"><a href="#单向链表" class="headerlink" title="单向链表"></a>单向链表</h2><p>单向链表是由节点组成，指针方向相同的链表。其中节点由数据字段和链接字段组成。</p><p>在 Java 中，声明节点：</p><pre><code class="lang-Java">public class Node {    int data;    Node next;    public Node(int data) {        this.data = data;        this.next = null;    }}</code></pre><p>而 Java 中没有指针的概念，我们声明两个对象分别指向第一个和最后一个节点：</p><pre><code class="lang-Java">public class LinkedList {    private Node first;    private Node last;    ...}</code></pre><p>1、<strong>单向链表的创建</strong></p><p>下面创建简单单向链表类：</p><pre><code class="lang-Java">public class LinkedList {    private Node first;    private Node last;    public boolean isEmpty() {        return first == null;    }    public void insert(int data) {        Node node = new Node(data);        if (this.isEmpty()) {            first = node;            last = node;        } else {            last.next = node;            last = node;        }    }    public void print() {        Node current = first;        while (current != null) {            System.out.println(&quot;current.data=&quot; + current.data);            current = current.next;        }    }}</code></pre><p>然后实例化链表对象即可：</p><pre><code class="lang-Java">public class Main {    public static void main(String[] args) {        LinkedList linkedList = new LinkedList();        linkedList.insert(99);        linkedList.insert(90);        linkedList.insert(95);        linkedList.print();    }}</code></pre><p>这样所有节点都知道下个节点在哪里，只要有首节点的存在，就可以对整个列表进行遍历、插入及删除节点等动作。</p><p>2、<strong>单向链表节点的删除</strong></p><p>将欲删除节点的前一个节点的指针指向欲删除节点的下一个节点即可。</p><p>如果删除 <strong>首节点</strong>，将首节点的下个节点设置为首节点；如果删除 <strong>末节点</strong>，将前一个节点指向 null 即可。</p><pre><code class="lang-Java">  public void delete(Node node) {      Node newNode;      Node temp;      if (first.data == node.data) {          first = first.next;      } else if (last.data == node.data) {          temp = first;          while (temp.next != last) {              temp = temp.next;          }          temp.next = last.next; // temp.next = null;          last = temp; // 设置末节点      } else {          newNode = first;          temp = first;          while (temp.data != node.data) {              newNode = temp;              temp = temp.next;          }          newNode.next = temp.next;      }  }</code></pre><p>这样删除有点弊端，根据 node 节点的值判断是否是同一节点，并且没有对节点是否存在做判断。</p><p>3、<strong>单向链表节点的添加</strong></p><p>添加节点和删除节点有点类似，将前一个节点指向新添加的节点，然后将新添加节点指向下一个节点即可。</p><p>如果添加为 <strong>首节点</strong> ，将欲添加节点指向首节点；如果添加为 <strong>末节点</strong> ，将原末节点指向新节点即可。</p><pre><code class="lang-Java">public void insert(Node node) {    Node newNode;    Node temp;    if (node.next == first) {        node.next = first;        first = node;    } else if (node.next == null) {        last.next = node;        node.next = null;    } else {        newNode = first;        temp = first;        while (node.next != newNode.next) {            temp = newNode;            newNode = newNode.next;        }        temp.next = node;        node.next = newNode;    }}</code></pre><p>这样在节点位置的判断上还是有弊端的。</p><p>4、<strong>单向链表的反转</strong></p><p>面试有时候会让手写这个代码。</p><p><strong>遍历法</strong>: 从链表头部开始，逐个反转节点。</p><pre><code class="lang-Java">public Node reverse(Node head) {    if (head == null) return null;      // 空链表    if (head.next == null) return head; // 一个元素的链表    Node preNode = null;    Node nowNode = head;    while (nowNode != null) {        Node nextNode = nowNode.next;   // 保存下一个结点        nowNode.next = preNode;         // 当前结点指向前一个结点        preNode = nowNode;              // 前任结点 到现任节点        nowNode = nextNode;             // 现任节点到下一结点    }    return preNode;}</code></pre><p><strong>递归法</strong>：从链表尾部开始，逐个反转节点。</p><pre><code class="lang-Java">public Node reverse(Node node) {    if (node == null || node.next == null) return node;    Node headNode = reverse(node.next);    node.next.next = node;    node.next = null;    return headNode;}</code></pre><p>以上算法都需要传入链表的头部节点，打印时需要注意头部和尾部节点引用。</p><p>5、<strong>单向链表的串联</strong></p><p>将列表的首位节点相连即可。</p><pre><code class="lang-Java">public LinkedList connect(LinkedList list1, LinkedList list2) {    LinkedList list = list1;//  while (list.last.next != null) {//     list.last = list.last.next;//  }    list.last.next = list2.first;    return list;}</code></pre><h2 id="环形链表"><a href="#环形链表" class="headerlink" title="环形链表"></a>环形链表</h2><p>我们把单向链表的尾部指向头部，整个链表就成为单向环形结构。</p><p>这里创建链表、插入节点、删除节点、链表串联都很类似。</p><h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><p>双向链表基本结构和单项连链表类似，至少一个节点存放数据，另外它有两个字段存放指针。</p><h1 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h1><p>堆栈是一种抽象的数据结构：只能从堆栈的 <strong>顶端</strong> 访问数据；数据访问符合 <strong>后进先出</strong> 的原则。</p><h2 id="堆栈的数组实现"><a href="#堆栈的数组实现" class="headerlink" title="堆栈的数组实现"></a>堆栈的数组实现</h2><pre><code class="lang-Java">class StackByArray { //以数组模拟堆栈的类声明    private int[] stack; //在类中声明数组    private int top;  //指向堆栈顶端的索引    //StackByArray类构造函数    public StackByArray(int stack_size) {        stack = new int[stack_size]; //建立数组        top = -1;    }    //类方法：push    //存放顶端数据，并更正新堆栈的内容    public boolean push(int data) {        if (top &gt;= stack.length) { //判断堆栈顶端的索引是否大于数组大小            System.out.println(&quot;堆栈已满，无法再加入&quot;);            return false;        } else {            stack[++top] = data; //将数据存入堆栈            return true;        }    }    //类方法：empty    //判断堆栈是否为空堆栈，是则返回true，不是则返回false    public boolean empty() {        if (top == -1) return true;        else return false;    }    //类方法：pop    //从堆栈取出数据    public int pop() {        if (empty()) //判断堆栈是否为空，如果是则返回-1值            return -1;        else            return stack[top--]; //先将数据取出后，再将堆栈指针往下移    }}</code></pre><h2 id="堆栈的链表实现"><a href="#堆栈的链表实现" class="headerlink" title="堆栈的链表实现"></a>堆栈的链表实现</h2><pre><code class="lang-Java">class Node //链接节点的声明{    int data;    Node next;    public Node(int data) {        this.data = data;        this.next = null;    }}class StackByLink {    public Node front; //指向堆栈底端的指针    public Node rear;  //指向堆栈顶端的指针    //类方法：isEmpty()    //判断堆栈如果为空堆栈,则front==null;    public boolean isEmpty() {        return front == null;    }    //打印堆栈内容    public void output_of_Stack() {        Node current = front;        while (current != null) {            System.out.print(&quot;[&quot; + current.data + &quot;]&quot;);            current = current.next;        }        System.out.println();    }    //在堆栈顶端加入数据    public void insert(int data) {        Node newNode = new Node(data);        if (this.isEmpty()) {            front = newNode;            rear = newNode;        } else {            rear.next = newNode;            rear = newNode;        }    }    //在堆栈顶端删除数据    public void pop() {        Node newNode;        if (this.isEmpty()) {            System.out.print(&quot;===目前为空堆栈===\n&quot;);            return;        }        newNode = front;        if (newNode == rear) {            front = null;            rear = null;            System.out.print(&quot;===目前为空堆栈===\n&quot;);        } else {            while (newNode.next != rear)                newNode = newNode.next;            newNode.next = rear.next;            rear = newNode;        }    }}</code></pre><h2 id="堆栈的应用"><a href="#堆栈的应用" class="headerlink" title="堆栈的应用"></a>堆栈的应用</h2><p>二叉树及森林的遍历；图形的深度优先遍历；递归程序的调用及返回等等。</p><h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><p>队列是一种抽象的数据结构：只能从队列的 <strong>两端</strong> 访问数据；数据访问符合 <strong>先进先出</strong> 的原则。</p><h2 id="队列的数组实现"><a href="#队列的数组实现" class="headerlink" title="队列的数组实现"></a>队列的数组实现</h2><pre><code class="lang-Java">public class ArrayQueue {    private int[] data;    private int size;//元素个数    private int front;//队列中第一个对象的位置    private int rear;//队列中当前对象的位置    public ArrayQueue() {        data = new int[10];        size = 0;        front = 0;        rear = 0;    }    public void add(int t) {        if (isFull()) {            resize();            front = 0;        }        rear = (front + size) % data.length;        System.out.println(rear);        data[rear] = t;        size++;    }    public int remove() {        if (isEmpty()) {            throw new RuntimeException(&quot;队列为空!&quot;);        }        int tempData = data[front];        data[front] = 0;        front = (front + 1) % (data.length);        size--;        return tempData;    }    public int size() {        return size;    }    public boolean isEmpty() {        return size == 0;    }    public boolean isFull() {        return size == data.length;    }    public void resize() {        /*注意重新扩容的时候并不需要去设置size         * 队列的大小并不能通过数组的大小直观的显示出来。         * 但是栈就可以直观的通过数组的大小显示出来*/        int[] tmp = new int[data.length * 2];        System.arraycopy(data, 0, tmp, 0, data.length);        data = tmp;        tmp = null;//引用置为空，便于gc处理      }}</code></pre><h2 id="队列的链表实现"><a href="#队列的链表实现" class="headerlink" title="队列的链表实现"></a>队列的链表实现</h2><pre><code class="lang-Java">class QueueNode                 // 队列节点类{    int data;                    // 节点数据    QueueNode next;              // 指向下一个节点    //构造函数    public QueueNode(int data) {        this.data = data;        next = null;    }}class Linked_List_Queue { //队列类    public QueueNode front; //队列的前端指针    public QueueNode rear;  //队列的尾端指针    //构造函数    public Linked_List_Queue() {        front = null;        rear = null;    }    //方法enqueue:队列数据的存入    public boolean enqueue(int value) {        QueueNode node = new QueueNode(value); //建立节点        //检查是否为空队列        if (rear == null)            front = node; //新建立的节点成为第一个节点        else            rear.next = node; //将节点加入到队列的尾端        rear = node; //将队列的尾端指针指向新加入的节点        return true;    }    //方法dequeue:队列数据的取出    public int dequeue() {        int value;        //检查队列是否为空队列        if (!(front == null)) {            if (front == rear) rear = null;            value = front.data; //将队列数据取出            front = front.next; //将队列的前端指针指向下一个            return value;        } else return -1;    }} //队列类声明结束</code></pre><p>环形队列、优先队列、双向队列</p><h1 id="树状结构"><a href="#树状结构" class="headerlink" title="树状结构"></a>树状结构</h1><p>树是一种用来表述有 <strong>分支</strong> 的数据结构，是由一个或者一个以上的节点组成的有限集合。</p><p><strong>树的专有名词</strong>：</p><p>结点度：结点子树的个数；树的度：树中最大的结点度。</p><p>叶子节点：没有子节点的节点，即度为 0 的节点。</p><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p>二叉树最多有两个子节点，即度 &lt;= 2 的树。</p><p><strong>特殊的二叉树</strong>：</p><p>1、满二叉树，树的高度为 h 树的节点为 $2^h-1$ 我们称为满二叉树。</p><p>2、完全二叉树，树的高度为 h 树的节点小于 $2^h-1$ ，但是其节点和满二叉树从左到右，从上到下的顺序一一对应。</p><p><img src="https://img.wshunli.com/数据结构与算法/图解数据结构/二叉树-特殊的二叉树.png" alt="特殊的二叉树"></p><p>3、歪二叉树，当一个二叉树完全没有右节点/左节点时。</p><p>4、严格二叉树，每个二叉树都有非空的左右子树。成为严格二叉树。</p><h2 id="二叉树的存储方式"><a href="#二叉树的存储方式" class="headerlink" title="二叉树的存储方式"></a>二叉树的存储方式</h2><p>1、<strong>数组表示法</strong></p><p>首先将二叉树想象为满二叉树，然后依次存放入数组中，空位为 null 即可。</p><blockquote><p>以数组建立二叉树，要求小于父节点的值放在左子节点，反之放在右边。</p></blockquote><pre><code class="lang-Java">public class CH06_01 {    public static void main(String args[]) throws IOException    {        int i, level;        int data[] = {6, 3, 5, 9, 7, 8, 4, 2}; /*原始数组*/        int btree[] = new int[16];        for (i = 0; i &lt; 16; i++) btree[i] = 0;        System.out.print(&quot;原始数组内容: \n&quot;);        for (i = 0; i &lt; 8; i++)            System.out.print(&quot;[&quot; + data[i] + &quot;] &quot;);        System.out.println();        for (i = 0; i &lt; 8; i++)                    /*把原始数组中的值逐一对比*/ {            for (level = 1; btree[level] != 0; )   /*比较树根及数组内的值*/ {                if (data[i] &gt; btree[level])        /*如果数组内的值大于树根，则往右子树比较*/                    level = level * 2 + 1;                else                               /*如果数组内的值小于或等于树根，则往左子树比较*/                    level = level * 2;            }                                      /*如果子树节点的值不为0，则再与数组内的值比较一次*/            btree[level] = data[i];                /*把数组值放入二叉树*/        }        System.out.print(&quot;二叉树内容：\n&quot;);        for (i = 1; i &lt; 16; i++)            System.out.print(&quot;[&quot; + btree[i] + &quot;] &quot;);        System.out.print(&quot;\n&quot;);    }}</code></pre><p>2、链表表示法</p><p>二叉链表结构主要由一个数据域和两个分别指向左、右孩子的结点组成，其结构如下：</p><p><img src="https://img.wshunli.com/数据结构与算法/图解数据结构/二叉树-链表表示法.png" alt="链表表示法"></p><p>TreeNode 及 BinaryTree 声明如下：</p><pre><code class="lang-Java">class TreeNode {    int value;    TreeNode left_Node;    TreeNode right_Node;    // TreeNode构造函数    public TreeNode(int value) {        this.value = value;        this.left_Node = null;        this.right_Node = null;    }}//二叉树类声明class BinaryTree {    public TreeNode rootNode; //二叉树的根节点    //构造函数:利用传入一个数组的参数来建立二叉树    public BinaryTree(int[] data) {        for (int i = 0; i &lt; data.length; i++)            Add_Node_To_Tree(data[i]);    }    //将指定的值加入到二叉树中适当的节点    void Add_Node_To_Tree(int value) {        TreeNode currentNode = rootNode;        if (rootNode == null) { //建立树根            rootNode = new TreeNode(value);            return;        }        //建立二叉树        while (true) {            if (value &lt; currentNode.value) { //在左子树                if (currentNode.left_Node == null) {                    currentNode.left_Node = new TreeNode(value);                    return;                } else currentNode = currentNode.left_Node;            } else { //在右子树                if (currentNode.right_Node == null) {                    currentNode.right_Node = new TreeNode(value);                    return;                } else currentNode = currentNode.right_Node;            }        }    }}</code></pre><p>这样增删很容易，但是不容易找到父节点，除非增加字段。</p><h2 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h2><p>二叉树的遍历：即“访问树中所有节点各一次”。按照二叉树特性，一律从左向右。</p><p>根据访问根节点的顺序，二叉树的遍历规则主要有四种，先根次序遍历，中根次序遍历，后根次序遍历以及层次遍历。</p><pre><code class="lang-Java">// 中序遍历public void InOrder(TreeNode node) {    if (node != null) {        InOrder(node.left_Node);        System.out.print(&quot;[&quot; + node.value + &quot;] &quot;);        InOrder(node.right_Node);    }}// 前序遍历public void PreOrder(TreeNode node) {    if (node != null) {        System.out.print(&quot;[&quot; + node.value + &quot;] &quot;);        PreOrder(node.left_Node);        PreOrder(node.right_Node);    }}// 后序遍历public void PostOrder(TreeNode node) {    if (node != null) {        PostOrder(node.left_Node);        PostOrder(node.right_Node);        System.out.print(&quot;[&quot; + node.value + &quot;] &quot;);    }}</code></pre><h1 id="图形结构"><a href="#图形结构" class="headerlink" title="图形结构"></a>图形结构</h1><p>图形结构是用来探讨两个顶点间是否相连的关系图，若在边上加权值，这类图成为“网络”。</p><h2 id="图形介绍"><a href="#图形介绍" class="headerlink" title="图形介绍"></a>图形介绍</h2><p>图形有两种：有向图、无向图。</p><p>图形的专业术语：</p><p>度：一个顶点所拥有边的总数。<br>入/出度：在有向图中，定点为箭头终点的边的个数为入度；出度为起点边的个数。</p><h2 id="图形的表示法"><a href="#图形的表示法" class="headerlink" title="图形的表示法"></a>图形的表示法</h2><p>1、邻接矩阵法/相邻表法</p><p>2、相邻多元列表法/索引表格法</p><h2 id="图形的遍历"><a href="#图形的遍历" class="headerlink" title="图形的遍历"></a>图形的遍历</h2><p>图形的遍历方法有两种：深度优先遍历、广度优先遍历。</p><p>1、深度优先使用递归与 <strong>堆栈</strong> 的技巧</p><p>从图形的某一顶点开始遍历，被访问过的顶点就做上已访问的记号，接着遍历此顶点的所有相邻且未访问过的顶点中的任意一个顶点，并做上已访问的记号，再以该点为新的起点继续进行先深后广的搜索。</p><p><img src="https://img.wshunli.com/数据结构与算法/图解数据结构/图形-图的遍历.png" alt="图形-图的遍历"></p><p>（1）从起点 1 开始，将相邻的 2 3 放入堆栈</p><p>3 2</p><p>（2）将 2 取出，并将与 2 相邻且未访问的 4 5 放入堆栈</p><p>3 5 4</p><p>（3）将 4 取出，并将与 4 相邻且未访问的 8 放入堆栈</p><p>3 5 8</p><p>（4）将 8 取出，并将与 8 相邻且未访问的 5 放入堆栈</p><p>3 5 5</p><p>（5）将 5 取出，发现与 5 相邻的节点都访问过了，这里就舍去</p><p>3</p><p>（6）将 3 取出，并将与 3 相邻且未访问的 6 7 放入堆栈</p><p>7 6</p><p>（7）最后将堆栈的节点逐个判断即可。</p><p>7 7</p><p>最终遍历顺序为：1 -&gt; 2 -&gt; 4 -&gt; 8 -&gt; 5 -&gt; 3 -&gt; 6 -&gt; 7</p><pre><code class="lang-Java">public static void dfs(int current){    run[current] = 1;    System.out.print(&quot;[&quot; + current + &quot;]&quot;);    while ((Head[current].first) != null) {        if (run[Head[current].first.x] == 0) //如果顶点尚未遍历，就进行dfs的递归调用            dfs(Head[current].first.x);        Head[current].first = Head[current].first.next;    }}</code></pre><p>2、广度优先使用递归与 <strong>队列</strong> 的技巧</p><p>从图形的某顶点开始遍历，被访问过的顶点就做上已访问的记号，接着遍历此顶点的所有相邻且未访问过的顶点中的任意个顶点，并做上已访问的记号，再以该点为新的起点继续进行先广后深的搜索。</p><p><img src="https://img.wshunli.com/数据结构与算法/图解数据结构/图形-图的遍历.png" alt="图形-图的遍历"></p><p>（1）从起点 1 开始，将相邻的 2 3 放入堆栈</p><p>2 3</p><p>（2）将 2 取出，并将与 2 相邻且未访问的 4 5 放入堆栈</p><p>3 4 5</p><p>（3）将 3 取出，并将与 3 相邻且未访问的 6 7 放入堆栈</p><p>4 5 6 7</p><p>（4）将 4 取出，并将与 4 相邻且未访问的 8 放入堆栈</p><p>5 6 7 8</p><p>（5）将 5 取出，并将与 5 相邻且未访问的 8 放入堆栈</p><p>6 7 8 8</p><p>（6）将 6 取出，并将与 6 相邻且未访问的 7 放入堆栈</p><p>7 8 8 7</p><p>（7）将 7 取出，发现与 7 相邻的节点都访问过了，这里就舍去</p><p>8 8 7</p><p>（8）最后将队列的节点逐个判断即可。</p><p>8 7</p><p>最终遍历顺序为：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7 -&gt; 8</p><pre><code class="lang-Java">public void bfs(int current) {    Node tempnode; //临时的节点指针    enqueue(current); //将第一个顶点存入队列    run[current] = 1; //将遍历过的顶点设定为1    System.out.print(&quot;[&quot; + current + &quot;]&quot;); //打印该遍历过的顶点    while (front != rear) { //判断目前是否为空队列        current = dequeue(); //将顶点从队列中取出        tempnode = Head[current].first; //先记录目前顶点的位置        while (tempnode != null) {            if (run[tempnode.x] == 0) {                enqueue(tempnode.x);                run[tempnode.x] = 1; //记录已遍历过                System.out.print(&quot;[&quot; + tempnode.x + &quot;]&quot;);            }            tempnode = tempnode.next;        }    }}</code></pre><h2 id="生成树"><a href="#生成树" class="headerlink" title="生成树"></a>生成树</h2><p>一个图形的生成树以最少的边来连接图形中所有的顶点，且不造成回路(Cycle)的树状结构。</p><p>深度优先生成树、广度优先生成树。</p><p>MST 生成树，即在加权图（网络）上，计算路径成本最小的的生成树。有 Peim 算法和 Kruskal 算法等。</p><blockquote><p>前面一直学习的数据结构，下面排序、查找属于算法的范畴了。</p></blockquote><p>数据结构：<a href="https://www.wshunli.com/posts/850e5c53.html">https://www.wshunli.com/posts/850e5c53.html</a><br>算法：<a href="https://www.wshunli.com/posts/444e2c0f.html">https://www.wshunli.com/posts/444e2c0f.html</a></p><blockquote><p>参考资料<br>1、《图解数据结构-使用Java》<br>2、（数据结构）十分钟搞定时间复杂度（算法的时间复杂度） - 简书<br><a href="https://www.jianshu.com/p/f4cca5ce055a" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/f4cca5ce055a</a><br>3、单链表反转的两种实现（Java） - CSDN博客<br><a href="https://blog.csdn.net/acquaintanceship/article/details/73011169" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/acquaintanceship/article/details/73011169</a><br>4、data structures - Reversing a linked list in Java, recursively - Stack Overflow<br><a href="https://stackoverflow.com/questions/354875/reversing-a-linked-list-in-java-recursively" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/354875/reversing-a-linked-list-in-java-recursively</a><br>5、【算法】如何判断链表有环 - CSDN博客<br><a href="https://blog.csdn.net/u010983881/article/details/78896293" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u010983881/article/details/78896293</a><br>6、队列的实现(JAVA) - CSDN博客<br><a href="https://blog.csdn.net/lcore/article/details/8868078" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lcore/article/details/8868078</a><br>7、树和二叉树定义、基本术语和性质 - CSDN博客<br><a href="https://blog.csdn.net/lsh_2013/article/details/43121373" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lsh_2013/article/details/43121373</a><br>8、java数据结构与算法之树基本概念及二叉树（BinaryTree）的设计与实现 - CSDN博客<br><a href="https://blog.csdn.net/javazejian/article/details/53727333" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/javazejian/article/details/53727333</a><br>9、data structures - Difference between “Complete binary tree”, “strict binary tree”,”full binary Tree”? - Stack Overflow<br><a href="https://stackoverflow.com/questions/12359660/difference-between-complete-binary-tree-strict-binary-tree-full-binary-tre" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/12359660/difference-between-complete-binary-tree-strict-binary-tree-full-binary-tre</a><br>10、数据结构 - 图的基本术语 - CSDN博客<br><a href="https://blog.csdn.net/wangzi11322/article/details/45417081" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/wangzi11322/article/details/45417081</a><br>11、《图论》——图的存储与遍历（Java） - CSDN博客<br><a href="https://blog.csdn.net/Gamer_gyt/article/details/51498546" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/Gamer_gyt/article/details/51498546</a><br>12、Java 与图 - 简书<br><a href="https://www.jianshu.com/p/a47a147ec92c" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/a47a147ec92c</a><br>13、DFS（深度优先搜索）和BFS(广度优先搜索) - 简书<br><a href="https://www.jianshu.com/p/b086986969e6" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/b086986969e6</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数据结构与算法一直是比较薄弱的地方，不仅在面试的时候会问相关问题、手写代码，而且在笔试的时候发挥重要作用。&lt;/p&gt;&lt;p&gt;这次选择看的书籍是 《图解数据结构-使用Java》 ，先入门，后面再深入学习。&lt;/p&gt;&lt;p&gt;算法的时间复杂度，用来度量算法的运行时间，记作: T(n) =
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://www.wshunli.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="数据结构与算法" scheme="https://www.wshunli.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.wshunli.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘阿里巴巴面试</title>
    <link href="https://www.wshunli.com/posts/964a7017.html"/>
    <id>https://www.wshunli.com/posts/964a7017.html</id>
    <published>2018-08-29T07:51:07.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季校园招聘阿里巴巴面试（客户端开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘金山软件面试</title>
    <link href="https://www.wshunli.com/posts/52954f8e.html"/>
    <id>https://www.wshunli.com/posts/52954f8e.html</id>
    <published>2018-08-29T03:01:12.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+ahNrcMFNzDixufSD2TmxTbUxgfLBkT6Zat/Ukortu3n+YKARApy7auWMSerSmgbMOWeoStQdlc+oWiZ17LDE99JldGaiBcJcBKQR7+9+ZWY8RHbPb/5be2XTvoM6XjFkC1Yvy2Wq13O4smiEuVMHM6HCEyW7ocirGQponcFYgrqMHHrro06wRhe/Ng/uoLkDfB/tMgMkbFw28FwQvxnDEBN/YdVPimgGI7+/G6dEfWgeq9jdub6D6JTaBeh4n1bG/Nd9dSV1UT1sCz18e2dfnT3dFw5wMmK0aQnvvVFmLXBvOmgAp6yzvpEWfAEbQJbfV5C6zbk1SYLqltoRA6MQZhR+f3B4xt1P5os0+FvrL1nV6oC+AQh8lkFhPxd4l+MfemDMxpGgvhrB5x6fPcmc6QnM8sLkbhloCiSPmt5F3a2OoP5HrMiv3yuf2B8CB8cbxitjqNbQUQC1qKHREEp9qQJ4enALtgQDxAp27zj5Hhi+eoE0EPMsapKDX3ezQ5XY4pgenlxQn/vx/VKaULK08QpmnpVByaNzEl869fNtX8OytsOhO/IKg+g95DaPPWsqwiJpNYaI0wv9iHtMZHFVtv1vjGHuoKAYQD3Kr1ii5AMBNFULOwxMpe4cTPnr5sHhn4ieXhS6kJryXSu8NWVuoMaYh603tUnATohNmIV7KUeEG5oqfAZwyCiY0rX8zOwltfGl6wMA39jg4QmbJJQ15NtXM/Hm2gM8ML8meSCSO8Hsv6xNh3tP0e4GwDVL5+N0oBEY2bsD7UtVY5nAZXNEEBhtkIUFRAaT47NluMdammYs/JPJwTFYh5qiOViM94F+3AJHtiZgUvJh6PHhw7aZYhZ4MlwNDCfQE0XM5MpbnpUPkgbPTgq+OCN/lTEyOCIZcBE7OWLYM0j+cBTmDYJKF++HA11XtkN1699AHzDA8do2D7P9YkcNlRHza8m3sNZfQSejGz040GFwT15HpRc0bjlaWKCO2FJA0iOq0qIKB6cFKYGZLQpqhvOSkQkuLq3WRaMZZpgFp3Y3zP88y3Nd5cJ2PLryE52JPnmsillCkL4VWd3A8EsM5dy3a6jXFKi1uvfkFDrqUDlaADPpNfX04hmjMcFT6ofQ8n6zqOo64sw+LpXS1uzh0T96OpaL4vcfVG+vujpwB+zlF+t6vQeDYMXvmhzDSE14OFddzINwxgtBznyxWWVbuMf5uf22qKem6MTzKat5WuxIKGL2bFIVV4C0JKGSkRrwBjIGHSVxtUXgiFEzq5clT6+ziMs6X/pKZkmg57qtSXSn78hvT6tIiDj+7NrYtwH5Odw3pVXKvVifAQZ13pfLsApUukk3BOJMJmZmv6qv+s6JwOXXat4Lt2RcjWs3LKjqTbFNVT1K1YG5X3gBMjqSwgZr+d9FiOvjDagGh9A39hpaEMot6MXBYd31I6AZxJx7ckLj3mJSiLlVDOjQUoZb1WkY5bGXdMI6E4WKuiFkfpnwuxG0TVqt6yDx3vfssd4dWdVRBfyGMHhjCi220/IJt/dPL+9SmOjfCJhda5YOxfAdEeXhK7DNtrkVFdA6SDg4t44ET2YOOkEed7KBpcUeWgc+l1RzO1OMRrBmCfMYD4PX08wLwBgNCDZ9z3+h5JwBKI7ICdpHBufgemE9Wmma0sYLziistjN8ky65WK9CrU+YOlMWek/x57ptlhdZgvypLg7lQPxuvJpAe2y4/C6mCGRAwDb2DdJqZv5aNtg+Mh493QGu+jENUDbxKJTMEyKgLrrSFmGnHFgvpFUQ1Z3Zf08s2l+bTFP60Rq6Kxyj92igow3u7QQGb3fkhtjfFYFnRa4XHLyF7ZuO9JOmIxC3ka+T3fayYiHU0klgQ9ul4NK5qGYlAyGrz95byMEnEgyWnbj3xRG47Gyi615dNSkItotWINwneFRtqQuRf5YB+X6+K3pdIYot83uK4Shd+hj763ORzYyPnnkI1vbt9mmnDuDvOSSaUEpOC+o9ULQ3G+nIsAgnJK6Z6EPkTnIbWx/Hab+7QPCM0njKFp65ocx+B08maNl19IFUO9XwzWKPJRUIpqh53hkk61H/ze7m2wLSWqZmC45HixH5cUGhmiNw9YeTOULSM8UtTCwdwIz3t1s7e4euteBfK75g36+k2sCuCVSnCj0kTvN5fiTqDh8KsB4CCD9n72M83ySqVHIybM/Ztz0k2Z+LApxRRMknQHm2MHW6acotO3LEESHQTotIvsXm0faSmdabFT/8fRDClNLl7Q9NRBv9vRwryV9SSdQC6DnV1CxlgeUz03rOrZgIKbRcEDjq2mjE2EDU/dLsS2qboJ56mNNWpwe8fJ4e+A9+9YQSSIuIYTJ3QWR3EZgwGMo6dguBE+n08l2ppv0f70zfSD4jhk+IUYlnCPmX2kdX1GMAlUcEPYHEiKa50Y6bRLcHD3iNwe3EoH1Ai0P4VL7CluRkBixq3TTFwkE3AVL/GXAxjGjj/5hQrHrfz8GozvlP4Ey3KxGC2kTHDy3RIYZUdBGdgg0RXY4QD4p5eAQxL9Q/GLuLhKjsqyY+HlcTLchjh44cRPS0qrVZBXtjqd8fncQvtcJhnduVvhU+vbEa70MrSi4QTb8uowYfpV2y1lKr//V7g5IAhkl9VU4ryDl4z+co9JZjeSguk+pdtA9//ahqx6pfqU3B1EaSV8UNcUvpXILm+7zGiGIaKUvh2aMnBuvRHJs1n8b7UHb+p3zuj6k53Z/+1/gN8do+Sk2P1wX7yPHuzd4eR7O/+wmVv1GGZn55QdDg87bLCVUB0R3+ZwQsizDkwbCyn/UtqwyV23oWEUyVoy6aZKSeZJRI7rOG+rEWlE5jCcH5DhA2HgxdDvcgE9mxSWjXOdcyLfEx4Iw+LcX1Xm3KZJ/FDwTr5f/Dh2SnzrwqpZ8vJrCZw7xdvgqAbMvPKCAueuYOvMIeJ/Tp4rV09s1IdRVgpp5pmw6dLhtco6JT/FCvnQ3vRifQOwBoDFZhvDQ4dNElYRlzam2XUlOzYXhkLk21CBDG41nQ/Bfdap23fAY/uJjghY6hvaFlVOwVGKgrjoI7hD9iS8ySSK0tg4w/YTrT3b+t6dYrlDIfjoxjfMxm4YhL0q0AD2UdasBxeOfC+0V9+C0jGJYHYLiJpUN6pZwF6u/BYbdtyB+v1Km77IoE6IbX049bjYl1c6DT2WHF1650RxBXMBBX+SHffu1Io8WKSvlm/G4tAuCM6M+DAIkVytpniDuSKKuLSclyl5ZG39n52SOA3RflTnk67G1DFBLdb0Ji2DQjQlQN4QLYglC3KBMdLL4ajcI8KN4/22nlY2Oig5o8QmuGgXIGkmKhtz0sBlSAX+NM0GscWat6ZIoCD1k/n+G7OMPDUlq9T9eyKhXGZqNtRG2aJ1L6fct5cl58RUeCB2+/m92gFFRVs0PybubcvMjwy9Ib+lqqxa66N2VfHS6aKNFWqrEcjwIxJj1Oth5MbrWTaN4Q1/ASlAH6cU5W7QNaUqQ7TeATh4mqARYUj6LraWixIKS2B2M0ltjyghCK8k9vBcoxz8xy4FCUNQpIr8ys+SKRhNw1cMli4K8nS16AbNMQdx+yTefoPkkKUoxReCLyaX/uL9zNAadrFAHU000Jv0b9SzktnGspfljPBDjK3f2ixvOTyTvU95nJHMNcJUkOQl22zot14Q8X4+Ka2pTsZVoQfOs+tpRZNk2rRTMkxb3deKCwRzPqWM7P6pmPo0D5JiZmyMBWJO55ta9SuIkmORKXNt6kXOHdCgHgyP6OPk6qoZ/WmJ6gNsKjAjeiZmqc6x53NcSS3YKPirRqdh9cEStW2x34Nlx1Qmkh9FA5rMNQk7HXxfVYWUkGIVzsCQQ1FC6E4hT2S7aXtgdoWCDDqzUh0ezwZsPJxj9Eu2AdVtbXhMW7putMlxGxESSHEmIipMMl60Q5//JDjuoOuuLLan6ioedUtQXu9aDlQZYkqdGHCqbYszsT3XU7qT8dbl8QuoVO5VAoCmrJFv/3mllampyLkxR1nVQdd9jtQd9HuUptL2xcksvxboGO+zkKQ7rhdS2w2dxbWktgAcEgQ2GvTQkYj+ksbtJr0gF3NiFTNWtgDJ9RTr+4uh+5JvyPP3txWel5W97PIBhGfRymk+YwBgbsK1P7NtboAiUrE5/qwJdw5LmA1HNK2J6UK4yKBV0viNxeivSPIiRRDITZG/bcHE+Ioxs3Jlh1OECwoBzpYT3+0bJvXr0LEp1yr9p6ZW/QRS2SDDS9ZDSBCEyXkMpWOHs2LDy+PPY5OP9mqAUSKKJj26C5qVF2THq0xKsdNrmFpJInH8BSxmddO2WMZTfkOt9lNU3nrpSQg7nobRsjFYscjZuADsz4GSwflLqwLk98pPPDNaIEFHD0kk9SUeuNX3jIJaYiVdtNWn79MN+k4CaQPClNhBKwpN5lzhutvsSrmdb67GIrtyjrM8NGer0SualRYWTHpd3DWxdoewNxYABwiSEq0Ehn3yoH4TT7/mXPAQzg0q7w2qBR+i3ceH/yKMayr36ar9Cs1rNdBvBgVUR9rNGHQL3GVG1aaB8LeO+f0tyFlhA11tHrkL44roxfjfYzn3RD+htAKHx9j9TTRfJ8/2HMMvHdi5lcNjuSV9n29v6Fc9PGk7QB5uQViJPniYt7OQvj9WlCrrIhKMZAg1H8jG4d/2h4ENFF2YfFJ7yio1x16Su7h5JcynIh/hkEY5+25bcJjVNwf1rkN9RRkfBWyMZ6P+AyAl0Hkv+peFTaoNC/EwEvh0HI0O+YuUE5Cb4AQWRMsHh+LZuRAwQQ8PktrCGOZlxtbFGoEk/05v+/Dys95Pr8GbWSy5ZqD483ghvLDSohzSZUxBCxofr+rkJvQXF0YP2R93g02bYoATyy3zmrO2skdhd0GdOBX4CxNANyBMzLbYBRP7KvdzweeVnrZneb6jnxPYLP8X4eNMqQD2Eb3hyt7JIav+JkKGz/lnxd06dBgHwfOdFWRVX6K/mWDWf4+zePR8Wv5C57O5cWcV72o/BmDSbZJKLlla9/tVdDrMMRZNaySPI+3NCgOvI8PMHgd5bXRM6ko1DXpUHXVJQSbX4ourAHgw3znb8U/y29AOQyEJRgSNSkisd6eFiRdibZqtK2inVm2YOYWyk7ydIKtBxzENAsbL7yhUPwAgBUtwczZ//mvXkZiQmiXXkonyARvWi56qN3dvEq+qH/KF47FekSoaNbaiqmBzUm4kUxbTOx+03KGjaKacruUiTnkmQshL72JBEtYZn5tODeEpU0Vl5eFiSgxUfN+U1b4poRiKbU+zF2aH5qyDPWMQOT3j3wnD2D8Kl9jY9demSbWSYliDw7C04UinHZlC3HZ5T1/avfU7kAOAIrRcdHoaB0cLSuSu5+kPx+/Wl3nClxKPIJdctdMz3tlyOPnqfztJldjPhBWY8mqXrt3lwPNc+Csz9Oxw/IAMlw+nmdxoiLRWrNSiugp6H8DflktrTcWcZjcUCnEB6h410Y+ilYVyCjdWLy/TC+wgJjA89pXqIMDjrQ4lohG2NThcd+S/dP4Xo3oMNzIq9u84yZepRyJC5xmWcR+Kjb3SdgUdLawkfDlOO6JTxSu7XLDEo3WgSXGvlfyfpb+TrxJnD5at9gLxpGf3euw1eBKsSJgvWZxhrPe0U3+tWh4ld65iWvS0P+mUs+eG7RYz+/Oz50Po50CjpSsuJaneyB1jQZkoFqSCsb7TgbCczFMO8GZuuU+Y1che36g6LCmkUOCM3ExgVdKW5UwzntsMHqI+6Y5IveYato4Xx8kiyfQUMF25vGgEB9nB7rh01pw0bn18DzNXeaaxe8qt4Kc1k1+A3F1cnCfV5f1tNdhtNSFWShGx/I+aV9vRVvw6Aty6VCVMxRsIUZFszjaiV28yjkeMSg/y2fjN+bjcVeJrUAEKcxXBQJC6VO8WRWBhxvDJlnNUFaxUW8CWJ8v57jpXUQQo465A1emd5o1STVRw+3TaohlRoDftPyhDddq0hEI/zpqdV12gZJBJcKcuewxBUjcDjDLEBpQwXP6dbZ33ze3vXbX9afEb+OH7adp20cnusgBs5kgH4Nx3f1a+rA7kkU87TrzT0XocDE7L49HCjrSaW3656F3HsTKgXFOaDP5sJG3tTl6f3HFLab/OCrEkwzB7JzdK7RsElCyFgetV3ZNTyQJKHgMn3aXkK64G523ZjM9JPEEodMo/3Ti/FibzsesClY9+ze7Y9FP6TjWIW/+9IP9/LuLhVPvJrMbsSteXOsmwSylg2/0vSsBOxto4pxH6WQkj0erKIEeqSho9r1eadsv/x9hSMncv22gT48kKrCsOl3dWGDUsxXwsQTs0vLIMH0a4KF7DNKnZJo9O4D9OccFx3rHlyUdrDOfRsGqfJlvATbyWjDxHWHMS51s+L672umdfakRsDOX7x5f3ymgxMi4GGvdHGX0MZpHh6OEFHqXZv3tqyJFzyMpetmsDW1/6tXXbL8brgcp29+1LOXmCjA88GCyuGpKi7EeWCj9q90rtNAeJ3dhJ41XPcOL36i5hhXtstuJLbZ4fmzXXieQyvqx7Edjr9WpLGCrw8aiyfspzYz/j+B4ItRvPKA3Li54M0vROIgb7q7SN7pxNP+DPQgmKMZbGIeUKFrkvF4kf+IX4g5eGh0iWjpHBI197+CZytOT1ZhIvO7n8hqKYauy0GpIBiP4C1MAmLMfdImGP2Op9z1VvTLWDeKOQs2AaukvzAX13ln1FgM5SMGGD6M2V/jP7+KhJSdMJegJatTaekogMRvXhmBXTd3Mq4TWuDMUi7JPcHaTdFNsGL6M0sXnda3POQMmON258fqT+XiVXM6ySxZwQVtVQE91pPZU52h7TtYHx6FkS4brL8SWinzPSQnYw7Q+xVFYMJrrK02NyIw6cDYu2ZV9m0V8VxOajJ0X76+VXIsBmGGb5srlPansccoQSgnOS1cnDnqnp7tufDd8syChMw+R/JmxzTrYB3smOCTeVDu4YoZbzCEzSW1B3HXmygk/mUi/qMdbzDopsOLNjDDzrzNz8owsXZipZG8JtVyxJ0df4Vay/l7ke2rZhglI+nCFGrwtCTEPFHlSarQnRzvSPArB99Ujhj6JB+JBzUHn5EwOiWXI4QeeRCASD7mX07av1na94kAmWf6So1wAKjTlI4AHrQrg3dlIBTO/Qhv2CendtIs/b/CIGi/5MB4CAPOOP4TURFMVDL/IXcIcXTUw+tHfosiDECqCkCmUC7DN6ihrHjD0PEdFPC057I/IugvYW151sGyanGC0nTQAJzQ/esUH8JNs3Jub2YjwdoBitF1NCn6dUzob4gqkGrFy9Lc6KCHFdMn0+Nmd1E6J3ecoMeH3j39jqTzKCPLcugafxe0GzQh8AirJLW+/ZmuiKJ60XoUp/00yTacUi/ywfdl+2aEwP3CaqB8mHXkUTWm9OwUnaHD8tCQV2cU57BroP8fWksCUpAzeVb24wT4LWRa06k2/SszzpzrUlmXQJtz6Wy60zwuIp7UqRrut/iCuUgNl35+IN9R0tUUZjGkyN7HYb//pmMOGcLxmWDWLObcLyj+kJX3h2dk1D+qeeGEvJE5aAbPRwQn54rFKt3Y/I8O6lD3ch7yC/wMPiGr5tvWL0Lyh7hbMS86jEhTWXyJ1AFok08/nu4a1qVqKhDcH05EiJjHzg/+h2MwDVZIRcLN0vpUbu+R3qmNP33/bMpqIpnLgPlvjUItCszmlPzVaMCjRdKivphPcozHNStWJFf11+HvxENau8wZUWl70OULGO2sLVd8id6UJhJKgw4ZJjM4zC9Na34bv8D8kj7IPNDwwa8g65zET1UmhfE7WI6HEFfQZ0Jnh5blk7TGPYkYtsRoxvtn2cG/WHLSTnv3uQKrtesJIVRa3AVEsHelhiJdp3hEsG8fVOsLvJvZSJHSxQvGoVH9qR4kugIp52WgXkppQcdhy/4daxNFXIRhZOSPb8SaoE9uYSt+tAGR6jPX4xRrcUYDxkbBgWLN35g0hyo9d38687yKRTG3pc94s33y+2uaa3JyQRqVil3BrPIsJ49cj8Xr+NdbpJefmIm/9oA5Cl/Zh7BLtKPgeQReocJc2p4FNtN6GdcSlIBKK0KReeJ5ikW8PHKl0WLfJ39voIxl9W/EXYQnhdLzOQYFmELS0AIBkSlEs4IF0dX08iIIluTNrSlB43wtMTxY1vcOcHvMQlD/Jhk/nr3UWHiAuHt/asWKpoMnTuyOh8mJbFACmFVUJSvReyz1Kp4NyBR2FS1ua6D19f5bgHUQlh9Hzovt40UXWR38B3pLjzJ0mv2FvUT89f0In3QqUq2AEQH4zibsyyQKN6ZrnC/eAVFnHep9CD24NrRiomkhXgp/EozV1sr9z59bcuttUwIRhO0KPjucO6LlANEQDXShATcaHmeTyzZDUJUqI9vWST4Bm5+lmghKGSAxI6h+LeTmjRKzjB/5hs56oqcf6qTAZvW6Bd4ZQ+h/bgbsDhWlNHK70rxKXcb0aLri5waBsfpqZK4V/xUfAvsRA/WABTULAV8ITUkUgvfVovHoYdrpUay4uuJolNmX0ey3pyk6rK/Wpzxs2INXMqC+KBwlQyomnh33pQnDsEcmN75nbhjOL+kV9a02FnvQaXDYwEkzKKvF3+G/LjrNPn/xuORRojP7BVLTURLju7KxL3FoACLXqtdAdhVAh9zFpP2zXP/hfe97ZJQlQDhf2l6G9mqmNg0pWzQU5lr25Tv31Zv9Au6x1rypkAbWDBQQ8yCSOh+PfuSok1ud9NJ95Si4ZXEZV9xkaKk7/H/tmmRmLmi56uzV9be5ED92IKRxdxbPAoecOTCE7pi40lMtXgHu+qPs2pxydnpMxjvhOKmLzNjZSdFdEBBt6YJFeJfFwcvDqDkr8xKOBjauDqucbu5w5QwONhzJUEE6Js3Z71j88sRGKq46aO0cLmOr7JZfMctX3dTsOWGysz1fjtHH6IgiBcELKeoqAxML/obwcbxLC/4Mqkbwe+UvO6hj6JmCE4zAp5+4fXLDPx6lIL1KXbJjnF+8GFBSygx53DGNSdgOtljmtkWXx++ktygMT3Z++YLGSyfNNGFN2kSeKcOSASsFtRJHTw2Ju8p/SQJVtPZlOBmgWO6UySYDzMoUvZ6ZQXtogrtzEc8x6fVTs/r+ZMTWRqYUUYUK/ZUoO37P6ZTlcdw4147odq0HfhIjkCzRPqchfelo+FlmeX1JRUUYe4WNq6iVPXDnDlBjFL+/Rq6langmx2cQN2nUUYpVL58Kd6xnhLPBTvqz1Qf1GfD3IhanCOFIVX9ryevvXJmXStkbJWR9e1xUOFN0d7nmVLNpfdJMOMLXD30/nuJTIlqVa1bAR6Z4aGMPOYmgbYIm9wCxjtMRarPDUOhs9NtCf1iXgROHR+bYd7CflKGgXF5N/TGelamkEdO2i2nNs5O1wrJTPz8ftqpnQAcFVZy65JtomTBDrVAjXcnIY1JA8l2JkcbgfnlMaIWkZyxxlMqo7Bx6fKc831Jm13pzGQmRnStiBlgdB28XRuf+Pm0zEiiE1KMB27VYkmGpQPlyKs6mc+IOVZNHlHjPfJ1033h0bKGLNWrPwjvC+oZ08R4VgXh1wi6j7lHAWLu+Ci1yXwgOU2sEzPeVhW71Loe4X8bnJTHLmkdSbyOEsWy/Y85ArUC5URyhc8o1ZwX/WuAgnVJq62vSGVxmLUIBrw7nuAd1oF997kgPzLC5FF7iUXeMPSYRCTjGJ9mjJhp29GxFo1yfwBKXf4XbJprtYjmWQC20maZl6XHB+duVvBJjCwyqL3mdeUeaiOLXt5uRzbIjASLAdNKMUGIjhmf4BfNr4G5CYjorLKv7X5m2paSmx7FVUowNGWlZmx5BXTSk/6CU8P/xUAjT93JRNnbxi3MSnFHV85w+Bg3hB/RtQLRhYFvAzVW623Ri+3iTaCnwCQNszRnDH1XFhREsxrHDy7QkNh6bZEGzZwzIyRpKzf8XiTilwS+gDYCZa8fyuQ6BqAmHltxhlHcDU8Io8myaFbIXUa48Eb6CbFSapGhX1fA1r1NWfOT8oIGJpRHP4Zef5kgwejPkvlBlvfCXWI0uhTX+m2cOAUQ2xZcouSq+YSKp4vHlUvtGWLAp8ptydbO6MxbefHOVbSHqz5lMcsaxqwXphEH+08pS3i+2CaHEiOK+pLUcUl7sQ2dFlGfEkYU0RMUURMwYq6TwA04oTE+JMmCHFP7UuRLqacoqTSzvICCX9qG58lTtH4QTD4wubbVnSouAVLWHX1N3WjDFojmGt9xB9yUelqfrhl3po2ZQMkM4SSRAJKtLSGT4/WWWJAof8CwYRdSLpZejoJBplA9fTzZ57fohGCwbfntLNKK+iR6Giqo+ng5g6xpULoa9wdlCwja3YQzeYkHlBlFIEgkWZQfO2ZL25Q0XQ6zOntRlQCd8xwaoXm8Go8K4OEjtxM81gIAXmnqVgIcsvQr6Jz73mmDxyaDMd6ix8VX0PdU8DXw1GY2678mTplLsn5O+zhAUGKiNoHS2b8rg9tyrsWzsyWEGK33TbitDvHNd/5iLiN1SMn3uGRt9ORw/APi2EmGUT8wcKh+cOE9vUyrPGEXGsaOsfV70ruY5lj2H10MU3WRhdrpNcu71wfN7WEzJMJ3EzC9uIwJfGkI7Rfx3YcGzBIPCoPgPSBESmdhRhi2PdY9agH43K1ocg0hbSGDCx+SOgntLwYdx98148DX2uyMUrGYUvAGh4ry04qVFm/mm6QIxXkIP2EuYqKE0Ekxk02RxDmfoK08CumQyGd7/oZheXt/q/v02hTDUnSMSJQOWwtBp+lEMU6q1ewFO0k3LB3A/J5bM74bn11mCa/mwwI3OR8mQV8Txy9ht1JPpy3ShQCxa5PAz81/5OeS22ZcYsuCiIuCnWhe7GSgVKUNbBx7p+Z9/mpVjVHxYxVGC1kCSHnp326ucnO/DyAPE9yego4NJxT8p2IE4jCKZdDUtJMjwi3wxeUGziKVgZ9OD8fuom3m+1N48hh3XFmX+qCW7bUaTSVICRQFLdWOeohnU7GdUhfkFVlrE2MpPdy5BQNusYVxMx5Ts3OZhNBrg+rmFn8yqgFKRt6t/7qVhZfywqLX+tVbVZ0DeqwerqhEfYqzG5mpB6jcklMAC3wi8UYTriDLwfPkFulUwxBTwkkxLD2hSK5TnSYw5u9ck6mqo4TsYjQTmgkJKIMjfkCLAiaRfc6roU30yiPXABcNXimlYTKQOV/ZBC2fzEmVAdiKWj7L2mrq0NrYkpTvNRud5nGWwM/H0mYThLZZ71t6C+jFtOTGKN+ypb5ZFF9Yv0OTaJWGt5VlWziGLKf0sMqKcU9MVvY+QQVdkSoT2Q/v3XbWmg/j7IgNkFKkzxDt7idsUvRrEvA+y3FM46XnNc4zEBiC4DI6ZpIfbQ2GAlhiU6OzN3Y0svHr1cGk/MZOqy6E7LoemCSoZY8SsmdI74c7jrL333ieV76klX+wmg4IEYghnjA6V4b0EptFuIXLjD8+xUmb8E0aHHZGZx6HFp2Co6xzz9JQZULK/gmACg2pqWvDSsKIgyFxYqLpD+/iPfoLaolSQTA40MKVJs25zbDspzBqLD1g4w8Q9D43SMq1o09a5mIahZNMVBOZBfsPllNApzqgfbYGiwLe580qomKsTB2kcbpZPnbZEKWb0lLfSlGEnD7VSLLy3NEK48DoVh8j5xs4sze9PUMWvkUcuVhIxtZpcfs5etiqFvkuGs7VQcgzKxWtkxQ7jzGEi+w/qo5gmaJAvaUYiA3MiW85jqGdrNAKCI/t20MtJhwlxJXQncmb2GQBhaMX6v5geokkbetOhBzS9Xu0WLVXnrYNqv2voMt+CCAl3mzmk5Fu1xnpJYMggUhFys6/elYJjzwsEFbTrMIWi0iO3weLIN5qnzwzCqHIwF+Un5F1c0Y4jF5aXPuVNglBw6wtK9khldDwgIDKkb4fM7M7PtZGhRZP396nsrkxhgNm/Hpy9k9rOThc/t9B24zvToqdzISRrefAmRV68biIaxeJaRLwtvWPRQ3O8VRwkrIqlUexmyyHQc7T3aJ1lNkmdp6iQDvfbuNeXQRdJdN17Yg7jCpTuQ3ixejRkfN0I//9lTGCLTdL/fEig17zrUJIqRFF28wtX3+/7T4xkax6xfeOf9Gtp+8oM3C/fj1dhyiG1nYpdxKy7Q2Z2wjHixCcmOyptUWW4m+Ihn+y08Byc6cEKdsNnDEuE5kaLC4Br2BtPHdLIzfItUbwFz1f8V0KpkL4KxhzrpIEcbVb+FyYWifiVZvgV/jjJR48crYsTc0c889EYztoFr5+Mvp6IwK21pfbS1n7nwmp1in+sEibfaTuZJd0tYYD6/yDNfplwmJJDGjJHw0USt/AiWBWPMQCXyhuzUuoEu/gV4ky9A0jQK4H+PX+yDD4Ur2v/h3Ryh7GtOiWrWRfPcJh9d+nwj84UQ/X6tcTvrDFL3BLUQOSUE+Ub4xskmGGLVe5E+L+sgomVE1oBkG5onRLrhIAsNbJ/Nw+ZkjiyEcUhWcEVUAhptH0vAPmrpNK11jdAu9cf8rszW119zkocuO2m1zkro9bhCqstF2jHZfkwB427WU7eRUwZrEuJbtU5mQJ6tRoiIs7i1kYlkdXqNr3gP+uBl3n1fhdSuxvJGPkH9cpUr4gV2BtZa2NNZ5VtJnCxBvCeI9HNgig8EL9Hb6C7WVmnstXsXb5fE9K7/KWBumyhy6iOZtmngIrGw45tTE9QvzZVLD3uwAl6IajADHctARzoGpk85PpEqbavpQpYyASJ8Lv6SgX2PLyAh0c7IWScKWI7RKThjsr3huCKR5cBEfMUh8mNIP68UcPA04Nr9nKj64TNzhmkIR9rG16OQrpNO2lWgJ6YDJJnTNWvoL2uznS/h3sR8IaDexZaG5XM0QkLxJBRdjfpiFQx2UBP50feh5rTKE1p6Opwh70u3dTqXI+2rdNTSUB4o0MXx1zohm5AehdKmflYP/us/93YlDipivkFVFCb0Qk9D9xu16o19VleTeb2y1vMj+OKpGj73hgYhVL+gZFx3wqZUjChZn4vqJDXZ1OpHJf9jk4xtQXyKZoTjolkT8CK4D+9sDPddz8pMlTEzA1Oiz8xFhHODUW/s6ku28jANO9+OOgf6TGR1tgALdUXDXbkJ6IdhiWPpvM42rbiKpKfsPVe/hpAZNko2nimXKE6h69xnLD4V2LdAsNiVd1Rbx3AWHylAMHI2NgjvAxgWggjClxpAAYX/JEXYgyyQ4J88qkSNpGk3T8rfPvdgB5IZKWbDXZ+ciIn2I6abXbQa4C4nlYLYOoE6gr3LZ1IZaujbzT6shYOLqPMqSEf6MX7HpGmKRSNaFAS4/xZsg8HaVDM+qAw5rEWEQgd9WUVEkGTQqEoot1ljypL8fp1qHTZZOpaQHFa3K3Y0X+CsgGYCru3pJokAT5+nZXcGJb/uHp+1LFLGCKneJE0w5mZ7PlsSI5vRyj8oSs3z2g4240kUt9s+wwMgIUm4ANh5Of11a1dezN4sOd0GAITIx5UYGPjdKCCxNNVpaRAztBNQjKwpdOyaIt5rXx40Q46g0SR/SJeuzYHNiL5bU28GBdvVwoRE0Hw02ArWqvJU8Y0z3x8r+N1obhEiSIT+Vn2MvdJRgZDtW97AySIj4RX5i/dxDUkIR7DtZ9oRyd4uXzWFDx+pG9uguRKn5T25+7dyHjMbp0FxJd1vtIR0j/GjCl8RdQVPIuksvQROyuSWqqF6WzOAH0NNaGvt7wIGkY0i/+VNTeCUEPyQqQ1a6P2rs8BlOU7up4xuE5vtkOQiAAP3KPPwi3gwt66xQZhe/K+AyWQveVnVwlCGTjaQ9GisRQakizRGeFLzEBLe76fHpdoIQ+m3Pk2TwPoFmwqvS7LaGjROLT5l1mEgcqHuraHnI2XQb68m4apseO4l0kAzwksj2wu1h8yaDcy9E1mbq8MeYLI47a2mMm4R6at/0ldT3uM/NLFfo1vFMIw0H/9j4ylImBulIYAVvubPWtKC5ORIkYDekz+NFkCELNGLyUmzrAUVBa+jQF0QWJMdtK5b+Vsc0PaTn5qxlMI8ZpAX+uSdUvb4/W2QpbFgv2gr7qSNMkVveuhSJjkP73L4+yvKviNfGp4HNMGDA6cVaDJy77ktZp2nEMRSe4wkFVSOo7893NwxnNzWTq3wTpoCV9Vag1FwMTBwv7srQXoR9KkXLV2tCwP1y7yHBRBdxC67dZDbgnXb374TBJG7pzs4NfhgEFEFNWMNWyJf8HsXCn7lvqDWddOhV9oBhU7JZQBeE7r3d9OjX7ZZ2X1jthuTlMu9sA+Z/3VK7/E7GKYhLMl8Y3Ue2MyfdIipOzEDgY5r6InsfJGpl4QJRrw1uTR3k6yjX7uQ8+NnmUIKxOggM4KJQDz+8nFi3fHZBvZSbjKqyfC7u/fZcQvAMwWiNonGyOhXrqMOB0K+Shdh/mKWxdLgLFnw+LEC0gAVEMm8CQ5hmUpOB+RSUv/ss/zXRVf9z5EBlJToou8YVt+PVoQlRPEYTLq/zTQ52Edk81aoxr7RrGEbSp15fJG1bzIv726yapO+3sSwfCHxXOTUFG5oZz7ByIFNCwMmog6apzCAK/hrHCFGaa/2n/MtlJT6ehMasFKSNrbxop8eNXlKWMWcDputtIlZVpHtaPN0RhToZBrWXU+Bojby9TN7+WhTcLaVrZOeQEfsrBbaBj87rp0x7Ae3oYAatnD1YK+4LhbeQhOQxDiIcEz0yyF/GrvRFkxMFst9699epm8Jy+OLc0EXEiOneWXyOgPF7met+SFgxaemGinwl2A98fVKH68xNVOfykaVMpXQb2/Fslg1QXXTAFiZcGJcFyX7EOjSQwE4EAwzpmCiEcBJCfa05PPdd5AbsfK0ouR005KIsrLlT9tApIAe96HaI/dE5SDOuTWrt4/3zxeTjtzlp2iKpfnrUyy1o0OpfZ1b2dNeB+5FdCsBHwO7u7lCfCepviUV+mcktrBy2PhPPNzvfqFxAsHSAkl11TgDUGVXXe07xHjbjT1wZ4KL9x6OofIyLbU9BkqE1P7J3RaL/jXhuzlGtYphIg0t2yIb7U5cd4uV8OeeNn2a5h2YbEe1l9dffGPqpXolhlHyqtB67v0p08WomoIn4lzyaax6xK97RMU6mZbhLh6dr/P8q+1y6G++w/XPJLg5RCblnjlgKlLBU7IwpCYctdop9khCPTLqDPI8KwbR3xpnOnVJlks0XgVGF3CO5qar7RBcvi/T2LMqRhbGT7rkyyEL+V2s2oEYkwmPmWGlng3eyDu6gsETQ02mc3aPErDRub0WtyNldo8X2EosRTHkNpMHVzViMhSpYxHT9pH5Fe/XV6f167GDGpisjqJVfNPQxu3m8AIXSMuqtvit60ArLTfJGYuoqNqPMYPhbjz2qHlWQuoMN/XX+V6TFeV5K2KChFA9fjNTAha3CNYqOe4tb/IyiTacO4AU4sC3LVW+LINIV8Lqc/No/FL2F9AxNPQ9H5bal0v4r8gN7t2xQMmfUGsPZGHvEukt+p0ftCOHdKZ89ZOWJMUghkOKdMw4MHoT8U39ZDMIK5mKufhdICIVWOyxYQwCgpOo00UGE56eY74PrW2jY7jXzZmTbB+KMye7rOAgLl8JsCYxCfxNKMtKr8DcP4WjTRelo6fLypG77f5eloJBEQi0e04w++zt8JFRS48sfRHgViI/+Rh7PRe3kH/DzwzCp5ZSId1xM+cvU97FDgKlJT9jqMLUAT38pFbIxMBic50o6OoVmK6GsYTIuo3vAnCI8VF5rr9ZHQtERH2j0amvqSWwECd/zVit6ggQ67PQ5z/j20CAoMpaCuLI5IvTPWoz+FmEdIFXYwnR/oMiRFUJKKbu/krIQIMgUZ2aYkS0odcKXrLsGIdBNsF6+BUuuFrl/xDl0OtS11J4Z1/9aj5ZMJ1z589u9DpTBfNo7l27bBIL1dCD1tka1TNRZ6PXMTx5rQdaBIYUBgwc/SNCq832KYhRd+Vdg49UpwjVOunoJrEUlW7hTIYAut1LZY5By9y1r3Q8u4iZXXH49SFd6e9kjOcIcJ00SaTlmdyBLBTaie+D4HsVt4AQh36MrIvAgHg6DfhYSnuMYtGTNwax9K4MExbp7m1JKvhxdookBhb0VtKuZn4QhjCDDDciIVAGagA76OIKOY1LfqPY6Yub8rIHMNUBz0jcKCBXhtCnSOWUxCGNIdz0MIs0gTW6XPf+Ekd9vVNIApmYSuHvfIsUu1OYmdyE1JJpy/vXPejVCieGjCZWyx1ZcUbtpskDufo9XaFoVIadOO/BZ3NU+Y77jzQmivaq979ic0X+dGLtoJbHplaIBGJ9a9IKsFiuyzRNkxj5Uon6m/dB/Pgp2j060JQxAg4qPDvyUsz1OREi87tKdHtqP+uuW6A1QM9npls0+VkIT71yrzAqzbIHkike3rE/TT/gxygjgbpdvlFAmRXpeocSKDpsGgNfvjb1cjyPms5rqzWzRGolmaWpnKvDscgEIQ+brd6y2y9L3Ro57mrtauDDL5gkzW3RIoRJFvH751sI9tP6EgxgcmC3E8u8DVNOFFBtolATgFX3SlJ1zdXOE8LN2pNGYNMwb3s06LObo4KIwQ602eYG8mH161F/NZ4lIDHpjr4wE1fsqPdvg7oAn459/JCrBZ8et2Sz/sopanvhCgCtpNFZY7jMUnNKDYilS+shVEoMIQcBnjjcHDYWbHLSPF+GByBrpbQjBOjSvOrimXiMl9IYLPDlcQyM8LSJx0SppMnZ+kZ5tzPge6TYVqN/jBp7Ycua94Nwe0Eh9SWSwUExaQiY8AijNTPpmNUysgQdP3U5gHgtUbdY4AQC0vxsI9+TI8AeJGLQD3kuwh0yTVkoCP0aQWDNv9oy6DdWad4M3A/fqwFxj5bsxeUuwftyqpFOt5z57Tu0lqtKSRM1MWeRxIutoB8HkH/kmnrXVoH2fASRQnQixLUZ23CdPNNOgve45Rwv2z1VpYgfrfhoWrpKIMJSDtn1xYMXLouAEG/Dq5MbZ0hZ8sqCV2BtmbgK2P6v+zyTKe/GQ6s82Hal3CdUlk6qAPgXPkGZdXq6Jkm7KV5AEPa0/L3JAQ/7N/ZsclG7xsFeodquuGJ98zO+phoTBzNjNBgptTS/f/Lg/YRZzYvbnQk8MSjUI2VoQAgZF2cDXvpNUTj5220yP/EuFhLFJ89J9z88COBZQcmRubRavbVBujYFyX6pQPmwGDjRBPouEto8lCD6SOIS6QL+9cAhHpkVdrlLYmR0ZuO7vgl8LsygEk1/TAb9K7+aPXhNyJ/d71myamW4aouA4pFZ8jzxys3ydSmHmQWc6wlGCrY0BAsyS54jfib8Sme6Ny0gZwE4qXUnvKTZ3tkWNCbKlv0EH4apS02FW3ydzpJ6dvyXiBBAyoX0GPed+SwEaX9y6f8aOtoU0bRzvas8Dl9zImLXys126n8kgrhzKCFVUMLtznc8b7+VOtuM26ox80yeZLg8w0KMSMK1Nt3ZXIvNnzGzeyqz0RSSpi9G1RPKnbtsRSpq77akdz/pc3jdcqs00kQbuXeVGg7LqiV3gmNg863zidKiLcqDp2cBh9n9+1L/UQWy9sUGOnzXMiCmmScU5lINGejd0FHIzMxEr1kbPOBxEn7BxnQbcbpJ3l2GY/NPC2POacWVOrcyvULatYbgoeLANhOYJSMXf0UU+FQgcl6VEXUpok+H5KnknGuBLgtzQG2Az6q76y2ZNK1JEmu1f7koY8Et6Vbl/vi4AlxsUo6xVVBCT4iE9kzfZhbYZl3WocWUPKw1usO6GNnUj0yewn+UKhXxUXumTVgmCV/cOx6XaS0atXQb7S3KOv77XE3XaRJOCVIlletZUBFVT9CGP04dOi38jLi7K5gF7Dd6leQLgz6V6Ft+3SrrankXgjvwOxYtDCIeIo1butZcBrGS5eVCtKr8i7GYtGT4RLJb4wiMY79lhefzeNalvT8cRwgn4ZHgocc2M90J28gbORQUrONol8tWkl0EMKqFzqImhMOfyLjZlyJL4zVWnWrGxILg5U2tS0cuNE3uH+Y164BJZ+bNYnucR8MI1ePLOX1Qwc8RirA2NqqfZn5Eclat7GyAQeQ3Zn5R9GLT+mcNb7COtWcqJs/u4DOhC1Rs/Nyj6n+v9eyZU5Gov7WRplQ5Eo1a2NjxIvnyENCy7XgHGJBPE5VYuaqlppJVfhVL3edRHJPDlSKrfS1Omo2mREMRr+ZvUncbQ4Jxg5e+196+YqLJJlDsE+72kwY+VWFeiv/FJpE+VlZYDeQ7RwBaLvV64MdJtA+u8jcOW7N57TKHB1EOMztfKAww7qDoK36rnUNg1aV2GLnS12XSWsvWvGIl58KoJpVFH4839RBIx0ZQN08Q2/9fS0954fsV26fDqR4MnPhdB10fmjJuYMryIB0ogtx7Lk9r2zgcHSZYpCCn6LQW8iFIHEMdYyVisWHM33Pz+V3fagphsSYF4ugcT7L1NZa9hsGZN6Jcj3NPZhZYAAPpDsNOaNNZlYtnqtZX5JYEh6QypatcnPgQpB38rnclOWvHasfFbN1Ih6Ea5g6EWqlSPKJG7dImu58BEVn6778JUT60z3XFL7ywBUJT2uUqK0Tt7lTQ4geLAdvxMlpWfc1o2PAk+ZyTgSgS0c+Xv448EGZT7c1Hwqn7a5483k62FYgqwoX/qcGaaF+EacNRA8lpHY6vRzy4C0JZ16oipzF+FQmwz8whOm4p4ioZYq8jJHHLulTAtgy4/0eBbEyhq2sHsoZHkL9MUVwGhBrY73fV2UrxV89YDjX6v4vh1aMUqx/YtTQdc2lDLmehmMt0WCLXEf1WASmfjL7ZBAAbLQ2yHswNwQrBIJTfRiSTLp9+Y+BvJkWwCIQ7dKiggFuXj1Y7rXoqoilCFxc5mQuUrTU74FnMzStAMtsTegZD/mUIRF2GKmTygUNLVRFmJPw/uv2YdUGU0+1+fLNgs6j16vmzw2/pss7kIke+USgkIVPwmMhAiKVNbplwWCao/s9QX4tV+YYhsZGSi+qxtdSkBlLWtP/s6TrTaDDQG7LebfnzkgI6YCmQofcTa1T0WGrU13BdCqy9Czptkl/QtTtcwXHamTuN9KrTlWg2c0gHLKHtTjAf/4vZr8SAVwLTifXoJX5tseDwTXWuaxBFQXjPHaw7GRLLtBOHEg0ZL/gDGCLy/w+YdTVu3Vru2aQyaZxL+VGdfzo9rqwe4aqLn7mUqjvqKhRkCvk7ee3E/CXAsHgjdVN1S/wYjswfff8bZ6Jpg6TAZ9vnPvquoCMpYmKrr66BrYOI40erbC5ro7Ma6GKxalYQ5pa2OY0IcUjiKoL2JsTPU80aKAk8B44KlZUKE92nPa/F9yFy6V68pYeYTfuYZxkN2SFZIb4RDcuqgjjaBK9UDW7qBfQRWFg3YMEVaPcShoUv7RT0nqwMcW9jz2P9Yt84ONINu5vmV+TQ2VDhC/Ri9bIjGOpahzBUhIAYcYLMPej0gVtnGx6K8WQEYLDUxIxoNJ9bHCZ79p3h9uDOeZfZqb1/pO0BwV/YZycerwheMK+8wYeZnEr1DJztofkVgeh4aJtNyMunQXBlS9UOe0mw2bnoFe/IU9kYmOutPpq76akJKjpQKHnrBD3N5VD5ScCeb/R12du2w/YB663W0AjYImKeseABFSbFPYLYnbdOCCJ/emzQEc9qRiYhGP1qzTPEl1p1zb1TG0vxfaZXVRCYpDuebhUXS1cdXt0H9D53OYvodWhxi4EAmZSCwdU57kurUZDwFAn4lLDJm15xpV1fsG67BRh5EsHnYFYqZGSGlJm0NSnPd6VNP0Ce0Myh567Xdzp7gBx6OugZONiy+76GzDFQI59J8aHnqALx7+2PM4pR32qeccfV+QEyK+c8JXHGQQN9Sygn7tTbPosv9kuovuxHwV4DFKd4XflSlz7MIG+l6iG21Wwm6tYsgOc36soeU43YKqY6761lG2qpe9g5tCWBlD+0e4t9llsJ56DFbu6MnqDETjtwqq9ueb79HtiIG7xEmvF/33Ro+DW/NsNbbPt32yrygSDkVS8eko8r+h0QtqgJ3dk9qzSX9xI2DBjLgpaXCgA/mc5bAx//UKy+rsqKLVKUWRN6YeevTBpiZ9c6XGXG+gEYo0B1E4Ny6iarP5KRf/C5kLdk3aOnLXeyisqw4cURti7p6S9ECfEXY/yGEMgOQuSjCsuA6bgjvQYuCKVfKW0TNAfAEkYkc3CYZvHzdLfR1fC1pHf1Y1pveAW4p6gACn4Gy41Fvky+Bm46U/4Lk2op4HYh1ptWSuqIOkLqGYN9a5sDSqzB3U0JexueH+cVrCXlzDllonq7v7EMm2iDqeIOzilt9Tk1fawDSJZRLFNwMuc/hMqU6tc3FQpIKCEPzwa1Ccs4Uhh9hQpIStR8lNVoREIpY7b17U0+SuvszWKChsV73imlTSk3In4kJG3FT3e9F6iZS0paM6gh/BhUxVxrPVBLbXyRJpcZMaL/qhJQVHeF4oWQy1BgzOGeUPxcOMrXNsAvlJMHbAMmeKwiAtAHUFvM7Kp2VFeGdvmLOPWAfauj2bZRfxlodoLYzlDePRan4AGNVIhd1rwlr4nBAaHE08s4XmRlYf64ZKrOz2jsPepw39s9NT2eGEb2fOf8Pz5HyIiAr9lp+p8x7LYa1jZ5DNlwWGcbQH/lWscwTSCBJiE1wfUGP64fco5uVb/YjZtuP8r1xUDZIPy8i238ImPqaLklH9wcqs65rqgn6zZzFXH0j3JoRVfwRlbrVUpDyhtgPdBR1XSsB2Ge9cQNk57iSu/ryXQcr8nkXgks9WfOntKkYI4ZPM0mwGEL+cSpu/R/6PE3PGhmLcbSEKWjsR99luhn6d194q+R+uvoLNfXTpS3TAv+RVWkJRqX4cuqbF0MHX3jdscsOt7QfdIJciNHwM54ij6Y0Ax7Rlqau/JqWo6IpbV19GutT1Rf/AlmLjQ1lwxJueAp0591xTxxNmO0O0+cG+xVJXR9mi4gOKHSZmyWtwJbEsnBJwX1LSmN3ggLp4ouh9OG3u/8Rfb2Dlat60DWVsZp0S+CCWZo7kHWi8xt7fatEJyspzCVwMfF+AXIvA96Yj2WU+lBQqhscNVdlybMJutzwTQw6XqsvilekVsGznHRWBoLH8xZi/NdbF+NcB6+PUDxf5VFeiJWJGbUvtVnPdTfjfxGODzxO6B83ThIr+9RG/+xIinuCiPKAqOEw8QY478ORL8yUBVGLHDHRsHywXNb0QoAkbZ3RQKRbUxYRXxfhL3H/fdPdVoFGaydyZift0I4YKUeEchh1zShLudoEMRZ+g2gAeLau1WF+1nz76T2jnkQSXaels07IIMFKusXbHtQdHbbsKcqwvkRBXGtvqwfJw/O+X0ALPN1Snk7LyEB5WdcwYMV87uItiI/MT9mv24hGIesK1fOVr7QabtMIeiQRehg5WcMbC0eDUVU2Nu6hu4MuhRcy4ApdJgOjx+RD8f+JqgvjfU899GBQfJ7WtlK6EkfIu+FSp4Cmuj70IRapKhSEXma1LxSZb5lnvbeDd5zjRdpiu4cEpJvvHkR40PLLVF4I1SzLufN7eC+OKhaqr8FEz+IFZryFL5YGdl0Yt5S2OKuguOcUyRa16PMPr1oOmdSsm3lEUEuh1SEaug2+ObANn31vHUQyjoHnXF1UTutOupxJg2Bvv6YcD2xixR1HMihyiV8zT5ZKv9JGTIYCAQyWrBv7tHTwm5vlU3DVKTclRpnxjkH8hvL5+PqR83aman19RA/0UiwdXdHKQr9IeF2/kp8FMU0bv3ntALMwuWr5vXp/Atp62LMRBu9ME/+T4yyYr8ip44fzVjk6oaYQIE7kxUvrWKD/0xJkP+tK/3tuJETJ3z708wR5T1txV+TCIRMQcZKsozIqB6WQrVwviyn/RQaK6NYbb5W6szreXeBKeDNehHh39xIsKlq8ftn4NyCHMWWLNvdd3CuYSRN7d2Cl3UroUiBMa9BnKPbKzRYD65yWRLrx5rSWlmc0Y8XwWrxZ4DadrbpaWTOZuYWsFent4/HoUtf8XV+eP/Ppz68dGXrrYlZiW0/YW91LKcPtlWpfz1ugw/Ii1aCSH2RVdB+DFvmbEv+75BSh8MrTkMikOiUWuliBu+FNUvKbT15CVyHsmhSPgLn+VYWrC0TNpMKDArsNe9Q7m3RkRi90YLn61LV2w3TZAWwqWYFe6tgQUWvbJDHHxDIJWqVlLf+V86vbuIcbt6hemTCtCbgy9U5OZLS7rCYM5y8Q4AOXh/Bih+il35huXUkmuJir05UFKYTFt0Q93Nhl4oyZaCJvjGYNv1Od+JEswTUTAFmH9PYifn118AkDT1p76Lk4RfDdLq+LDaO0+zWLGSxYZ3YZjl9YubN7LdousrXIrElLx76O30+Vm8LTrLOZhT/O3rOYOoBn5t4IlPveav5rYMr2U3+YAhPfTPMUVf6ENu+nh/9vimroN6uwoWQt8UrXDJqNxOwBMyf/yU/3b78skTB+Tg/8AfpthVffpRMmjB+Bfa7Kesnlm0RBD1ninYihEw2lfqCkxKl9Li2sLCX6ReCAKPmkc6QJ55EH2qliBxxdEdGLOxtEyPDeWrvfTQPXQDFurvwaa3mHcZGg/zwX7KLzKYP781ZqTmulk8wMJZWuH3/YQ6BGGxnrhN2Yi28+7WAD29OLvkZ1QLq4+oQ6IqeU9vQK4ss19Kc2F7IHEQXff12WXkupNOMowHSkWpa7uYl6dvOVVM4sYV/QDxVIrM3upfxh/KssnlUNLRw/Ltf1UFKsLLp3pynXAZq/826tt/NC9Dji96W7JeEs48pss6IeLzXoH5cc7UXQ6ADtbBJZ1RMHdKLd+spWD6A0usBUxehwGLEo8Zjj9G9rFjHez0fDFtNG+MWesIcRegUk2KVQKmDgjQKL6DCSjklkKTY1DJftYcp3P611nuWRMeNN0o8m5rukAiv/qx1G7leDebbRnMNelRsNknd1zKE9qFqWAwljmPfPS/wcwhJYfhmFNSIpvwmwPH1uA9Mt4AdfLiCf6ACrr4L0JIDvSb/cRkpzYOGNMKHklfYEW1deMEK6fcsJ1M5V526cGITQS/tl/4PjLlGhX0G5Ukg0+bQ3fSaIRxHyPRCeBdiZDvZJV7n49tGnRUDFcKTepbiakszFViXDx45rYI1Yj4raIEgQeRTwCs1bG1UMD+Ww7OSDbmdd3QoCvdtjucuXFVcezxE45uRgyxj4EQL1iaqWeBW976NUD+qgWZ9ZAU68qui6/QZwOPY9BBgf/0Js7iIIgJyMPN3Rm1W54+RpTa0tVkO5f/igAaNUgApVO2j30QbKk3QjcAUhSxWbpOTMSeRM39mxyanFx+AAF9dFCs8UCysrbIjO2RgJZ/2RLbAI5ifgrYj7a9U/qHbTnslu6WASItrdU3AztDkUJrN4vrr+24jSbMFe69cpfu2Z4WkizN7i+5Ji/OZsBsrIwwtdQLp6BE2lQL0d7w/ApNtSjssN9EXFhKtWT0ZpjINzS9GY/8mKIPICXSOTXSNmUL6/UmAwoW9o3kil3e/Q8eYBVflAwjzBoIV+m1MSy77mOlYCqW2ZDCeLmJRWOc1ejoS+QotCAcusf6Xaq9x+IvGSjtOf042JAQij0sXbxj6oUzCaCun1/w5qljerHxrMe/RPKO1N+UkUaQDpGIJGxPm1mmsrWUHoWt1wh7z2z5REoW5spQ0q9U+sUxBqrq2XDulINqIXbd+SbJkoM0OHIjfE9SumUf6SCiHTDlVC+cQ7i6qXdCxKsCBwQMyLXD19SiRWb7amg8akJChNNi1yB8GoOAI1T2HOmG5vHdsILKJEUlelE3cNM1KCqVCrgZCguUFP/NXrIzuWugIpKtW+jN4RRB5g/N9gSuc0SMyEvAFHl2AHvHH0sdyzDKUD1RqbCEegCPQJVZRrrbX8CqPzaoZ4XTk0ezkDC+vxa3b0jpDT5zBNyhboXPhMFyMZoNHIJDvCJM0jd5Vpn/doJAnx5xr3SNuCiJnboVMMkYxzbol74h0puw9q2ke/fEoTnQ3ok4C6jaNHKEY5aS7rcxDnCM9fyu9MpOdDftTth6KkogXoSx/ </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季校园招聘金山软件面试（Android开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins及C++自动检测流水线搭建流程方法</title>
    <link href="https://www.wshunli.com/posts/22a0081c.html"/>
    <id>https://www.wshunli.com/posts/22a0081c.html</id>
    <published>2018-08-17T02:18:16.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要整理 UK 代码自动检测流水线搭建流程方法。</p><h1 id="UK-代码自动检测流水线搭建概述"><a href="#UK-代码自动检测流水线搭建概述" class="headerlink" title="UK 代码自动检测流水线搭建概述"></a>UK 代码自动检测流水线搭建概述</h1><p>依托 Atlas 实现 Pclint、Compile、CodeDEX、Cmetrics 流水线，自动 check 代码和 UK 要求的符合度。</p><h1 id="流水线-Cmetrics-代码量检测任务创建配置"><a href="#流水线-Cmetrics-代码量检测任务创建配置" class="headerlink" title="流水线 Cmetrics 代码量检测任务创建配置"></a>流水线 Cmetrics 代码量检测任务创建配置</h1><p>2.0、Cmetrics 环境</p><p>主要涉及 Python 环境搭建、Cmetrics 插件安装及其脚本部署。前面介绍已经比较详细，不再赘述。</p><p>2.1、Jenkins 中创建配置 Cmetrics 任务</p><p>创建 Cmetrics 任务前面也有介绍，但是配置任务时，我们可以将 Cmetrics 脚本路径写入环境参数，比如 cmetrics_dir ： /usr1/cmetrics 。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image001.png" alt="image"></p><p>执行以下 shell 脚本：</p><pre><code class="lang-shell">cd $cmetrics_dirpython cmetrics.py -p 8 -fp /usr1/HEAD_OSP_Version/Version/USP_ONE_TRUNK/CI_USP_CONFIG -ft xml -d all -o /usr1/HEAD_OSP_Version/Version/cmetrics_CI_USP_CONFIG.xml</code></pre><p>最后收集报告即可。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image002.png" alt="image"></p><p>2.2、代码量较大相关问题解决方法</p><p>代码量过大，因而生成报告过大，脚本进程被杀死。</p><p>1、代码量较大导致构建失败</p><p>可以在一个任务里写七条脚本，这样会顺序队列执行，但是这样 Cmetrics 插件无法解析结果，并且无法与 Atalas 对接，不过可以正确生成报告。本文推荐拆分为七个 Jenkins 任务执行，每个个任务检查一个仓库。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image003.png" alt="image"></p><p>2、代码量较大导致同步时间较长</p><p>可以配置 RsyncFiles 和 RsyncExcludeFiles 参数减少代码的同步量，以提高效率。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image004.png" alt="image"></p><h1 id="流水线-Compile-代码编译任务创建配置"><a href="#流水线-Compile-代码编译任务创建配置" class="headerlink" title="流水线 Compile 代码编译任务创建配置"></a>流水线 Compile 代码编译任务创建配置</h1><p>3.1、编译任务创建配置</p><p>编译任务主要由 HWCompile 插件处理。</p><p>工作空间：USP_ONE_TRUNK/domain/trunk/ci_onetrunk/entrance/v1r17/OSP<br>编译脚本：osp_head_packet.sh</p><p>具体详细配置可参考：<br><a href="http://100.112.230.148:9999/job/UTS_V1R7_OSP_T_TEST_compile_version/" rel="external nofollow noopener noreferrer" target="_blank">http://100.112.230.148:9999/job/UTS_V1R7_OSP_T_TEST_compile_version/</a></p><p>3.2、编译告警日志收集</p><p>1、编译前删除所有日志，执行以下 shell 脚本：</p><pre><code class="lang-shell">find $workspace_pom -name &quot;*.log&quot; -type f -print -exec rm -rf {} \;</code></pre><p>2、编译后收集日志，执行以下 shell 脚本：</p><pre><code class="lang-shell">cd $workspace_pommkdir ./VersionLogfind . -name &quot;*.log&quot; -type f -print -exec cp {} ./VersionLog \;cd VersionLogfind . -name &quot;*.log&quot; -type f -print -exec cat {} \; &gt; build.txtcp /usr1/tools/ccgs/cwarning/cwarning.sh $workspace_pom/VersionLogchmod -R 755 ./cwarning.shsh ./cwarning.sh ./build.txt ./cwarning_result.txtexit 0</code></pre><p>思路流程如下：</p><p>（1）首先在工作空间创建日志目录，然后找到所有 .log 日志拷贝至日志目录；<br>（2）将所有日志合并为一个文件；<br>（3）执行 cwarning.sh 脚本并退出。</p><p>此脚本成功执行并正确生成结果，还是会导致 Jenkins 任务失败。</p><h1 id="流水线-Pclint-代码检测任务创建配置"><a href="#流水线-Pclint-代码检测任务创建配置" class="headerlink" title="流水线 Pclint 代码检测任务创建配置"></a>流水线 Pclint 代码检测任务创建配置</h1><p>Pclint 任务可由 Atalas 模板创建，使用 Windows 机器。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image005.png" alt="image"></p><p>其中：<br>ToolPath：Pclint 工具路径；SrcRootPath：代码根目录。<br>DefaultLntFile：默认的 lnt 文件路径；DefaultEnv： lnt 文件中的默认的环境变量。</p><p>模块配置中：<br>Include：需要检查的文件路径；Exclude：需要排除的文件路径。Env：环境变量。</p><p>本任务没有运行成功，问题已定位、正在解决。</p><h1 id="流水线-CodeDEX-代码检测任务创建配置"><a href="#流水线-CodeDEX-代码检测任务创建配置" class="headerlink" title="流水线 CodeDEX 代码检测任务创建配置"></a>流水线 CodeDEX 代码检测任务创建配置</h1><p>CodeDEX 任务同样可由 Atlas 创建，配置如下，其他为空。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image006.png" alt="image"></p><p>其中：<br>Tool Home 和 Tool Version 分别表示 CodeDEX 工具包安装路径及系统版本；<br>Executable：对代码进行编译的脚本；Working Dir：可执行编译脚本的执行路径。<br>具体到 Jenkins 任务中的配置如下，其实 Atlas 创建的任务是不能直接用的。</p><p><img src="https://img.wshunli.com/Jenkins/cplusplus/image007.png" alt="image"></p><p>需要注意一下几点：<br>1、 CodeDEX 插件不支持参数化，需要把具体内容填死，没有内容为空。<br>2、 注意 upload the middle file 参数，点开隐藏参数删除。<br>3、 注意 layerpath 参数，需要以 / 符号开头，表示文件夹。<br>4、 参数 mailto 为必填项，填工号即可。<br>5、 根据系统环境选择合适的检查脚本。<br>6、可选配置 RsyncFiles 和 RsyncExcludeFiles 参数，同步所需仓库，排除 .git 文件夹。</p><blockquote><p>参考资料：<br>1、【P&amp;S】 Cmetrics工具试用指南 - 云核心网系统工程能力中心 - 3MS知识管理社区<br><a href="http://3ms.[wshunli].com/km/groups/2033815/blogs/details/5582855" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/groups/2033815/blogs/details/5582855</a><br>2、CGPS/cmetrics/tree/master | iSource 5.0<br><a href="http://isource.[wshunli].com/CGPS/cmetrics/tree/master" rel="external nofollow noopener noreferrer" target="_blank">http://isource.[wshunli].com/CGPS/cmetrics/tree/master</a><br>3、linux中find与rm实现查找并删除目录或文件 - CSDN博客<br><a href="https://blog.csdn.net/wbaction/article/details/72794251" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/wbaction/article/details/72794251</a><br>4、Linux下用find查找并复制指定文件到指定目录下 - CSDN博客<br><a href="https://blog.csdn.net/mydriverc2/article/details/78805287" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/mydriverc2/article/details/78805287</a><br>5、bash - find: missing argument to -exec - Stack Overflow<br><a href="https://stackoverflow.com/questions/2961673/find-missing-argument-to-exec" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/2961673/find-missing-argument-to-exec</a><br>6、一起学shell（一）：合并文件夹下所有文件 - CSDN博客<br><a href="https://blog.csdn.net/navylq/article/details/9496573" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/navylq/article/details/9496573</a><br>7、l00370463/Atlas_Config_Com/tree/CodeGate | iSource 5.0<br><a href="http://rnd-isourceb.[wshunli].com/Atlas_Config_Com/CodeGate/ctrl_compile_warning/x86_warning_ctrl.sh" rel="external nofollow noopener noreferrer" target="_blank">http://rnd-isourceb.[wshunli].com/Atlas_Config_Com/CodeGate/ctrl_compile_warning/x86_warning_ctrl.sh</a><br>8、jenkins上windows的pclint插件使用指导 - 开发工具社区 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/6373/wiki_4440979.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/6373/wiki_4440979.html</a><br>9、Jenkins PCLint配置（CloudUGW18.10） - 李海燕的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5351877" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5351877</a><br>10、基于Jenkins的CodeDEX检查 - 云核心网系统工程能力中心 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/2033815/wiki_4383101.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2033815/wiki_4383101.html</a><br>11、CodeDEX搭建指导 - 处理器基础软件『芯随我动』 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/1503481/thread_5128047.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/1503481/thread_5128047.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要整理 UK 代码自动检测流水线搭建流程方法。&lt;/p&gt;&lt;h1 id=&quot;UK-代码自动检测流水线搭建概述&quot;&gt;&lt;a href=&quot;#UK-代码自动检测流水线搭建概述&quot; class=&quot;headerlink&quot; title=&quot;UK 代码自动检测流水线搭建概述&quot;&gt;&lt;/a&gt;UK 代码
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins与Atlas中间层系统对接流程方法</title>
    <link href="https://www.wshunli.com/posts/c74848c1.html"/>
    <id>https://www.wshunli.com/posts/c74848c1.html</id>
    <published>2018-08-11T01:59:05.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要整理 Jenkins 与 Atlas 对接流程方法。</p><h1 id="Jenkins-与-Atlas-对接概述"><a href="#Jenkins-与-Atlas-对接概述" class="headerlink" title="Jenkins 与 Atlas 对接概述"></a>Jenkins 与 Atlas 对接概述</h1><p>Atlas 是中间层的系统，负责工程和任务的执行流程、构建、结果展示，Jenkins 是最底层的应用系统，集成了任务和工程的基本配置，工程的任务执行、结果回收、机器调用和管理，都是 Jenkins 实现的。</p><p>新建流水线有两种方式：模板（Template Pipeline）和非模板流水线（Pipeline）。</p><p>前者可以使用 Atlas 创建 Jenkins 任务（并不是所有的 Jenkins 任务都可以模板创建），尤其是涉及到代码同步时，提高配置 Jenkins 任务准确度和效率，减少重复劳动。</p><p>后者主要用于 Atals 和 Jenkins 任务关联，需要先导入 Jenkins 视图，也可以在 Jenkins 中通过复制模板任务来创建，建议将下载和编译设置在同一任务。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image001.png" alt="image"></p><h1 id="Jenkins-与-Atlas-对接流程（Template-Pipeline）"><a href="#Jenkins-与-Atlas-对接流程（Template-Pipeline）" class="headerlink" title="Jenkins 与 Atlas 对接流程（Template Pipeline）"></a>Jenkins 与 Atlas 对接流程（Template Pipeline）</h1><p>首先在右上角选择合适的版本，没有权限时，注意添加权限。在基础信息设置流水线类型及名称；在流水线参数中设置工作空间及主源码仓库即可。</p><p>然后系统会自动添加 Stage 阶段，我们在相应的 Stage 添加合适的 Task 任务即可，如下图示。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image002.png" alt="image"></p><p>详细的模板创建可参考：<a href="http://3ms.[wshunli].com/hi/group/3211543/file_12423313.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/3211543/file_12423313.html</a></p><h1 id="Jenkins-与-Atlas-对接流程（Pipeline）"><a href="#Jenkins-与-Atlas-对接流程（Pipeline）" class="headerlink" title="Jenkins 与 Atlas 对接流程（Pipeline）"></a>Jenkins 与 Atlas 对接流程（Pipeline）</h1><p>非模板和模板非常类似，首先在基础信息选择流水线构建类型、名称，代码仓库地址、分支等信息。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image003.png" alt="image"></p><p>然后会进入和模板类似的界面，在这里关联 Jenkins 任务即可。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image004.png" alt="image"></p><p>关联 Jenkins 任务的流程方法如下：<br>1、 首先导入所需 Jenkins 视图；<br>2、 然后新建 Task 选择合适的 Jenkins 任务即可。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image005.png" alt="image"></p><p>最后流水线执行报告和非模板相同。</p><h1 id="相关问题及解决方法"><a href="#相关问题及解决方法" class="headerlink" title="相关问题及解决方法"></a>相关问题及解决方法</h1><p>1、 权限问题，联系添加权限解决。<br>2、 流水线重复执行问题，删除多余流水线，重新提交 MR 解决。<br>3、 Windows 从机无法下载源码，更新 tbs-git 插件至 2.7.7 ，安装 rsync 软件。<br>4、 Jenkins 任务不执行，更新 notification 插件版本至 1.9.7 。<br>5、 工程构建失败，注意 Maven 环境及镜像设置。</p><p>首先应该准备好 Jenkins 环境及插件，尤其注意其版本，其次注意 Slaver 机器的环境安装配置，比如任务所需操作系统，工具软件环境配置，针对 Java 流水线包括，Java 环境、Maven 构建工具等等。</p><p><img src="https://img.wshunli.com/Jenkins/atlas/image006.png" alt="image"></p><blockquote><p>参考资料：<br>1、精益流水线Atlas快速上手 - 李永峰的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5488779" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5488779</a><br>2、atlas、jenkins、cloudbuild、isource、smartide关联关系介绍 - 精益流水线 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/3211543/thread_7146097.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/3211543/thread_7146097.html</a><br>3、用rsync在linux编译机和windows桌面之间同步代码 - 黄岩的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/2652181" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/2652181</a><br>4、导入jenkins任务到atlas - 精益流水线 - 3MS知识管理社区<br><a href="http://3ms.[wshunli].com/km/groups/3211543/blogs/details/5535979" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/groups/3211543/blogs/details/5535979</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要整理 Jenkins 与 Atlas 对接流程方法。&lt;/p&gt;&lt;h1 id=&quot;Jenkins-与-Atlas-对接概述&quot;&gt;&lt;a href=&quot;#Jenkins-与-Atlas-对接概述&quot; class=&quot;headerlink&quot; title=&quot;Jenkins 与 Atlas
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘中国银联面试</title>
    <link href="https://www.wshunli.com/posts/b372432c.html"/>
    <id>https://www.wshunli.com/posts/b372432c.html</id>
    <published>2018-08-08T05:22:35.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】【Offer】记录2018年秋季校园招聘中国银联面试（客户端开发工程师）。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>记录2018年秋季校园招聘</title>
    <link href="https://www.wshunli.com/posts/8dfab246.html"/>
    <id>https://www.wshunli.com/posts/8dfab246.html</id>
    <published>2018-07-30T01:24:39.000Z</published>
    <updated>2018-09-07T10:04:32.267Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】记录2018年秋季（2019届应届生）校园招聘。
    
    </summary>
    
      <category term="卖身记" scheme="https://www.wshunli.com/categories/%E5%8D%96%E8%BA%AB%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://www.wshunli.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>沉迷学术，不可自拔（十一）</title>
    <link href="https://www.wshunli.com/posts/a7e2fd51.html"/>
    <id>https://www.wshunli.com/posts/a7e2fd51.html</id>
    <published>2018-07-27T06:41:47.000Z</published>
    <updated>2018-09-07T10:04:32.263Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】算是人生的第一份工作吧
    
    </summary>
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/categories/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/tags/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
      <category term="胡思乱想" scheme="https://www.wshunli.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins安装Java代码质量分析工具</title>
    <link href="https://www.wshunli.com/posts/57f40b04.html"/>
    <id>https://www.wshunli.com/posts/57f40b04.html</id>
    <published>2018-07-25T01:15:32.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍 Checkstyle、PMD、FindBugs 三款主流的 Java 静态分析工具，以及 SourceMonitor 代码度量工具，Simian 代码重复检查工具等。</p><h1 id="Jenkins-安装-Java-代码质量分析工具"><a href="#Jenkins-安装-Java-代码质量分析工具" class="headerlink" title="Jenkins 安装 Java 代码质量分析工具"></a>Jenkins 安装 Java 代码质量分析工具</h1><p>在 Java 世界中，Checkstyle、PMD、FindBugs 插件是三款主流的静态分析工具。</p><p>1、Checkstyle 擅长检查编码标准和约定，编码行为以及其他的一些质量指标（如代码复杂度）。</p><p>Checkstyle（<a href="http://checkstyle.sourceforge.net/" rel="external nofollow noopener noreferrer" target="_blank">http://checkstyle.sourceforge.net/</a> ） 是 SourceForge 下的一个项目，提供了一个帮助 JAVA 开发人员遵守某些编码规范的工具。</p><p>CheckStyle 检验的主要内容包括：Javadoc 注释、命名约定、标题、Import 语句、体积大小、空白、修饰符、块、代码问题、类设计和混合检查（包括一些有用的比如非必须的 System.out 和 printstackTrace）。</p><p>在 Jenkins 中安装 CheckStyle 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="lang-XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;        &lt;artifactId&gt;maven-checkstyle-plugin&lt;/artifactId&gt;        &lt;version&gt;2.16&lt;/version&gt;        &lt;configuration&gt;            &lt;configLocation&gt;checkstyle.xml&lt;/configLocation&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>checkstyle:checkstyle</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin</a></p><p>2、PMD 类似于 Checkstyle ，它更加专注于编码和设计实践。</p><p>PMD（<a href="https://pmd.github.io/" rel="external nofollow noopener noreferrer" target="_blank">https://pmd.github.io/</a> ） An extensible cross-language static code analyzer.</p><p>专注于潜在的编码问题，比如未使用或者次优化的代码，代码大小和复杂性，以及良好的编码行为。</p><p>PMD 也附带了 CPD ，以支持探测重复或者近似重复代码。</p><p>在 Jenkins 中安装 PMD 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="lang-XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;        &lt;artifactId&gt;maven-pmd-plugin&lt;/artifactId&gt;        &lt;version&gt;3.5&lt;/version&gt;    &lt;/plugin&gt;            ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>pmd:pmd</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/PMD+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/PMD+Plugin</a></p><p>3、FindBugs 专注于识别潜在的危险和错误的代码。</p><p>FindBugs（<a href="http://findbugs.sourceforge.net/" rel="external nofollow noopener noreferrer" target="_blank">http://findbugs.sourceforge.net/</a> ） 检查应用程序的字节码来找出潜在的 bug 、性能问题或者差的编码行为。</p><p>在 Jenkins 中安装 FindBugs 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="lang-XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;        &lt;artifactId&gt;findbugs-maven-plugin&lt;/artifactId&gt;        &lt;version&gt;2.5.2&lt;/version&gt;        &lt;configuration&gt;            &lt;findbugsXmlOutput&gt;true&lt;/findbugsXmlOutput&gt;            &lt;findbugsXmlWithMessages&gt;true&lt;/findbugsXmlWithMessages&gt;            &lt;xmlOutput&gt;true&lt;/xmlOutput&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>findbugs:findbugs</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/FindBugs+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/FindBugs+Plugin</a></p><p>4、Static Analysis Collector 插件汇总静态分析结果</p><p>插件地址：<a href="https://wiki.jenkins.io/display/JENKINS/Analysis+Collector+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Analysis+Collector+Plugin</a></p><h1 id="Jenkins-安装-SourceMonitor-代码度量工具"><a href="#Jenkins-安装-SourceMonitor-代码度量工具" class="headerlink" title="Jenkins 安装 SourceMonitor 代码度量工具"></a>Jenkins 安装 SourceMonitor 代码度量工具</h1><p>SourceMonitor（<a href="http://www.campwoodsw.com/sourcemonitor.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.campwoodsw.com/sourcemonitor.html</a> ） 允许查看软件源代码内部，以了解项目拥有的代码量，并确定模块的相对复杂度。</p><p>在 Jenkins 中也有 SourceMonitor（<a href="https://github.com/jenkinsci/sourcemonitor-plugin" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jenkinsci/sourcemonitor-plugin</a> ）插件，但是好久没更新了，也存在一些问题（<a href="https://issues.jenkins-ci.org/browse/JENKINS-5741" rel="external nofollow noopener noreferrer" target="_blank">https://issues.jenkins-ci.org/browse/JENKINS-5741</a> ）。</p><p>报错如下：</p><pre><code class="lang-TXT">Parsing sourcemonitor resultshudson.AbortException: Parsing file error    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorParser.invoke(SourceMonitorParser.java:70)    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorParser.invoke(SourceMonitorParser.java:45)    at hudson.FilePath.act(FilePath.java:1047)    at hudson.FilePath.act(FilePath.java:1025)    at com.thalesgroup.hudson.plugins.sourcemonitor.SourceMonitorPublisher.perform(SourceMonitorPublisher.java:80)    at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)    at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:744)    at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:690)    at hudson.model.Build$BuildExecution.post2(Build.java:186)    at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:635)    at hudson.model.Run.execute(Run.java:1819)    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)    at hudson.model.ResourceController.execute(ResourceController.java:97)    at hudson.model.Executor.run(Executor.java:429)Build step &#39;Publish SourceMonitor results&#39; changed build result to FAILUREBuild step &#39;Publish SourceMonitor results&#39; marked build as failureFinished: FAILURE</code></pre><p>原因是在构建的时候需要添加 <code>sourcemonitor:sourcemonitor</code> 参数。</p><p>SourceMonitor 插件地址：<a href="https://plugins.jenkins.io/sourcemonitor" rel="external nofollow noopener noreferrer" target="_blank">https://plugins.jenkins.io/sourcemonitor</a></p><p>这里可以安装公司内部的 <code>hwSourceMonitor.hpi</code> 插件</p><p>参考资料：<br>1、<a href="http://3ms.[wshunli].com/km/blogs/details/2503631" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/2503631</a><br>2、<a href="http://3ms.[wshunli].com/hi/group/2033815/wiki_4496373.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2033815/wiki_4496373.html</a></p><p><del>也可以使用 HTML Publisher 插件解析 SourceMonitor 输出的 xml 结果。</del></p><p>0、准备 SourceMonitor 并安装 Jenkins Server 上。</p><p>本文安装在 <code>C:\Program Files (x86)\SourceMonitor\SourceMonitor.exe</code> 目录。</p><p>1、安装 HTML Publisher 插件。</p><p>HTML Publisher Plugin 用来把 SourceMonitor 检测的结果可视化。</p><p>2、在构建后添加 Windows 批处理命令。</p><pre><code class="lang-Shell">&quot;C:\Program Files (x86)\SourceMonitor\SourceMonitor.exe&quot; /C &quot;C:\CI_Tools\SourceMonitorCommand.xml&quot;&quot;C:\CI_Tools\msxsl.exe&quot; SourceMonitorReport.xml &quot;C:\CI_Tools\SourceMonitorSummaryGeneration.xsl&quot; -o SourceMonitorSummaryGeneration.xml&quot;C:\CI_Tools\msxsl.exe&quot; SourceMonitorSummaryGeneration.xml &quot;C:\CI_Tools\SourceMonitor.xsl&quot; -o SourceMonitorResult.html</code></pre><p>其中 <code>SourceMonitorCommand.xml</code> 来自</p><p><code>C:\Program Files (x86)\SourceMonitor\Samples\sample_commands.xml</code></p><pre><code class="lang-XML">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;sourcemonitor_commands&gt;    &lt;write_log&gt;true&lt;/write_log&gt;    &lt;command&gt;        &lt;project_file&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\target/sourcemonitor\project.smp&lt;/project_file&gt;        &lt;project_language&gt;Java&lt;/project_language&gt;        &lt;source_directory&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\src\main\java&lt;/source_directory&gt;        &lt;parse_utf8_files&gt;true&lt;/parse_utf8_files&gt;        &lt;file_extensions&gt;*.java&lt;/file_extensions&gt;        &lt;include_subdirectories&gt;true&lt;/include_subdirectories&gt;        &lt;export&gt;            &lt;export_file&gt;C:\Windows\System32\config\systemprofile\.jenkins\workspace\findbugs-demo\target/sourcemonitor\sourcemonitor.xml&lt;/export_file&gt;            &lt;export_type&gt;2 (project details as XML)&lt;/export_type&gt;            &lt;export_option&gt;Include method metrics: option 3&lt;/export_option&gt;        &lt;/export&gt;    &lt;/command&gt;&lt;/sourcemonitor_commands&gt;</code></pre><p>需要下载 <code>msxsl</code> 工具（<a href="http://www.microsoft.com/en-us/download/details.aspx?id=21714" rel="external nofollow noopener noreferrer" target="_blank">http://www.microsoft.com/en-us/download/details.aspx?id=21714</a> ）并放置到 <code>C:\CI_Tools</code> 目录下。</p><p>3、最后添加 Publish HTML reports 即可。</p><p>不过我没有配置成功，总是提示找不到 <code>SourceMonitorReport.xml</code> 文件。</p><p>如果使用 SourceMonitor 插件遇到如下 OutOfMemoryError 错误。</p><pre><code class="lang-TXT">FATAL: Java heap spacejava.lang.OutOfMemoryError: Java heap space</code></pre><p>解决办法：<a href="https://wiki.jenkins.io/display/JENKINS/Builds+failing+with+OutOfMemoryErrors" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Builds+failing+with+OutOfMemoryErrors</a></p><h1 id="Jenkins-安装-Simian-代码重复检查工具"><a href="#Jenkins-安装-Simian-代码重复检查工具" class="headerlink" title="Jenkins 安装 Simian 代码重复检查工具"></a>Jenkins 安装 Simian 代码重复检查工具</h1><p>Simian（<a href="http://www.harukizaemon.com/simian/" rel="external nofollow noopener noreferrer" target="_blank">http://www.harukizaemon.com/simian/</a> ） 是一个检查重复代码的工具。</p><p>这里可以使用公司内部的插件</p><p><a href="http://3ms.[wshunli].com/hi/group/2964/wiki_4145693.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2964/wiki_4145693.html</a></p><h1 id="Jenkins-安装-Cobertura-代码测试覆盖率工具"><a href="#Jenkins-安装-Cobertura-代码测试覆盖率工具" class="headerlink" title="Jenkins 安装 Cobertura 代码测试覆盖率工具"></a>Jenkins 安装 Cobertura 代码测试覆盖率工具</h1><p>Cobertura（<a href="https://sourceforge.net/projects/cobertura/" rel="external nofollow noopener noreferrer" target="_blank">https://sourceforge.net/projects/cobertura/</a> ） 一项衡量是否所有代码都被测到的工具。</p><p>在 Jenkins 中安装 Cobertura 插件并重启。</p><p>在项目中配置 <code>pom.xml</code> （可选）</p><pre><code class="lang-XML">&lt;plugins&gt;    &lt;plugin&gt;        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;        &lt;artifactId&gt;cobertura-maven-plugin&lt;/artifactId&gt;        &lt;version&gt;2.6&lt;/version&gt;        &lt;configuration&gt;            &lt;instrumentation&gt;                &lt;ignoreTrivial&gt;false&lt;/ignoreTrivial&gt;            &lt;/instrumentation&gt;            &lt;formats&gt;                &lt;format&gt;html&lt;/format&gt;                &lt;format&gt;xml&lt;/format&gt;            &lt;/formats&gt;        &lt;/configuration&gt;    &lt;/plugin&gt;    ....&lt;/plugins&gt;</code></pre><p>在 Maven 构建中添加 <code>cobertura:cobertura</code> 参数。</p><p><code>compile -D cobertura.report.format=xml clean compile cobertura:cobertura</code></p><p>这里注意添加 <code>-D cobertura.report.format=xml</code> 参数。</p><p>构建完成后输出 XML 分析结果，文件在 <code>target</code> 目录下。</p><p>关于插件使用的更多信息可参考：<br><a href="https://wiki.jenkins.io/display/JENKINS/Cobertura+Plugin" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.jenkins.io/display/JENKINS/Cobertura+Plugin</a></p><blockquote><p>参考资料<br>1、jenkins+maven配置Checkstyle+FindBugs+PMD - 简书<br><a href="https://www.jianshu.com/p/03b9e38d03b2" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/03b9e38d03b2</a><br>2、CheckStyle提高代码质量 - CSDN博客<br><a href="https://blog.csdn.net/lx_yoyo/article/details/73332590" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lx_yoyo/article/details/73332590</a><br>3、Jenkins+maven+checkstyle对java代码进行静态代码分析 - CSDN博客<br><a href="https://blog.csdn.net/hwhua1986/article/details/48339545" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/hwhua1986/article/details/48339545</a><br>4、Jenkins+maven+pmd对java代码进行静态代码分析 - CSDN博客<br><a href="https://blog.csdn.net/hwhua1986/article/details/48342745" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/hwhua1986/article/details/48342745</a><br>5、[Jenkins]持续集成环境下fingbug插件的安装使用与配置 - Amberly - 博客园<br><a href="https://www.cnblogs.com/amberly/p/7201041.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/amberly/p/7201041.html</a><br>6、静态检查———SourceMonitor的学习和使用 - CSDN博客<br><a href="https://blog.csdn.net/yf210yf/article/details/17535713" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yf210yf/article/details/17535713</a><br>7、[料理佳餚] Jenkins 增加 SourceMonitor Plugin | 軟體主廚的程式料理廚房 - 點部落<br><a href="https://dotblogs.com.tw/supershowwei/2015/10/14/153562" rel="external nofollow noopener noreferrer" target="_blank">https://dotblogs.com.tw/supershowwei/2015/10/14/153562</a><br>8、CI Server 16 - 整合程式碼複雜度及深度報表 (Source Monitor) - iT 邦幫忙<br><a href="https://ithelp.ithome.com.tw/articles/10107051" rel="external nofollow noopener noreferrer" target="_blank">https://ithelp.ithome.com.tw/articles/10107051</a><br>8、重复代码检查工具simian的基本用法 | 知行一<br><a href="http://purecpp.org/?p=92" rel="external nofollow noopener noreferrer" target="_blank">http://purecpp.org/?p=92</a><br>9、Jenkins集成Simian插件_百度经验<br><a href="https://jingyan.baidu.com/article/c45ad29ccbfd3a051653e272.html" rel="external nofollow noopener noreferrer" target="_blank">https://jingyan.baidu.com/article/c45ad29ccbfd3a051653e272.html</a><br>10、[料理佳餚] Jenkins 增加 Simian Plugin | 軟體主廚的程式料理廚房 - 點部落<br><a href="https://dotblogs.com.tw/supershowwei/2015/10/14/153561" rel="external nofollow noopener noreferrer" target="_blank">https://dotblogs.com.tw/supershowwei/2015/10/14/153561</a><br>11、代码测试覆盖率Cobertura使用 - CSDN博客<br><a href="https://blog.csdn.net/cathy_sunshine/article/details/75258298" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/cathy_sunshine/article/details/75258298</a><br>12、jenkins集成cobertura，调用显示cobertura的report - CSDN博客<br><a href="https://blog.csdn.net/yaominhua/article/details/40684647" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yaominhua/article/details/40684647</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文介绍 Checkstyle、PMD、FindBugs 三款主流的 Java 静态分析工具，以及 SourceMonitor 代码度量工具，Simian 代码重复检查工具等。&lt;/p&gt;&lt;h1 id=&quot;Jenkins-安装-Java-代码质量分析工具&quot;&gt;&lt;a href=&quot;#J
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins服务搭建及环境配置</title>
    <link href="https://www.wshunli.com/posts/5d09cdc2.html"/>
    <id>https://www.wshunli.com/posts/5d09cdc2.html</id>
    <published>2018-07-24T11:16:40.000Z</published>
    <updated>2018-09-07T10:04:32.259Z</updated>
    
    <content type="html"><![CDATA[<p>Jenkins 是一款优秀的开源自动化服务器，允许持续集成和持续交付。Jenkins 支持数百个插件，以支持项目的构建、部署和自动化。</p><p>Jenkins 官网：<a href="https://jenkins.io/" rel="external nofollow noopener noreferrer" target="_blank">https://jenkins.io/</a></p><p>「持续集成（Continuous Integration）」、「持续交付（Continuous Delivery）」和「持续部署（Continuous Deployment）」这三个概念的解释。</p><p><strong>持续集成</strong> 强调开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。</p><p><strong>持续交付</strong> 在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境的「类生产环境」（production-like environments）中。</p><p><strong>持续部署</strong> 则是在持续交付的基础上，把部署到生产环境的过程自动化。</p><h2 id="Jenkins-基础环境"><a href="#Jenkins-基础环境" class="headerlink" title="Jenkins 基础环境"></a>Jenkins 基础环境</h2><p>Jenkins 使用 Java 编写，支持所有主流操作系统。</p><p>本文仅介绍在 Windows 操作系统下 Jenkins 单机本地部署。</p><p>首先应配置 Java 环境，然后部署 Tomcat 服务。</p><p>然后即可安装 Jenkins 应用。</p><p>安装步骤可参考：<a href="https://www.cnblogs.com/hdwang/p/6081994.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/hdwang/p/6081994.html</a></p><p>最后推荐安装一些工具包括：</p><p>1、Apache Maven 软件（特别是Java软件）项目管理及自动构建工具。</p><p>推荐 Maven 配置镜像。</p><pre><code class="lang-XML">&lt;mirror&gt;    &lt;!--This sends everything else to /public --&gt;    &lt;id&gt;nexus-aliyun&lt;/id&gt;    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;    &lt;name&gt;Nexus aliyun&lt;/name&gt;    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;&lt;/mirror&gt;</code></pre><p>Maven 仓库阿里云镜像配置 - CSDN博客<br><a href="https://blog.csdn.net/cwenyifan/article/details/54864504" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/cwenyifan/article/details/54864504</a></p><p>在公司内部推荐使用</p><pre><code class="lang-XML">&lt;mirror&gt;&lt;id&gt;rnd-[wshunli]&lt;/id&gt;    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;    &lt;name&gt;Maven China Mirror&lt;/name&gt;      &lt;url&gt;http://rnd-mirrors.[wshunli].com/maven/&lt;/url&gt;&lt;/mirror&gt;</code></pre><p>参考链接：MAVEN公司内部镜像配置&amp;Intellij IDEA MAVEN配置 - CE中间件与系统集成 - 3ms知识管理社区<br><a href="http://3ms.[wshunli].com/hi/group/2027489/wiki_4781465.html" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/hi/group/2027489/wiki_4781465.html</a></p><p>2、Git SVN 源代码版本控制工具。</p><p>具体安装配置操作可参考资料。</p><h2 id="Jenkins-全局工具配置"><a href="#Jenkins-全局工具配置" class="headerlink" title="Jenkins 全局工具配置"></a>Jenkins 全局工具配置</h2><p>JDK 配置 JAVA_HOME 目录即可</p><p>比如 <code>C:\Program Files\Java\jdk1.8.0_171</code></p><p>Git 配置 git.exe 文件即可</p><p>比如 <code>C:\Program Files\Git\bin\git.exe</code></p><p>Maven 配置 MAVEN_HOME 目录即可</p><p>比如 <code>D:\apache-maven\</code></p><h2 id="Jenkins-插件管理高级配置"><a href="#Jenkins-插件管理高级配置" class="headerlink" title="Jenkins 插件管理高级配置"></a>Jenkins 插件管理高级配置</h2><p>推荐配置 <strong>升级站点</strong></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.89/update-center.json" rel="external nofollow noopener noreferrer" target="_blank">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.89/update-center.json</a></p><p>公司内部推荐使用</p><p><a href="http://cmc-cd-mirror.rnd.[wshunli].com/jenkins-updates/update-center.json" rel="external nofollow noopener noreferrer" target="_blank">http://cmc-cd-mirror.rnd.[wshunli].com/jenkins-updates/update-center.json</a></p><p>参考链接：公司Jenkins插件中心上线啦，只需两步，免代理配置和漫长等待，轻松实现Jenkins插件在线自动安装和升级 - 刘珍珍的博客<br><a href="http://3ms.[wshunli].com/km/blogs/details/5544279" rel="external nofollow noopener noreferrer" target="_blank">http://3ms.[wshunli].com/km/blogs/details/5544279</a></p><blockquote><p>参考资料<br>1、jenkins详解 - CSDN博客<br><a href="https://blog.csdn.net/qq_26848099/article/details/78901240" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/qq_26848099/article/details/78901240</a><br>2、如何理解持续集成、持续交付、持续部署？ - 知乎<br><a href="https://www.zhihu.com/question/23444990" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/23444990</a><br>3、使用jekins自动构建部署java maven项目（jdk1.7+tomcat7.0+jenkins2.19.3） - 追极 - 博客园<br><a href="https://www.cnblogs.com/hdwang/p/6081994.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/hdwang/p/6081994.html</a><br>4、Jenkins：插件安装失败问题 - 简书<br><a href="https://www.jianshu.com/p/2b7288e77ff8" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/2b7288e77ff8</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Jenkins 是一款优秀的开源自动化服务器，允许持续集成和持续交付。Jenkins 支持数百个插件，以支持项目的构建、部署和自动化。&lt;/p&gt;&lt;p&gt;Jenkins 官网：&lt;a href=&quot;https://jenkins.io/&quot; rel=&quot;external nofollow
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.wshunli.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="Java" scheme="https://www.wshunli.com/tags/Java/"/>
    
      <category term="Jenkins" scheme="https://www.wshunli.com/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>在线直播技术解决方案及其实现方法（移动端）</title>
    <link href="https://www.wshunli.com/posts/8aeeab4a.html"/>
    <id>https://www.wshunli.com/posts/8aeeab4a.html</id>
    <published>2018-07-04T13:40:33.000Z</published>
    <updated>2018-09-07T10:04:32.263Z</updated>
    
    <content type="html"><![CDATA[<p>简单地记录下 Android 移动端直播技术实现方法。</p><p>目前对移动端直播技术实现方法了解还不够全面，本文仅介绍一种基于 RTMP 协议的在线直播实现方法。</p><p>直播系统可以简单地分为三部分：服务端、推流端、拉流端。</p><h1 id="简单的直播系统"><a href="#简单的直播系统" class="headerlink" title="简单的直播系统"></a>简单的直播系统</h1><p>1、服务端：SRS</p><p>SRS定位是运营级的互联网直播服务器集群，追求更好的概念完整性和最简单实现的代码。</p><p>源代码：<a href="https://github.com/ossrs/srs" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ossrs/srs</a></p><p>部署方法：<a href="https://github.com/ossrs/srs/wiki/v1_CN_SampleRTMP" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ossrs/srs/wiki/v1_CN_SampleRTMP</a></p><p>2、推流端：OBS Studio</p><p>OBS Studio 是一款优秀的开源直播推流软件，支持 Windows, Mac or Linux 操作系统。</p><p>官网：<a href="https://obsproject.com/" rel="external nofollow noopener noreferrer" target="_blank">https://obsproject.com/</a></p><p>3、拉流端：VLC media player</p><p>VLC 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。</p><p>官网：<a href="http://www.videolan.org/vlc/" rel="external nofollow noopener noreferrer" target="_blank">http://www.videolan.org/vlc/</a></p><p>其实这里好多视频播放器都支持的。</p><h1 id="移动端实现方法"><a href="#移动端实现方法" class="headerlink" title="移动端实现方法"></a>移动端实现方法</h1><p>1、服务端 SRS</p><p>服务端同样使用 SRS</p><p>2、推流端 yasea</p><p>yasea 是一个优秀的 RTMP 直播流推流库。</p><p>代码仓库：<a href="https://github.com/begeekmyfriend/yasea" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/begeekmyfriend/yasea</a></p><p>3、拉流端 ijkplayer</p><p>使用方法：<a href="https://www.wshunli.com/posts/2f3bf23c.html">https://www.wshunli.com/posts/2f3bf23c.html</a></p><p>源码编译：<a href="https://www.wshunli.com/posts/45f072c2.html">https://www.wshunli.com/posts/45f072c2.html</a></p><p>本文内容比较简单，后面有机会再深入了解。</p><blockquote><p>参考资料<br>1、Android手机直播（一）总览 - 简书<br><a href="https://www.jianshu.com/p/7ebbcc0c5df7" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/7ebbcc0c5df7</a><br>2、轻松入门Android直播相关技术 从0搭建直播系统 - CSDN博客<br><a href="https://blog.csdn.net/lmj623565791/article/details/77937483" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/lmj623565791/article/details/77937483</a><br>3、Android直播实现（一）Android端推流、播放 - CSDN博客<br><a href="https://blog.csdn.net/mr_sk/article/details/71083366" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/mr_sk/article/details/71083366</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单地记录下 Android 移动端直播技术实现方法。&lt;/p&gt;&lt;p&gt;目前对移动端直播技术实现方法了解还不够全面，本文仅介绍一种基于 RTMP 协议的在线直播实现方法。&lt;/p&gt;&lt;p&gt;直播系统可以简单地分为三部分：服务端、推流端、拉流端。&lt;/p&gt;&lt;h1 id=&quot;简单的直播系统&quot;
      
    
    </summary>
    
      <category term="前端技术" scheme="https://www.wshunli.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="视频" scheme="https://www.wshunli.com/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="直播" scheme="https://www.wshunli.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
      <category term="前端" scheme="https://www.wshunli.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>沉迷学术，不可自拔（十）</title>
    <link href="https://www.wshunli.com/posts/4691b5a2.html"/>
    <id>https://www.wshunli.com/posts/4691b5a2.html</id>
    <published>2018-07-03T11:43:13.000Z</published>
    <updated>2018-09-07T10:04:32.263Z</updated>
    
    <content type="html"><![CDATA[<div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 欢迎您访问我的博客，请输入密码查看本文. " /> <label for="pass"> 欢迎您访问我的博客，请输入密码查看本文. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      【加密文章】希望我的坚持，让我走得更高、看得更远
    
    </summary>
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/categories/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
    
      <category term="沉迷学术" scheme="https://www.wshunli.com/tags/%E6%B2%89%E8%BF%B7%E5%AD%A6%E6%9C%AF/"/>
    
      <category term="胡思乱想" scheme="https://www.wshunli.com/tags/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
    
  </entry>
  
</feed>
